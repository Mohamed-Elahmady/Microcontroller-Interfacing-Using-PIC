

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Oct 08 00:13:05 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38   000000                     
    39                           ; Generated 12/10/2023 GMT
    40                           ; 
    41                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F46K20 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73   000000                     
    74                           	psect	idataCOMRAM
    75   001C2A                     __pidataCOMRAM:
    76                           	callstack 0
    77                           
    78                           ;initializer for _LAT_REG
    79   001C2A  89                 	db	137
    80   001C2B  0F                 	db	15
    81   001C2C  8A                 	db	138
    82   001C2D  0F                 	db	15
    83   001C2E  8B                 	db	139
    84   001C2F  0F                 	db	15
    85   001C30  8C                 	db	140
    86   001C31  0F                 	db	15
    87   001C32  8D                 	db	141
    88   001C33  0F                 	db	15
    89                           
    90                           ;initializer for _PORT_REG
    91   001C34  80                 	db	128
    92   001C35  0F                 	db	15
    93   001C36  81                 	db	129
    94   001C37  0F                 	db	15
    95   001C38  82                 	db	130
    96   001C39  0F                 	db	15
    97   001C3A  83                 	db	131
    98   001C3B  0F                 	db	15
    99   001C3C  84                 	db	132
   100   001C3D  0F                 	db	15
   101                           
   102                           ;initializer for _TRIS_REG
   103   001C3E  92                 	db	146
   104   001C3F  0F                 	db	15
   105   001C40  93                 	db	147
   106   001C41  0F                 	db	15
   107   001C42  94                 	db	148
   108   001C43  0F                 	db	15
   109   001C44  95                 	db	149
   110   001C45  0F                 	db	15
   111   001C46  96                 	db	150
   112   001C47  0F                 	db	15
   113                           
   114                           ;initializer for _lcd2
   115   001C48  32                 	db	50
   116   001C49  3A                 	db	58
   117   001C4A  03                 	db	3
   118   001C4B  0B                 	db	11
   119   001C4C  13                 	db	19
   120   001C4D  1B                 	db	27
   121   001C4E  23                 	db	35
   122   001C4F  2B                 	db	43
   123   001C50  33                 	db	51
   124   001C51  3B                 	db	59
   125                           
   126                           ;initializer for _lcd1
   127   001C52  02                 	db	2
   128   001C53  0A                 	db	10
   129   001C54  12                 	db	18
   130   001C55  1A                 	db	26
   131   001C56  22                 	db	34
   132   001C57  2A                 	db	42
   133                           
   134                           	psect	idataBANK0
   135   001AF6                     __pidataBANK0:
   136                           	callstack 0
   137                           
   138                           ;initializer for _completed_heart
   139   001AF6  00                 	db	0
   140   001AF7  00                 	db	0
   141   001AF8  0A                 	db	10
   142   001AF9  1F                 	db	31
   143   001AFA  0E                 	db	14
   144   001AFB  04                 	db	4
   145   001AFC  00                 	db	0
   146   001AFD  00                 	db	0
   147                           
   148                           ;initializer for _right_half
   149   001AFE  00                 	db	0
   150   001AFF  00                 	db	0
   151   001B00  08                 	db	8
   152   001B01  1C                 	db	28
   153   001B02  18                 	db	24
   154   001B03  10                 	db	16
   155   001B04  00                 	db	0
   156   001B05  00                 	db	0
   157                           
   158                           ;initializer for _left_half
   159   001B06  00                 	db	0
   160   001B07  00                 	db	0
   161   001B08  02                 	db	2
   162   001B09  07                 	db	7
   163   001B0A  03                 	db	3
   164   001B0B  01                 	db	1
   165   001B0C  00                 	db	0
   166   001B0D  00                 	db	0
   167                           
   168                           ;initializer for _charge_battery_100
   169   001B0E  0E                 	db	14
   170   001B0F  1F                 	db	31
   171   001B10  1F                 	db	31
   172   001B11  1F                 	db	31
   173   001B12  1F                 	db	31
   174   001B13  1F                 	db	31
   175   001B14  1F                 	db	31
   176   001B15  1F                 	db	31
   177                           
   178                           ;initializer for _charge_battery_75
   179   001B16  0E                 	db	14
   180   001B17  1F                 	db	31
   181   001B18  11                 	db	17
   182   001B19  1F                 	db	31
   183   001B1A  1F                 	db	31
   184   001B1B  1F                 	db	31
   185   001B1C  1F                 	db	31
   186   001B1D  1F                 	db	31
   187                           
   188                           ;initializer for _charge_battery_50
   189   001B1E  0E                 	db	14
   190   001B1F  1F                 	db	31
   191   001B20  11                 	db	17
   192   001B21  11                 	db	17
   193   001B22  1F                 	db	31
   194   001B23  1F                 	db	31
   195   001B24  1F                 	db	31
   196   001B25  1F                 	db	31
   197                           
   198                           ;initializer for _charge_battery_25
   199   001B26  0E                 	db	14
   200   001B27  1F                 	db	31
   201   001B28  11                 	db	17
   202   001B29  11                 	db	17
   203   001B2A  11                 	db	17
   204   001B2B  1F                 	db	31
   205   001B2C  1F                 	db	31
   206   001B2D  1F                 	db	31
   207                           
   208                           ;initializer for _charge_battery_00
   209   001B2E  0E                 	db	14
   210   001B2F  1F                 	db	31
   211   001B30  11                 	db	17
   212   001B31  11                 	db	17
   213   001B32  11                 	db	17
   214   001B33  11                 	db	17
   215   001B34  1F                 	db	31
   216   001B35  1F                 	db	31
   217                           
   218                           	psect	smallconst
   219   001000                     __psmallconst:
   220                           	callstack 0
   221   001000  00                 	db	0
   222   001001                     _KEYPAD_VALUES:
   223                           	callstack 0
   224   001001  37                 	db	55
   225   001002  38                 	db	56
   226   001003  39                 	db	57
   227   001004  2F                 	db	47
   228   001005  34                 	db	52
   229   001006  35                 	db	53
   230   001007  36                 	db	54
   231   001008  2A                 	db	42
   232   001009  31                 	db	49
   233   00100A  32                 	db	50
   234   00100B  33                 	db	51
   235   00100C  2D                 	db	45
   236   00100D  43                 	db	67
   237   00100E  30                 	db	48
   238   00100F  3D                 	db	61
   239   001010  2B                 	db	43
   240   001011                     __end_of_KEYPAD_VALUES:
   241                           	callstack 0
   242   001011                     STR_2:
   243   001011  20                 	db	32
   244   001012  20                 	db	32
   245   001013  20                 	db	32
   246   001014  20                 	db	32
   247   001015  20                 	db	32
   248   001016  20                 	db	32
   249   001017  20                 	db	32
   250   001018  20                 	db	32
   251   001019  20                 	db	32
   252   00101A  20                 	db	32
   253   00101B  20                 	db	32
   254   00101C  20                 	db	32
   255   00101D  20                 	db	32
   256   00101E  20                 	db	32
   257   00101F  20                 	db	32
   258   001020  20                 	db	32
   259   001021  20                 	db	32
   260   001022  20                 	db	32
   261   001023  20                 	db	32
   262   001024  20                 	db	32
   263   001025  00                 	db	0
   264   001026  45                 	db	69	;'E'
   265   001027  6D                 	db	109	;'m'
   266   001028  62                 	db	98	;'b'
   267   001029  65                 	db	101	;'e'
   268   00102A  64                 	db	100	;'d'
   269   00102B  64                 	db	100	;'d'
   270   00102C  65                 	db	101	;'e'
   271   00102D  64                 	db	100	;'d'
   272   00102E  5F                 	db	95	;'_'
   273   00102F  44                 	db	68	;'D'
   274   001030  69                 	db	105	;'i'
   275   001031  70                 	db	112	;'p'
   276   001032  6C                 	db	108	;'l'
   277   001033  6F                 	db	111	;'o'
   278   001034  6D                 	db	109	;'m'
   279   001035  61                 	db	97	;'a'
   280   001036  00                 	db	0
   281   001037                     STR_1:
   282   001037  48                 	db	72	;'H'
   283   001038  45                 	db	69	;'E'
   284   001039  4C                 	db	76	;'L'
   285   00103A  4C                 	db	76	;'L'
   286   00103B  4F                 	db	79	;'O'
   287   00103C  5F                 	db	95	;'_'
   288   00103D  41                 	db	65	;'A'
   289   00103E  4C                 	db	76	;'L'
   290   00103F  4C                 	db	76	;'L'
   291   001040  00                 	db	0
   292   001041  4C                 	db	76	;'L'
   293   001042  6F                 	db	111	;'o'
   294   001043  61                 	db	97	;'a'
   295   001044  64                 	db	100	;'d'
   296   001045  69                 	db	105	;'i'
   297   001046  6E                 	db	110	;'n'
   298   001047  67                 	db	103	;'g'
   299   001048  00                 	db	0
   300   001049                     STR_8:
   301   001049  25                 	db	37
   302   00104A  69                 	db	105	;'i'
   303   00104B  00                 	db	0
   304   00104C  00                 	db	0	; dummy byte at the end
   305   000000                     
   306                           	psect	nvCOMRAM
   307   00005A                     __pnvCOMRAM:
   308                           	callstack 0
   309   00005A                     _Ret:
   310                           	callstack 0
   311   00005A                     	ds	1
   312   000000                     _PORTA	set	3968
   313   000000                     _TRISA	set	3986
   314   000000                     _TRISE	set	3990
   315   000000                     _TRISD	set	3989
   316   000000                     _TRISC	set	3988
   317   000000                     _TRISB	set	3987
   318   000000                     _LATA	set	3977
   319   000000                     _PORTE	set	3972
   320   000000                     _PORTD	set	3971
   321   000000                     _PORTC	set	3970
   322   000000                     _PORTB	set	3969
   323   000000                     _LATE	set	3981
   324   000000                     _LATD	set	3980
   325   000000                     _LATC	set	3979
   326   000000                     _LATB	set	3978
   327                           
   328                           ; #config settings
   329                           
   330                           	psect	cinit
   331   001AA0                     __pcinit:
   332                           	callstack 0
   333   001AA0                     start_initialization:
   334                           	callstack 0
   335   001AA0                     __initialization:
   336                           	callstack 0
   337                           
   338                           ; Initialize objects allocated to BANK0 (64 bytes)
   339                           ; load TBLPTR registers with __pidataBANK0
   340   001AA0  0EF6               	movlw	low __pidataBANK0
   341   001AA2  6EF6               	movwf	tblptrl,c
   342   001AA4  0E1A               	movlw	high __pidataBANK0
   343   001AA6  6EF7               	movwf	tblptrh,c
   344   001AA8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   345   001AAA  6EF8               	movwf	tblptru,c
   346   001AAC  EE00  F060         	lfsr	0,__pdataBANK0
   347   001AB0  EE10 F040          	lfsr	1,64
   348   001AB4                     copy_data0:
   349   001AB4  0009               	tblrd		*+
   350   001AB6  CFF5 FFEE          	movff	tablat,postinc0
   351   001ABA  50E5               	movf	postdec1,w,c
   352   001ABC  50E1               	movf	fsr1l,w,c
   353   001ABE  E1FA               	bnz	copy_data0
   354                           
   355                           ; Initialize objects allocated to COMRAM (46 bytes)
   356                           ; load TBLPTR registers with __pidataCOMRAM
   357   001AC0  0E2A               	movlw	low __pidataCOMRAM
   358   001AC2  6EF6               	movwf	tblptrl,c
   359   001AC4  0E1C               	movlw	high __pidataCOMRAM
   360   001AC6  6EF7               	movwf	tblptrh,c
   361   001AC8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   362   001ACA  6EF8               	movwf	tblptru,c
   363   001ACC  EE00  F001         	lfsr	0,__pdataCOMRAM
   364   001AD0  EE10 F02E          	lfsr	1,46
   365   001AD4                     copy_data1:
   366   001AD4  0009               	tblrd		*+
   367   001AD6  CFF5 FFEE          	movff	tablat,postinc0
   368   001ADA  50E5               	movf	postdec1,w,c
   369   001ADC  50E1               	movf	fsr1l,w,c
   370   001ADE  E1FA               	bnz	copy_data1
   371                           
   372                           ; Clear objects allocated to COMRAM (7 bytes)
   373   001AE0  EE00  F053         	lfsr	0,__pbssCOMRAM
   374   001AE4  0E07               	movlw	7
   375   001AE6                     clear_0:
   376   001AE6  6AEE               	clrf	postinc0,c
   377   001AE8  06E8               	decf	wreg,f,c
   378   001AEA  E1FD               	bnz	clear_0
   379   001AEC                     end_of_initialization:
   380                           	callstack 0
   381   001AEC                     __end_of__initialization:
   382                           	callstack 0
   383   001AEC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   384   001AEE  6EF8               	movwf	tblptru,c
   385   001AF0  0100               	movlb	0
   386   001AF2  EF27  F008         	goto	_main	;jump to C main() function
   387                           
   388                           	psect	bssCOMRAM
   389   000053                     __pbssCOMRAM:
   390                           	callstack 0
   391   000053                     RELAY_TURN_OFF@F3749:
   392                           	callstack 0
   393   000053                     	ds	1
   394   000054                     RELAY_TURN_ON@F3743:
   395                           	callstack 0
   396   000054                     	ds	1
   397   000055                     RELAY_INITIALIZE@F3737:
   398                           	callstack 0
   399   000055                     	ds	1
   400   000056                     LED_TOGGLE@F3754:
   401                           	callstack 0
   402   000056                     	ds	1
   403   000057                     LED_Turn_OFF@F3749:
   404                           	callstack 0
   405   000057                     	ds	1
   406   000058                     LED_Turn_ON@F3744:
   407                           	callstack 0
   408   000058                     	ds	1
   409   000059                     LED_INITIALIZE@F3739:
   410                           	callstack 0
   411   000059                     	ds	1
   412                           
   413                           	psect	dataCOMRAM
   414   000001                     __pdataCOMRAM:
   415                           	callstack 0
   416   000001                     _LAT_REG:
   417                           	callstack 0
   418   000001                     	ds	10
   419   00000B                     _PORT_REG:
   420                           	callstack 0
   421   00000B                     	ds	10
   422   000015                     _TRIS_REG:
   423                           	callstack 0
   424   000015                     	ds	10
   425   00001F                     _lcd2:
   426                           	callstack 0
   427   00001F                     	ds	10
   428   000029                     _lcd1:
   429                           	callstack 0
   430   000029                     	ds	6
   431                           
   432                           	psect	dataBANK0
   433   000060                     __pdataBANK0:
   434                           	callstack 0
   435   000060                     _completed_heart:
   436                           	callstack 0
   437   000060                     	ds	8
   438   000068                     _right_half:
   439                           	callstack 0
   440   000068                     	ds	8
   441   000070                     _left_half:
   442                           	callstack 0
   443   000070                     	ds	8
   444   000078                     _charge_battery_100:
   445                           	callstack 0
   446   000078                     	ds	8
   447   000080                     _charge_battery_75:
   448                           	callstack 0
   449   000080                     	ds	8
   450   000088                     _charge_battery_50:
   451                           	callstack 0
   452   000088                     	ds	8
   453   000090                     _charge_battery_25:
   454                           	callstack 0
   455   000090                     	ds	8
   456   000098                     _charge_battery_00:
   457                           	callstack 0
   458   000098                     	ds	8
   459                           
   460                           	psect	cstackCOMRAM
   461   00002F                     __pcstackCOMRAM:
   462                           	callstack 0
   463   00002F                     GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG:
   464                           	callstack 0
   465   00002F                     GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0x0
   469   00002F                     	ds	1
   470   000030                     ??_GPIO_PIN_DIRECTION_INITIALIZE:
   471   000030                     GPIO_PIN_WRITE_LOGIC@LOGIC:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0x1
   475   000030                     	ds	1
   476   000031                     ??_GPIO_PIN_WRITE_LOGIC:
   477                           
   478                           ; 1 bytes @ 0x2
   479   000031                     	ds	4
   480   000035                     GPIO_PIN_DIRECTION_INITIALIZE@Retval:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0x6
   484   000035                     	ds	1
   485   000036                     GPIO_PIN_WRITE_LOGIC@Retval:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0x7
   489   000036                     	ds	1
   490   000037                     GPIO_PIN_INITIALIZE@_PIN_CONFIG:
   491                           	callstack 0
   492   000037                     lcd_send_4bits@lcd:
   493                           	callstack 0
   494   000037                     lcd_4bit_send_enable_signal@lcd:
   495                           	callstack 0
   496   000037                     lcd_8bit_send_enable_signal@lcd:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0x8
   500   000037                     	ds	1
   501   000038                     ??_GPIO_PIN_INITIALIZE:
   502   000038                     lcd_send_4bits@_data_command:
   503                           	callstack 0
   504   000038                     lcd_4bit_send_enable_signal@Retval:
   505                           	callstack 0
   506   000038                     lcd_8bit_send_enable_signal@Retval:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x9
   510   000038                     	ds	1
   511   000039                     ??_lcd_send_4bits:
   512   000039                     GPIO_PIN_INITIALIZE@Retval:
   513                           	callstack 0
   514   000039                     LCD_8BIT_SEND_COMMAND@lcd:
   515                           	callstack 0
   516   000039                     LCD_8BIT_SEND_CHARACTER_DATA@lcd:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0xA
   520   000039                     	ds	1
   521   00003A                     LCD_8BIT_SEND_COMMAND@command:
   522                           	callstack 0
   523   00003A                     LCD_8BIT_SEND_CHARACTER_DATA@data:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0xB
   527   00003A                     	ds	1
   528   00003B                     ??_LCD_8BIT_SEND_COMMAND:
   529   00003B                     ??_LCD_8BIT_SEND_CHARACTER_DATA:
   530   00003B                     lcd_send_4bits@Retval:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0xC
   534   00003B                     	ds	1
   535   00003C                     lcd_send_4bits@i:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0xD
   539   00003C                     	ds	1
   540   00003D                     LCD_8BIT_SEND_COMMAND@Retval:
   541                           	callstack 0
   542   00003D                     LCD_8BIT_SEND_CHARACTER_DATA@Retval:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0xE
   546   00003D                     	ds	1
   547   00003E                     LCD_4BIT_SEND_COMMAND@lcd:
   548                           	callstack 0
   549   00003E                     LCD_4BIT_SEND_CHARACTER_DATA@lcd:
   550                           	callstack 0
   551   00003E                     LCD_8BIT_SEND_COMMAND@i:
   552                           	callstack 0
   553   00003E                     LCD_8BIT_SEND_CHARACTER_DATA@i:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0xF
   557   00003E                     	ds	1
   558   00003F                     LCD_4BIT_SEND_COMMAND@command:
   559                           	callstack 0
   560   00003F                     LCD_4BIT_SEND_CHARACTER_DATA@data:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x10
   564   00003F                     	ds	1
   565   000040                     lcd_8bit_set_cursor@lcd:
   566                           	callstack 0
   567   000040                     LCD_4BIT_SEND_COMMAND@Retval:
   568                           	callstack 0
   569   000040                     LCD_4BIT_SEND_CHARACTER_DATA@Retval:
   570                           	callstack 0
   571   000040                     LCD_8BIT_INITIALIZE@lcd:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0x11
   575   000040                     	ds	1
   576   000041                     ??_LCD_8BIT_INITIALIZE:
   577   000041                     lcd_4bit_set_cursor@lcd:
   578                           	callstack 0
   579   000041                     lcd_8bit_set_cursor@row:
   580                           	callstack 0
   581   000041                     LCD_4BIT_INITIALIZE@lcd:
   582                           	callstack 0
   583                           
   584                           ; 1 bytes @ 0x12
   585   000041                     	ds	1
   586   000042                     ??_LCD_4BIT_INITIALIZE:
   587   000042                     lcd_4bit_set_cursor@row:
   588                           	callstack 0
   589   000042                     lcd_8bit_set_cursor@column:
   590                           	callstack 0
   591   000042                     LCD_8BIT_INITIALIZE@i:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x13
   595   000042                     	ds	1
   596   000043                     lcd_4bit_set_cursor@column:
   597                           	callstack 0
   598   000043                     lcd_8bit_set_cursor@Retval:
   599                           	callstack 0
   600   000043                     LCD_4BIT_INITIALIZE@i:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x14
   604   000043                     	ds	1
   605   000044                     lcd_4bit_set_cursor@Retval:
   606                           	callstack 0
   607   000044                     LCD_8BIT_INITIALIZE@Retval:
   608                           	callstack 0
   609   000044                     LCD_8BIT_SEND_CHARACTER_DATA_POS@lcd:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0x15
   613   000044                     	ds	1
   614   000045                     LCD_4BIT_INITIALIZE@Retval:
   615                           	callstack 0
   616   000045                     LCD_4BIT_SEND_CHARACTER_DATA_POS@lcd:
   617                           	callstack 0
   618   000045                     LCD_8BIT_SEND_CHARACTER_DATA_POS@row:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x16
   622   000045                     	ds	1
   623   000046                     LCD_4BIT_SEND_CHARACTER_DATA_POS@row:
   624                           	callstack 0
   625   000046                     LCD_8BIT_SEND_CHARACTER_DATA_POS@column:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x17
   629   000046                     	ds	1
   630   000047                     LCD_4BIT_SEND_CHARACTER_DATA_POS@column:
   631                           	callstack 0
   632   000047                     LCD_8BIT_SEND_CHARACTER_DATA_POS@data:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0x18
   636   000047                     	ds	1
   637   000048                     LCD_4BIT_SEND_CHARACTER_DATA_POS@data:
   638                           	callstack 0
   639   000048                     LCD_8BIT_SEND_CHARACTER_DATA_POS@Retval:
   640                           	callstack 0
   641                           
   642                           ; 1 bytes @ 0x19
   643   000048                     	ds	1
   644   000049                     LCD_4BIT_SEND_CHARACTER_DATA_POS@Retval:
   645                           	callstack 0
   646   000049                     LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0x1A
   650   000049                     	ds	1
   651   00004A                     LCD_4BIT_SEND_CUSTOM_CHARACTER@lcd:
   652                           	callstack 0
   653   00004A                     LCD_8BIT_SEND_CUSTOM_CHARACTER@row:
   654                           	callstack 0
   655                           
   656                           ; 1 bytes @ 0x1B
   657   00004A                     	ds	1
   658   00004B                     LCD_4BIT_SEND_CUSTOM_CHARACTER@row:
   659                           	callstack 0
   660   00004B                     LCD_8BIT_SEND_CUSTOM_CHARACTER@column:
   661                           	callstack 0
   662                           
   663                           ; 1 bytes @ 0x1C
   664   00004B                     	ds	1
   665   00004C                     LCD_4BIT_SEND_CUSTOM_CHARACTER@column:
   666                           	callstack 0
   667   00004C                     LCD_8BIT_SEND_CUSTOM_CHARACTER@chr:
   668                           	callstack 0
   669                           
   670                           ; 1 bytes @ 0x1D
   671   00004C                     	ds	1
   672   00004D                     LCD_4BIT_SEND_CUSTOM_CHARACTER@chr:
   673                           	callstack 0
   674   00004D                     LCD_8BIT_SEND_CUSTOM_CHARACTER@mem_pos:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0x1E
   678   00004D                     	ds	1
   679   00004E                     LCD_4BIT_SEND_CUSTOM_CHARACTER@mem_pos:
   680                           	callstack 0
   681   00004E                     LCD_8BIT_SEND_CUSTOM_CHARACTER@Retval:
   682                           	callstack 0
   683                           
   684                           ; 1 bytes @ 0x1F
   685   00004E                     	ds	1
   686   00004F                     LCD_4BIT_SEND_CUSTOM_CHARACTER@Retval:
   687                           	callstack 0
   688   00004F                     LCD_8BIT_SEND_CUSTOM_CHARACTER@i:
   689                           	callstack 0
   690                           
   691                           ; 1 bytes @ 0x20
   692   00004F                     	ds	1
   693   000050                     LCD_4BIT_SEND_CUSTOM_CHARACTER@i:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0x21
   697   000050                     	ds	1
   698   000051                     ??_main:
   699                           
   700                           ; 1 bytes @ 0x22
   701   000051                     	ds	2
   702                           
   703 ;;
   704 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   705 ;;
   706 ;; *************** function _main *****************
   707 ;; Defined at:
   708 ;;		line 26 in file "Drivers_Main.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;		None
   711 ;; Auto vars:     Size  Location     Type
   712 ;;		None
   713 ;; Return value:  Size  Location     Type
   714 ;;                  2  335[None  ] int 
   715 ;; Registers used:
   716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   724 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   726 ;;Total ram usage:        2 bytes
   727 ;; Hardware stack levels required when called: 6
   728 ;; This function calls:
   729 ;;		_Application_intialize
   730 ;;		_LCD_4BIT_SEND_CUSTOM_CHARACTER
   731 ;;		_LCD_8BIT_SEND_CUSTOM_CHARACTER
   732 ;; This function is called by:
   733 ;;		Startup code after reset
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           	psect	text0
   738   00104E                     __ptext0:
   739                           	callstack 0
   740   00104E                     _main:
   741                           	callstack 25
   742   00104E                     
   743                           ;Drivers_Main.c: 27:     Application_intialize();
   744   00104E  EC35  F00E         	call	_Application_intialize	;wreg free
   745   001052                     l336:
   746                           
   747                           ;Drivers_Main.c: 37:         Ret = LCD_4BIT_SEND_CUSTOM_CHARACTER(&lcd1 , 1 , 20 , charg
      +                          e_battery_00 , 0x00 );
   748   001052  0E29               	movlw	low _lcd1
   749   001054  6E4A               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@lcd^0,c
   750   001056  0E01               	movlw	1
   751   001058  6E4B               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@row^0,c
   752   00105A  0E14               	movlw	20
   753   00105C  6E4C               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@column^0,c
   754   00105E  0E98               	movlw	low _charge_battery_00
   755   001060  6E4D               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@chr^0,c
   756   001062  0E00               	movlw	0
   757   001064  6E4E               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@mem_pos^0,c
   758   001066  EC8E  F00C         	call	_LCD_4BIT_SEND_CUSTOM_CHARACTER	;wreg free
   759   00106A  6E5A               	movwf	_Ret^0,c
   760                           
   761                           ;Drivers_Main.c: 38:         Ret = LCD_8BIT_SEND_CUSTOM_CHARACTER(&lcd2 , 1 , 20 , charg
      +                          e_battery_00 , 0x00 );
   762   00106C  0E1F               	movlw	low _lcd2
   763   00106E  6E49               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd^0,c
   764   001070  0E01               	movlw	1
   765   001072  6E4A               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@row^0,c
   766   001074  0E14               	movlw	20
   767   001076  6E4B               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@column^0,c
   768   001078  0E98               	movlw	low _charge_battery_00
   769   00107A  6E4C               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@chr^0,c
   770   00107C  0E00               	movlw	0
   771   00107E  6E4D               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@mem_pos^0,c
   772   001080  EC57  F00C         	call	_LCD_8BIT_SEND_CUSTOM_CHARACTER	;wreg free
   773   001084  6E5A               	movwf	_Ret^0,c
   774   001086                     
   775                           ;Drivers_Main.c: 39:         _delay((unsigned long)((500)*(8000000UL/4000.0)));
   776   001086  0E06               	movlw	6
   777   001088  6E52               	movwf	(??_main+1)^0,c
   778   00108A  0E13               	movlw	19
   779   00108C  6E51               	movwf	??_main^0,c
   780   00108E  0EAE               	movlw	174
   781   001090                     u2007:
   782   001090  2EE8               	decfsz	wreg,f,c
   783   001092  D7FE               	bra	u2007
   784   001094  2E51               	decfsz	??_main^0,f,c
   785   001096  D7FC               	bra	u2007
   786   001098  2E52               	decfsz	(??_main+1)^0,f,c
   787   00109A  D7FA               	bra	u2007
   788   00109C                     
   789                           ;Drivers_Main.c: 40:         Ret = LCD_4BIT_SEND_CUSTOM_CHARACTER(&lcd1 , 1 , 20 , charg
      +                          e_battery_25 , 0x01 );
   790   00109C  0E29               	movlw	low _lcd1
   791   00109E  6E4A               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@lcd^0,c
   792   0010A0  0E01               	movlw	1
   793   0010A2  6E4B               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@row^0,c
   794   0010A4  0E14               	movlw	20
   795   0010A6  6E4C               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@column^0,c
   796   0010A8  0E90               	movlw	low _charge_battery_25
   797   0010AA  6E4D               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@chr^0,c
   798   0010AC  0E01               	movlw	1
   799   0010AE  6E4E               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@mem_pos^0,c
   800   0010B0  EC8E  F00C         	call	_LCD_4BIT_SEND_CUSTOM_CHARACTER	;wreg free
   801   0010B4  6E5A               	movwf	_Ret^0,c
   802   0010B6                     
   803                           ;Drivers_Main.c: 41:         Ret = LCD_8BIT_SEND_CUSTOM_CHARACTER(&lcd2 , 1 , 20 , charg
      +                          e_battery_25 , 0x01 );
   804   0010B6  0E1F               	movlw	low _lcd2
   805   0010B8  6E49               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd^0,c
   806   0010BA  0E01               	movlw	1
   807   0010BC  6E4A               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@row^0,c
   808   0010BE  0E14               	movlw	20
   809   0010C0  6E4B               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@column^0,c
   810   0010C2  0E90               	movlw	low _charge_battery_25
   811   0010C4  6E4C               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@chr^0,c
   812   0010C6  0E01               	movlw	1
   813   0010C8  6E4D               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@mem_pos^0,c
   814   0010CA  EC57  F00C         	call	_LCD_8BIT_SEND_CUSTOM_CHARACTER	;wreg free
   815   0010CE  6E5A               	movwf	_Ret^0,c
   816   0010D0                     
   817                           ;Drivers_Main.c: 42:         _delay((unsigned long)((500)*(8000000UL/4000.0)));
   818   0010D0  0E06               	movlw	6
   819   0010D2  6E52               	movwf	(??_main+1)^0,c
   820   0010D4  0E13               	movlw	19
   821   0010D6  6E51               	movwf	??_main^0,c
   822   0010D8  0EAE               	movlw	174
   823   0010DA                     u2017:
   824   0010DA  2EE8               	decfsz	wreg,f,c
   825   0010DC  D7FE               	bra	u2017
   826   0010DE  2E51               	decfsz	??_main^0,f,c
   827   0010E0  D7FC               	bra	u2017
   828   0010E2  2E52               	decfsz	(??_main+1)^0,f,c
   829   0010E4  D7FA               	bra	u2017
   830                           
   831                           ;Drivers_Main.c: 43:         Ret = LCD_4BIT_SEND_CUSTOM_CHARACTER(&lcd1 , 1 , 20 , charg
      +                          e_battery_50 , 0x02 );
   832   0010E6  0E29               	movlw	low _lcd1
   833   0010E8  6E4A               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@lcd^0,c
   834   0010EA  0E01               	movlw	1
   835   0010EC  6E4B               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@row^0,c
   836   0010EE  0E14               	movlw	20
   837   0010F0  6E4C               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@column^0,c
   838   0010F2  0E88               	movlw	low _charge_battery_50
   839   0010F4  6E4D               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@chr^0,c
   840   0010F6  0E02               	movlw	2
   841   0010F8  6E4E               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@mem_pos^0,c
   842   0010FA  EC8E  F00C         	call	_LCD_4BIT_SEND_CUSTOM_CHARACTER	;wreg free
   843   0010FE  6E5A               	movwf	_Ret^0,c
   844                           
   845                           ;Drivers_Main.c: 44:         Ret = LCD_8BIT_SEND_CUSTOM_CHARACTER(&lcd2 , 1 , 20 , charg
      +                          e_battery_50 , 0x02 );
   846   001100  0E1F               	movlw	low _lcd2
   847   001102  6E49               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd^0,c
   848   001104  0E01               	movlw	1
   849   001106  6E4A               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@row^0,c
   850   001108  0E14               	movlw	20
   851   00110A  6E4B               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@column^0,c
   852   00110C  0E88               	movlw	low _charge_battery_50
   853   00110E  6E4C               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@chr^0,c
   854   001110  0E02               	movlw	2
   855   001112  6E4D               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@mem_pos^0,c
   856   001114  EC57  F00C         	call	_LCD_8BIT_SEND_CUSTOM_CHARACTER	;wreg free
   857   001118  6E5A               	movwf	_Ret^0,c
   858   00111A                     
   859                           ;Drivers_Main.c: 45:         _delay((unsigned long)((500)*(8000000UL/4000.0)));
   860   00111A  0E06               	movlw	6
   861   00111C  6E52               	movwf	(??_main+1)^0,c
   862   00111E  0E13               	movlw	19
   863   001120  6E51               	movwf	??_main^0,c
   864   001122  0EAE               	movlw	174
   865   001124                     u2027:
   866   001124  2EE8               	decfsz	wreg,f,c
   867   001126  D7FE               	bra	u2027
   868   001128  2E51               	decfsz	??_main^0,f,c
   869   00112A  D7FC               	bra	u2027
   870   00112C  2E52               	decfsz	(??_main+1)^0,f,c
   871   00112E  D7FA               	bra	u2027
   872   001130                     
   873                           ;Drivers_Main.c: 46:         Ret = LCD_4BIT_SEND_CUSTOM_CHARACTER(&lcd1 , 1 , 20 , charg
      +                          e_battery_75 , 0x03 );
   874   001130  0E29               	movlw	low _lcd1
   875   001132  6E4A               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@lcd^0,c
   876   001134  0E01               	movlw	1
   877   001136  6E4B               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@row^0,c
   878   001138  0E14               	movlw	20
   879   00113A  6E4C               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@column^0,c
   880   00113C  0E80               	movlw	low _charge_battery_75
   881   00113E  6E4D               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@chr^0,c
   882   001140  0E03               	movlw	3
   883   001142  6E4E               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@mem_pos^0,c
   884   001144  EC8E  F00C         	call	_LCD_4BIT_SEND_CUSTOM_CHARACTER	;wreg free
   885   001148  6E5A               	movwf	_Ret^0,c
   886   00114A                     
   887                           ;Drivers_Main.c: 47:         Ret = LCD_8BIT_SEND_CUSTOM_CHARACTER(&lcd2 , 1 , 20 , charg
      +                          e_battery_75 , 0x03 );
   888   00114A  0E1F               	movlw	low _lcd2
   889   00114C  6E49               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd^0,c
   890   00114E  0E01               	movlw	1
   891   001150  6E4A               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@row^0,c
   892   001152  0E14               	movlw	20
   893   001154  6E4B               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@column^0,c
   894   001156  0E80               	movlw	low _charge_battery_75
   895   001158  6E4C               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@chr^0,c
   896   00115A  0E03               	movlw	3
   897   00115C  6E4D               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@mem_pos^0,c
   898   00115E  EC57  F00C         	call	_LCD_8BIT_SEND_CUSTOM_CHARACTER	;wreg free
   899   001162  6E5A               	movwf	_Ret^0,c
   900   001164                     
   901                           ;Drivers_Main.c: 48:         _delay((unsigned long)((500)*(8000000UL/4000.0)));
   902   001164  0E06               	movlw	6
   903   001166  6E52               	movwf	(??_main+1)^0,c
   904   001168  0E13               	movlw	19
   905   00116A  6E51               	movwf	??_main^0,c
   906   00116C  0EAE               	movlw	174
   907   00116E                     u2037:
   908   00116E  2EE8               	decfsz	wreg,f,c
   909   001170  D7FE               	bra	u2037
   910   001172  2E51               	decfsz	??_main^0,f,c
   911   001174  D7FC               	bra	u2037
   912   001176  2E52               	decfsz	(??_main+1)^0,f,c
   913   001178  D7FA               	bra	u2037
   914                           
   915                           ;Drivers_Main.c: 49:         Ret = LCD_4BIT_SEND_CUSTOM_CHARACTER(&lcd1 , 1 , 20 , charg
      +                          e_battery_100 , 0x04 );
   916   00117A  0E29               	movlw	low _lcd1
   917   00117C  6E4A               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@lcd^0,c
   918   00117E  0E01               	movlw	1
   919   001180  6E4B               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@row^0,c
   920   001182  0E14               	movlw	20
   921   001184  6E4C               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@column^0,c
   922   001186  0E78               	movlw	low _charge_battery_100
   923   001188  6E4D               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@chr^0,c
   924   00118A  0E04               	movlw	4
   925   00118C  6E4E               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@mem_pos^0,c
   926   00118E  EC8E  F00C         	call	_LCD_4BIT_SEND_CUSTOM_CHARACTER	;wreg free
   927   001192  6E5A               	movwf	_Ret^0,c
   928                           
   929                           ;Drivers_Main.c: 50:         Ret = LCD_8BIT_SEND_CUSTOM_CHARACTER(&lcd2 , 1 , 20 , charg
      +                          e_battery_100 , 0x04 );
   930   001194  0E1F               	movlw	low _lcd2
   931   001196  6E49               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd^0,c
   932   001198  0E01               	movlw	1
   933   00119A  6E4A               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@row^0,c
   934   00119C  0E14               	movlw	20
   935   00119E  6E4B               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@column^0,c
   936   0011A0  0E78               	movlw	low _charge_battery_100
   937   0011A2  6E4C               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@chr^0,c
   938   0011A4  0E04               	movlw	4
   939   0011A6  6E4D               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@mem_pos^0,c
   940   0011A8  EC57  F00C         	call	_LCD_8BIT_SEND_CUSTOM_CHARACTER	;wreg free
   941   0011AC  6E5A               	movwf	_Ret^0,c
   942   0011AE                     
   943                           ;Drivers_Main.c: 51:         _delay((unsigned long)((500)*(8000000UL/4000.0)));
   944   0011AE  0E06               	movlw	6
   945   0011B0  6E52               	movwf	(??_main+1)^0,c
   946   0011B2  0E13               	movlw	19
   947   0011B4  6E51               	movwf	??_main^0,c
   948   0011B6  0EAE               	movlw	174
   949   0011B8                     u2047:
   950   0011B8  2EE8               	decfsz	wreg,f,c
   951   0011BA  D7FE               	bra	u2047
   952   0011BC  2E51               	decfsz	??_main^0,f,c
   953   0011BE  D7FC               	bra	u2047
   954   0011C0  2E52               	decfsz	(??_main+1)^0,f,c
   955   0011C2  D7FA               	bra	u2047
   956   0011C4  EF29  F008         	goto	l336
   957   0011C8  EF02  F000         	goto	start
   958   0011CC                     __end_of_main:
   959                           	callstack 0
   960                           
   961 ;; *************** function _LCD_8BIT_SEND_CUSTOM_CHARACTER *****************
   962 ;; Defined at:
   963 ;;		line 326 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;  lcd             1   26[COMRAM] PTR const struct .
   966 ;;		 -> lcd2(10), 
   967 ;;  row             1   27[COMRAM] unsigned char 
   968 ;;  column          1   28[COMRAM] unsigned char 
   969 ;;  chr             1   29[COMRAM] PTR unsigned char 
   970 ;;		 -> charge_battery_100(8), charge_battery_75(8), charge_battery_50(8), charge_battery_25(8), 
   971 ;;		 -> charge_battery_00(8), 
   972 ;;  mem_pos         1   30[COMRAM] unsigned char 
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  i               1   32[COMRAM] unsigned char 
   975 ;;  Retval          1   31[COMRAM] enum E3654
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      enum E3654
   978 ;; Registers used:
   979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   985 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   986 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   988 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   989 ;;Total ram usage:        7 bytes
   990 ;; Hardware stack levels used: 1
   991 ;; Hardware stack levels required when called: 5
   992 ;; This function calls:
   993 ;;		_LCD_8BIT_SEND_CHARACTER_DATA
   994 ;;		_LCD_8BIT_SEND_CHARACTER_DATA_POS
   995 ;;		_LCD_8BIT_SEND_COMMAND
   996 ;; This function is called by:
   997 ;;		_main
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text1
  1002   0018AE                     __ptext1:
  1003                           	callstack 0
  1004   0018AE                     _LCD_8BIT_SEND_CUSTOM_CHARACTER:
  1005                           	callstack 25
  1006   0018AE                     
  1007                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 328:     if(((void*)0) == lcd){
  1008   0018AE  5049               	movf	LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd^0,w,c
  1009   0018B0  A4D8               	btfss	status,2,c
  1010   0018B2  EF5D  F00C         	goto	u1491
  1011   0018B6  EF5F  F00C         	goto	u1490
  1012   0018BA                     u1491:
  1013   0018BA  EF63  F00C         	goto	l2605
  1014   0018BE                     u1490:
  1015   0018BE                     
  1016                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 329:         Retval = E_NOT_OK;
  1017   0018BE  0E00               	movlw	0
  1018   0018C0  6E4E               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@Retval^0,c
  1019                           
  1020                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 330:     }
  1021   0018C2  EF8C  F00C         	goto	l2621
  1022   0018C6                     l2605:
  1023   0018C6  C049  F039         	movff	LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd,LCD_8BIT_SEND_COMMAND@lcd
  1024   0018CA  504D               	movf	LCD_8BIT_SEND_CUSTOM_CHARACTER@mem_pos^0,w,c
  1025   0018CC  0D08               	mullw	8
  1026   0018CE  50F3               	movf	243,w,c
  1027   0018D0  0F40               	addlw	64
  1028   0018D2  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  1029   0018D4  ECDD  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  1030   0018D8                     
  1031                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 333:         for(uint8 i = 0 ; i < 8 ; i++){
  1032   0018D8  0E00               	movlw	0
  1033   0018DA  6E4F               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@i^0,c
  1034   0018DC                     l2613:
  1035   0018DC  C049  F039         	movff	LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd,LCD_8BIT_SEND_CHARACTER_DATA@lcd
  1036   0018E0  504C               	movf	LCD_8BIT_SEND_CUSTOM_CHARACTER@chr^0,w,c
  1037   0018E2  244F               	addwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@i^0,w,c
  1038   0018E4  6ED9               	movwf	fsr2l,c
  1039   0018E6  6ADA               	clrf	fsr2h,c
  1040   0018E8  50DF               	movf	indf2,w,c
  1041   0018EA  6E3A               	movwf	LCD_8BIT_SEND_CHARACTER_DATA@data^0,c
  1042   0018EC  EC9B  F00B         	call	_LCD_8BIT_SEND_CHARACTER_DATA	;wreg free
  1043   0018F0                     
  1044                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 335:         }
  1045   0018F0  2A4F               	incf	LCD_8BIT_SEND_CUSTOM_CHARACTER@i^0,f,c
  1046   0018F2  0E07               	movlw	7
  1047   0018F4  644F               	cpfsgt	LCD_8BIT_SEND_CUSTOM_CHARACTER@i^0,c
  1048   0018F6  EF7F  F00C         	goto	u1501
  1049   0018FA  EF81  F00C         	goto	u1500
  1050   0018FE                     u1501:
  1051   0018FE  EF6E  F00C         	goto	l2613
  1052   001902                     u1500:
  1053   001902                     
  1054                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 336:         Retval = LCD_8BIT_SEND_CHARACTER_DATA_POS(lcd
      +                           , row , column , mem_pos);
  1055   001902  C049  F044         	movff	LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd,LCD_8BIT_SEND_CHARACTER_DATA_POS@lcd
  1056   001906  C04A  F045         	movff	LCD_8BIT_SEND_CUSTOM_CHARACTER@row,LCD_8BIT_SEND_CHARACTER_DATA_POS@row
  1057   00190A  C04B  F046         	movff	LCD_8BIT_SEND_CUSTOM_CHARACTER@column,LCD_8BIT_SEND_CHARACTER_DATA_POS@column
  1058   00190E  C04D  F047         	movff	LCD_8BIT_SEND_CUSTOM_CHARACTER@mem_pos,LCD_8BIT_SEND_CHARACTER_DATA_POS@data
  1059   001912  ECD9  F00D         	call	_LCD_8BIT_SEND_CHARACTER_DATA_POS	;wreg free
  1060   001916  6E4E               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@Retval^0,c
  1061   001918                     l2621:
  1062                           
  1063                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 338:     return Retval;
  1064   001918  504E               	movf	LCD_8BIT_SEND_CUSTOM_CHARACTER@Retval^0,w,c
  1065   00191A  0012               	return		;funcret
  1066   00191C                     __end_of_LCD_8BIT_SEND_CUSTOM_CHARACTER:
  1067                           	callstack 0
  1068                           
  1069 ;; *************** function _LCD_8BIT_SEND_CHARACTER_DATA_POS *****************
  1070 ;; Defined at:
  1071 ;;		line 286 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;  lcd             1   21[COMRAM] PTR const struct .
  1074 ;;		 -> lcd2(10), 
  1075 ;;  row             1   22[COMRAM] unsigned char 
  1076 ;;  column          1   23[COMRAM] unsigned char 
  1077 ;;  data            1   24[COMRAM] unsigned char 
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;  Retval          1   25[COMRAM] enum E3654
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      enum E3654
  1082 ;; Registers used:
  1083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1089 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1090 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;Total ram usage:        5 bytes
  1094 ;; Hardware stack levels used: 1
  1095 ;; Hardware stack levels required when called: 4
  1096 ;; This function calls:
  1097 ;;		_LCD_8BIT_SEND_CHARACTER_DATA
  1098 ;;		_lcd_8bit_set_cursor
  1099 ;; This function is called by:
  1100 ;;		_LCD_8BIT_SEND_CUSTOM_CHARACTER
  1101 ;;		_Loading_Screen
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text2
  1106   001BB2                     __ptext2:
  1107                           	callstack 0
  1108   001BB2                     _LCD_8BIT_SEND_CHARACTER_DATA_POS:
  1109                           	callstack 25
  1110   001BB2                     
  1111                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 288:     if(((void*)0) == lcd){
  1112   001BB2  5044               	movf	LCD_8BIT_SEND_CHARACTER_DATA_POS@lcd^0,w,c
  1113   001BB4  A4D8               	btfss	status,2,c
  1114   001BB6  EFDF  F00D         	goto	u1461
  1115   001BBA  EFE1  F00D         	goto	u1460
  1116   001BBE                     u1461:
  1117   001BBE  EFE5  F00D         	goto	l2569
  1118   001BC2                     u1460:
  1119   001BC2                     
  1120                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 289:         Retval = E_NOT_OK;
  1121   001BC2  0E00               	movlw	0
  1122   001BC4  6E48               	movwf	LCD_8BIT_SEND_CHARACTER_DATA_POS@Retval^0,c
  1123                           
  1124                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 290:     }
  1125   001BC6  EFF5  F00D         	goto	l2571
  1126   001BCA                     l2569:
  1127                           
  1128                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 292:         Retval = lcd_8bit_set_cursor(lcd , row , colu
      +                          mn);
  1129   001BCA  C044  F040         	movff	LCD_8BIT_SEND_CHARACTER_DATA_POS@lcd,lcd_8bit_set_cursor@lcd
  1130   001BCE  C045  F041         	movff	LCD_8BIT_SEND_CHARACTER_DATA_POS@row,lcd_8bit_set_cursor@row
  1131   001BD2  C046  F042         	movff	LCD_8BIT_SEND_CHARACTER_DATA_POS@column,lcd_8bit_set_cursor@column
  1132   001BD6  ECF7  F00A         	call	_lcd_8bit_set_cursor	;wreg free
  1133   001BDA  6E48               	movwf	LCD_8BIT_SEND_CHARACTER_DATA_POS@Retval^0,c
  1134                           
  1135                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 293:         Retval = LCD_8BIT_SEND_CHARACTER_DATA(lcd , d
      +                          ata);
  1136   001BDC  C044  F039         	movff	LCD_8BIT_SEND_CHARACTER_DATA_POS@lcd,LCD_8BIT_SEND_CHARACTER_DATA@lcd
  1137   001BE0  C047  F03A         	movff	LCD_8BIT_SEND_CHARACTER_DATA_POS@data,LCD_8BIT_SEND_CHARACTER_DATA@data
  1138   001BE4  EC9B  F00B         	call	_LCD_8BIT_SEND_CHARACTER_DATA	;wreg free
  1139   001BE8  6E48               	movwf	LCD_8BIT_SEND_CHARACTER_DATA_POS@Retval^0,c
  1140   001BEA                     l2571:
  1141                           
  1142                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 295:     return Retval;
  1143   001BEA  5048               	movf	LCD_8BIT_SEND_CHARACTER_DATA_POS@Retval^0,w,c
  1144   001BEC  0012               	return		;funcret
  1145   001BEE                     __end_of_LCD_8BIT_SEND_CHARACTER_DATA_POS:
  1146                           	callstack 0
  1147                           
  1148 ;; *************** function _lcd_8bit_set_cursor *****************
  1149 ;; Defined at:
  1150 ;;		line 78 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;  lcd             1   17[COMRAM] PTR const struct .
  1153 ;;		 -> lcd2(10), 
  1154 ;;  row             1   18[COMRAM] unsigned char 
  1155 ;;  column          1   19[COMRAM] unsigned char 
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;  Retval          1   20[COMRAM] enum E3654
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      enum E3654
  1160 ;; Registers used:
  1161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1167 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1168 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1170 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1171 ;;Total ram usage:        4 bytes
  1172 ;; Hardware stack levels used: 1
  1173 ;; Hardware stack levels required when called: 3
  1174 ;; This function calls:
  1175 ;;		_GPIO_PIN_WRITE_LOGIC
  1176 ;;		_LCD_8BIT_SEND_COMMAND
  1177 ;; This function is called by:
  1178 ;;		_LCD_8BIT_SEND_CHARACTER_DATA_POS
  1179 ;;		_LCD_8BIT_SEND_STRING_POS
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183                           	psect	text3
  1184   0015EE                     __ptext3:
  1185                           	callstack 0
  1186   0015EE                     _lcd_8bit_set_cursor:
  1187                           	callstack 25
  1188   0015EE                     
  1189                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 80:     if(((void*)0) == lcd){
  1190   0015EE  5040               	movf	lcd_8bit_set_cursor@lcd^0,w,c
  1191   0015F0  A4D8               	btfss	status,2,c
  1192   0015F2  EFFD  F00A         	goto	u1401
  1193   0015F6  EFFF  F00A         	goto	u1400
  1194   0015FA                     u1401:
  1195   0015FA  EF03  F00B         	goto	l2493
  1196   0015FE                     u1400:
  1197   0015FE                     l2491:
  1198                           
  1199                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 81:         Retval = E_NOT_OK;
  1200   0015FE  0E00               	movlw	0
  1201   001600  6E43               	movwf	lcd_8bit_set_cursor@Retval^0,c
  1202                           
  1203                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 82:     }
  1204   001602  EF47  F00B         	goto	l2511
  1205   001606                     l2493:
  1206   001606  C040  F02F         	movff	lcd_8bit_set_cursor@lcd,GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG
  1207   00160A  0E00               	movlw	0
  1208   00160C  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  1209   00160E  EC6F  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  1210   001612                     
  1211                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 85:         column--;
  1212   001612  0642               	decf	lcd_8bit_set_cursor@column^0,f,c
  1213                           
  1214                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 86:         switch(row){
  1215   001614  EF34  F00B         	goto	l2509
  1216   001618                     l2497:
  1217                           
  1218                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 88:                 Retval = LCD_8BIT_SEND_COMMAND((lcd) ,
      +                           (0x80 + column));
  1219   001618  C040  F039         	movff	lcd_8bit_set_cursor@lcd,LCD_8BIT_SEND_COMMAND@lcd
  1220   00161C  5042               	movf	lcd_8bit_set_cursor@column^0,w,c
  1221   00161E  0F80               	addlw	128
  1222   001620  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  1223   001622  ECDD  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  1224   001626  6E43               	movwf	lcd_8bit_set_cursor@Retval^0,c
  1225                           
  1226                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 89:                 break;
  1227   001628  EF47  F00B         	goto	l2511
  1228   00162C                     l2499:
  1229                           
  1230                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 91:                 Retval = LCD_8BIT_SEND_COMMAND((lcd) ,
      +                           (0xC0 + column));
  1231   00162C  C040  F039         	movff	lcd_8bit_set_cursor@lcd,LCD_8BIT_SEND_COMMAND@lcd
  1232   001630  5042               	movf	lcd_8bit_set_cursor@column^0,w,c
  1233   001632  0FC0               	addlw	192
  1234   001634  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  1235   001636  ECDD  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  1236   00163A  6E43               	movwf	lcd_8bit_set_cursor@Retval^0,c
  1237                           
  1238                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 92:                 break;
  1239   00163C  EF47  F00B         	goto	l2511
  1240   001640                     l2501:
  1241                           
  1242                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 94:                 Retval = LCD_8BIT_SEND_COMMAND((lcd) ,
      +                           (0x94 + column));
  1243   001640  C040  F039         	movff	lcd_8bit_set_cursor@lcd,LCD_8BIT_SEND_COMMAND@lcd
  1244   001644  5042               	movf	lcd_8bit_set_cursor@column^0,w,c
  1245   001646  0F94               	addlw	148
  1246   001648  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  1247   00164A  ECDD  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  1248   00164E  6E43               	movwf	lcd_8bit_set_cursor@Retval^0,c
  1249                           
  1250                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 95:                 break;
  1251   001650  EF47  F00B         	goto	l2511
  1252   001654                     l2503:
  1253                           
  1254                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 97:                 Retval = LCD_8BIT_SEND_COMMAND((lcd) ,
      +                           (0xD4 + column));
  1255   001654  C040  F039         	movff	lcd_8bit_set_cursor@lcd,LCD_8BIT_SEND_COMMAND@lcd
  1256   001658  5042               	movf	lcd_8bit_set_cursor@column^0,w,c
  1257   00165A  0FD4               	addlw	212
  1258   00165C  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  1259   00165E  ECDD  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  1260   001662  6E43               	movwf	lcd_8bit_set_cursor@Retval^0,c
  1261                           
  1262                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 98:                 break;
  1263   001664  EF47  F00B         	goto	l2511
  1264   001668                     l2509:
  1265   001668  5041               	movf	lcd_8bit_set_cursor@row^0,w,c
  1266                           
  1267                           ; Switch size 1, requested type "simple"
  1268                           ; Number of cases is 4, Range of values is 1 to 4
  1269                           ; switch strategies available:
  1270                           ; Name         Instructions Cycles
  1271                           ; simple_byte           13     7 (average)
  1272                           ;	Chosen strategy is simple_byte
  1273   00166A  0A01               	xorlw	1	; case 1
  1274   00166C  B4D8               	btfsc	status,2,c
  1275   00166E  EF0C  F00B         	goto	l2497
  1276   001672  0A03               	xorlw	3	; case 2
  1277   001674  B4D8               	btfsc	status,2,c
  1278   001676  EF16  F00B         	goto	l2499
  1279   00167A  0A01               	xorlw	1	; case 3
  1280   00167C  B4D8               	btfsc	status,2,c
  1281   00167E  EF20  F00B         	goto	l2501
  1282   001682  0A07               	xorlw	7	; case 4
  1283   001684  B4D8               	btfsc	status,2,c
  1284   001686  EF2A  F00B         	goto	l2503
  1285   00168A  EFFF  F00A         	goto	l2491
  1286   00168E                     l2511:
  1287                           
  1288                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 104:     return Retval;
  1289   00168E  5043               	movf	lcd_8bit_set_cursor@Retval^0,w,c
  1290   001690  0012               	return		;funcret
  1291   001692                     __end_of_lcd_8bit_set_cursor:
  1292                           	callstack 0
  1293                           
  1294 ;; *************** function _LCD_8BIT_SEND_CHARACTER_DATA *****************
  1295 ;; Defined at:
  1296 ;;		line 271 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;  lcd             1   10[COMRAM] PTR const struct .
  1299 ;;		 -> lcd2(10), 
  1300 ;;  data            1   11[COMRAM] unsigned char 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;  i               2   15[COMRAM] int 
  1303 ;;  Retval          1   14[COMRAM] enum E3654
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  1    wreg      enum E3654
  1306 ;; Registers used:
  1307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1308 ;; Tracked objects:
  1309 ;;		On entry : 0/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;Total ram usage:        7 bytes
  1318 ;; Hardware stack levels used: 1
  1319 ;; Hardware stack levels required when called: 2
  1320 ;; This function calls:
  1321 ;;		_GPIO_PIN_WRITE_LOGIC
  1322 ;;		_lcd_8bit_send_enable_signal
  1323 ;; This function is called by:
  1324 ;;		_LCD_8BIT_SEND_CHARACTER_DATA_POS
  1325 ;;		_LCD_8BIT_SEND_CUSTOM_CHARACTER
  1326 ;;		_LCD_8BIT_SEND_STRING
  1327 ;;		_LCD_8BIT_SEND_STRING_POS
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           	psect	text4
  1332   001736                     __ptext4:
  1333                           	callstack 0
  1334   001736                     _LCD_8BIT_SEND_CHARACTER_DATA:
  1335                           	callstack 26
  1336   001736                     
  1337                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 273:     if(((void*)0) == lcd){
  1338   001736  5039               	movf	LCD_8BIT_SEND_CHARACTER_DATA@lcd^0,w,c
  1339   001738  A4D8               	btfss	status,2,c
  1340   00173A  EFA1  F00B         	goto	u1421
  1341   00173E  EFA3  F00B         	goto	u1420
  1342   001742                     u1421:
  1343   001742  EFA7  F00B         	goto	l2529
  1344   001746                     u1420:
  1345   001746                     
  1346                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 274:         Retval = E_NOT_OK;
  1347   001746  0E00               	movlw	0
  1348   001748  6E3D               	movwf	LCD_8BIT_SEND_CHARACTER_DATA@Retval^0,c
  1349                           
  1350                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 275:     }
  1351   00174A  EFDB  F00B         	goto	l2545
  1352   00174E                     l2529:
  1353   00174E  C039  F02F         	movff	LCD_8BIT_SEND_CHARACTER_DATA@lcd,GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG
  1354   001752  0E01               	movlw	1
  1355   001754  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  1356   001756  EC6F  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  1357   00175A                     
  1358                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 278:         for(int i = 0 ; i < 8 ; i++){
  1359   00175A  0E00               	movlw	0
  1360   00175C  6E3F               	movwf	(LCD_8BIT_SEND_CHARACTER_DATA@i+1)^0,c
  1361   00175E  0E00               	movlw	0
  1362   001760  6E3E               	movwf	LCD_8BIT_SEND_CHARACTER_DATA@i^0,c
  1363   001762                     l2537:
  1364   001762  5039               	movf	LCD_8BIT_SEND_CHARACTER_DATA@lcd^0,w,c
  1365   001764  243E               	addwf	LCD_8BIT_SEND_CHARACTER_DATA@i^0,w,c
  1366   001766  0F02               	addlw	2
  1367   001768  6E2F               	movwf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,c
  1368   00176A  C03E  F03B         	movff	LCD_8BIT_SEND_CHARACTER_DATA@i,??_LCD_8BIT_SEND_CHARACTER_DATA
  1369   00176E  C03A  F03C         	movff	LCD_8BIT_SEND_CHARACTER_DATA@data,??_LCD_8BIT_SEND_CHARACTER_DATA+1
  1370   001772  2A3B               	incf	??_LCD_8BIT_SEND_CHARACTER_DATA^0,f,c
  1371   001774  EFBE  F00B         	goto	u1434
  1372   001778                     u1435:
  1373   001778  90D8               	bcf	status,0,c
  1374   00177A  323C               	rrcf	(??_LCD_8BIT_SEND_CHARACTER_DATA+1)^0,f,c
  1375   00177C                     u1434:
  1376   00177C  2E3B               	decfsz	??_LCD_8BIT_SEND_CHARACTER_DATA^0,f,c
  1377   00177E  EFBC  F00B         	goto	u1435
  1378   001782  503C               	movf	(??_LCD_8BIT_SEND_CHARACTER_DATA+1)^0,w,c
  1379   001784  0B01               	andlw	1
  1380   001786  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  1381   001788  EC6F  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  1382   00178C                     
  1383                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 280:         }
  1384   00178C  4A3E               	infsnz	LCD_8BIT_SEND_CHARACTER_DATA@i^0,f,c
  1385   00178E  2A3F               	incf	(LCD_8BIT_SEND_CHARACTER_DATA@i+1)^0,f,c
  1386   001790  BE3F               	btfsc	(LCD_8BIT_SEND_CHARACTER_DATA@i+1)^0,7,c
  1387   001792  EFD4  F00B         	goto	u1441
  1388   001796  503F               	movf	(LCD_8BIT_SEND_CHARACTER_DATA@i+1)^0,w,c
  1389   001798  E109               	bnz	u1440
  1390   00179A  0E08               	movlw	8
  1391   00179C  5C3E               	subwf	LCD_8BIT_SEND_CHARACTER_DATA@i^0,w,c
  1392   00179E  A0D8               	btfss	status,0,c
  1393   0017A0  EFD4  F00B         	goto	u1441
  1394   0017A4  EFD6  F00B         	goto	u1440
  1395   0017A8                     u1441:
  1396   0017A8  EFB1  F00B         	goto	l2537
  1397   0017AC                     u1440:
  1398   0017AC                     
  1399                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 281:         Retval = lcd_8bit_send_enable_signal(lcd);
  1400   0017AC  C039  F037         	movff	LCD_8BIT_SEND_CHARACTER_DATA@lcd,lcd_8bit_send_enable_signal@lcd
  1401   0017B0  EC9B  F00D         	call	_lcd_8bit_send_enable_signal	;wreg free
  1402   0017B4  6E3D               	movwf	LCD_8BIT_SEND_CHARACTER_DATA@Retval^0,c
  1403   0017B6                     l2545:
  1404                           
  1405                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 283:     return Retval;
  1406   0017B6  503D               	movf	LCD_8BIT_SEND_CHARACTER_DATA@Retval^0,w,c
  1407   0017B8  0012               	return		;funcret
  1408   0017BA                     __end_of_LCD_8BIT_SEND_CHARACTER_DATA:
  1409                           	callstack 0
  1410                           
  1411 ;; *************** function _LCD_4BIT_SEND_CUSTOM_CHARACTER *****************
  1412 ;; Defined at:
  1413 ;;		line 208 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  lcd             1   27[COMRAM] PTR const struct .
  1416 ;;		 -> lcd1(6), 
  1417 ;;  row             1   28[COMRAM] unsigned char 
  1418 ;;  column          1   29[COMRAM] unsigned char 
  1419 ;;  chr             1   30[COMRAM] PTR const unsigned char 
  1420 ;;		 -> charge_battery_100(8), charge_battery_75(8), charge_battery_50(8), charge_battery_25(8), 
  1421 ;;		 -> charge_battery_00(8), 
  1422 ;;  mem_pos         1   31[COMRAM] unsigned char 
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;  i               1   33[COMRAM] unsigned char 
  1425 ;;  Retval          1   32[COMRAM] enum E3654
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      enum E3654
  1428 ;; Registers used:
  1429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1435 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1436 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1438 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1439 ;;Total ram usage:        7 bytes
  1440 ;; Hardware stack levels used: 1
  1441 ;; Hardware stack levels required when called: 5
  1442 ;; This function calls:
  1443 ;;		_LCD_4BIT_SEND_CHARACTER_DATA
  1444 ;;		_LCD_4BIT_SEND_CHARACTER_DATA_POS
  1445 ;;		_LCD_4BIT_SEND_COMMAND
  1446 ;; This function is called by:
  1447 ;;		_main
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           	psect	text5
  1452   00191C                     __ptext5:
  1453                           	callstack 0
  1454   00191C                     _LCD_4BIT_SEND_CUSTOM_CHARACTER:
  1455                           	callstack 25
  1456   00191C                     
  1457                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 210:     if(((void*)0) == lcd){
  1458   00191C  504A               	movf	LCD_4BIT_SEND_CUSTOM_CHARACTER@lcd^0,w,c
  1459   00191E  A4D8               	btfss	status,2,c
  1460   001920  EF94  F00C         	goto	u1471
  1461   001924  EF96  F00C         	goto	u1470
  1462   001928                     u1471:
  1463   001928  EF9A  F00C         	goto	l2581
  1464   00192C                     u1470:
  1465   00192C                     
  1466                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 211:         Retval = E_NOT_OK;
  1467   00192C  0E00               	movlw	0
  1468   00192E  6E4F               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@Retval^0,c
  1469                           
  1470                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 212:     }
  1471   001930  EFC3  F00C         	goto	l2597
  1472   001934                     l2581:
  1473   001934  C04A  F03E         	movff	LCD_4BIT_SEND_CUSTOM_CHARACTER@lcd,LCD_4BIT_SEND_COMMAND@lcd
  1474   001938  504E               	movf	LCD_4BIT_SEND_CUSTOM_CHARACTER@mem_pos^0,w,c
  1475   00193A  0D08               	mullw	8
  1476   00193C  50F3               	movf	243,w,c
  1477   00193E  0F40               	addlw	64
  1478   001940  6E3F               	movwf	LCD_4BIT_SEND_COMMAND@command^0,c
  1479   001942  EC22  F00D         	call	_LCD_4BIT_SEND_COMMAND	;wreg free
  1480   001946                     
  1481                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 215:         for(uint8 i = 0 ; i < 8 ; i++){
  1482   001946  0E00               	movlw	0
  1483   001948  6E50               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@i^0,c
  1484   00194A                     l2589:
  1485   00194A  C04A  F03E         	movff	LCD_4BIT_SEND_CUSTOM_CHARACTER@lcd,LCD_4BIT_SEND_CHARACTER_DATA@lcd
  1486   00194E  504D               	movf	LCD_4BIT_SEND_CUSTOM_CHARACTER@chr^0,w,c
  1487   001950  2450               	addwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@i^0,w,c
  1488   001952  6ED9               	movwf	fsr2l,c
  1489   001954  6ADA               	clrf	fsr2h,c
  1490   001956  50DF               	movf	indf2,w,c
  1491   001958  6E3F               	movwf	LCD_4BIT_SEND_CHARACTER_DATA@data^0,c
  1492   00195A  ECF4  F00C         	call	_LCD_4BIT_SEND_CHARACTER_DATA	;wreg free
  1493   00195E                     
  1494                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 217:         }
  1495   00195E  2A50               	incf	LCD_4BIT_SEND_CUSTOM_CHARACTER@i^0,f,c
  1496   001960  0E07               	movlw	7
  1497   001962  6450               	cpfsgt	LCD_4BIT_SEND_CUSTOM_CHARACTER@i^0,c
  1498   001964  EFB6  F00C         	goto	u1481
  1499   001968  EFB8  F00C         	goto	u1480
  1500   00196C                     u1481:
  1501   00196C  EFA5  F00C         	goto	l2589
  1502   001970                     u1480:
  1503   001970                     
  1504                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 218:         Retval = LCD_4BIT_SEND_CHARACTER_DATA_POS(lcd
      +                           , row , column , mem_pos);
  1505   001970  C04A  F045         	movff	LCD_4BIT_SEND_CUSTOM_CHARACTER@lcd,LCD_4BIT_SEND_CHARACTER_DATA_POS@lcd
  1506   001974  C04B  F046         	movff	LCD_4BIT_SEND_CUSTOM_CHARACTER@row,LCD_4BIT_SEND_CHARACTER_DATA_POS@row
  1507   001978  C04C  F047         	movff	LCD_4BIT_SEND_CUSTOM_CHARACTER@column,LCD_4BIT_SEND_CHARACTER_DATA_POS@column
  1508   00197C  C04E  F048         	movff	LCD_4BIT_SEND_CUSTOM_CHARACTER@mem_pos,LCD_4BIT_SEND_CHARACTER_DATA_POS@data
  1509   001980  ECF7  F00D         	call	_LCD_4BIT_SEND_CHARACTER_DATA_POS	;wreg free
  1510   001984  6E4F               	movwf	LCD_4BIT_SEND_CUSTOM_CHARACTER@Retval^0,c
  1511   001986                     l2597:
  1512                           
  1513                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 220:     return Retval;
  1514   001986  504F               	movf	LCD_4BIT_SEND_CUSTOM_CHARACTER@Retval^0,w,c
  1515   001988  0012               	return		;funcret
  1516   00198A                     __end_of_LCD_4BIT_SEND_CUSTOM_CHARACTER:
  1517                           	callstack 0
  1518                           
  1519 ;; *************** function _LCD_4BIT_SEND_CHARACTER_DATA_POS *****************
  1520 ;; Defined at:
  1521 ;;		line 169 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;  lcd             1   22[COMRAM] PTR const struct .
  1524 ;;		 -> lcd1(6), 
  1525 ;;  row             1   23[COMRAM] unsigned char 
  1526 ;;  column          1   24[COMRAM] unsigned char 
  1527 ;;  data            1   25[COMRAM] unsigned char 
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;  Retval          1   26[COMRAM] enum E3654
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      enum E3654
  1532 ;; Registers used:
  1533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1539 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1542 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1543 ;;Total ram usage:        5 bytes
  1544 ;; Hardware stack levels used: 1
  1545 ;; Hardware stack levels required when called: 4
  1546 ;; This function calls:
  1547 ;;		_LCD_4BIT_SEND_CHARACTER_DATA
  1548 ;;		_lcd_4bit_set_cursor
  1549 ;; This function is called by:
  1550 ;;		_LCD_4BIT_SEND_CUSTOM_CHARACTER
  1551 ;;		_one_line_welcome_shift
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           	psect	text6
  1556   001BEE                     __ptext6:
  1557                           	callstack 0
  1558   001BEE                     _LCD_4BIT_SEND_CHARACTER_DATA_POS:
  1559                           	callstack 25
  1560   001BEE                     
  1561                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 171:     if(((void*)0) == lcd){
  1562   001BEE  5045               	movf	LCD_4BIT_SEND_CHARACTER_DATA_POS@lcd^0,w,c
  1563   001BF0  A4D8               	btfss	status,2,c
  1564   001BF2  EFFD  F00D         	goto	u1451
  1565   001BF6  EFFF  F00D         	goto	u1450
  1566   001BFA                     u1451:
  1567   001BFA  EF03  F00E         	goto	l2559
  1568   001BFE                     u1450:
  1569   001BFE                     
  1570                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 172:         Retval = E_NOT_OK;
  1571   001BFE  0E00               	movlw	0
  1572   001C00  6E49               	movwf	LCD_4BIT_SEND_CHARACTER_DATA_POS@Retval^0,c
  1573                           
  1574                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 173:     }
  1575   001C02  EF13  F00E         	goto	l2561
  1576   001C06                     l2559:
  1577                           
  1578                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 175:         Retval = lcd_4bit_set_cursor(lcd , row , colu
      +                          mn);
  1579   001C06  C045  F041         	movff	LCD_4BIT_SEND_CHARACTER_DATA_POS@lcd,lcd_4bit_set_cursor@lcd
  1580   001C0A  C046  F042         	movff	LCD_4BIT_SEND_CHARACTER_DATA_POS@row,lcd_4bit_set_cursor@row
  1581   001C0E  C047  F043         	movff	LCD_4BIT_SEND_CHARACTER_DATA_POS@column,lcd_4bit_set_cursor@column
  1582   001C12  EC49  F00B         	call	_lcd_4bit_set_cursor	;wreg free
  1583   001C16  6E49               	movwf	LCD_4BIT_SEND_CHARACTER_DATA_POS@Retval^0,c
  1584                           
  1585                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 176:         Retval = LCD_4BIT_SEND_CHARACTER_DATA(lcd , d
      +                          ata);
  1586   001C18  C045  F03E         	movff	LCD_4BIT_SEND_CHARACTER_DATA_POS@lcd,LCD_4BIT_SEND_CHARACTER_DATA@lcd
  1587   001C1C  C048  F03F         	movff	LCD_4BIT_SEND_CHARACTER_DATA_POS@data,LCD_4BIT_SEND_CHARACTER_DATA@data
  1588   001C20  ECF4  F00C         	call	_LCD_4BIT_SEND_CHARACTER_DATA	;wreg free
  1589   001C24  6E49               	movwf	LCD_4BIT_SEND_CHARACTER_DATA_POS@Retval^0,c
  1590   001C26                     l2561:
  1591                           
  1592                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 178:     return Retval;
  1593   001C26  5049               	movf	LCD_4BIT_SEND_CHARACTER_DATA_POS@Retval^0,w,c
  1594   001C28  0012               	return		;funcret
  1595   001C2A                     __end_of_LCD_4BIT_SEND_CHARACTER_DATA_POS:
  1596                           	callstack 0
  1597                           
  1598 ;; *************** function _lcd_4bit_set_cursor *****************
  1599 ;; Defined at:
  1600 ;;		line 50 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;  lcd             1   18[COMRAM] PTR const struct .
  1603 ;;		 -> lcd1(6), 
  1604 ;;  row             1   19[COMRAM] unsigned char 
  1605 ;;  column          1   20[COMRAM] unsigned char 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  Retval          1   21[COMRAM] enum E3654
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  1    wreg      enum E3654
  1610 ;; Registers used:
  1611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1617 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1618 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1620 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1621 ;;Total ram usage:        4 bytes
  1622 ;; Hardware stack levels used: 1
  1623 ;; Hardware stack levels required when called: 3
  1624 ;; This function calls:
  1625 ;;		_GPIO_PIN_WRITE_LOGIC
  1626 ;;		_LCD_4BIT_SEND_COMMAND
  1627 ;; This function is called by:
  1628 ;;		_LCD_4BIT_SEND_CHARACTER_DATA_POS
  1629 ;;		_LCD_4BIT_SEND_STRING_POS
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           	psect	text7
  1634   001692                     __ptext7:
  1635                           	callstack 0
  1636   001692                     _lcd_4bit_set_cursor:
  1637                           	callstack 25
  1638   001692                     
  1639                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 52:     if(((void*)0) == lcd){
  1640   001692  5041               	movf	lcd_4bit_set_cursor@lcd^0,w,c
  1641   001694  A4D8               	btfss	status,2,c
  1642   001696  EF4F  F00B         	goto	u1391
  1643   00169A  EF51  F00B         	goto	u1390
  1644   00169E                     u1391:
  1645   00169E  EF55  F00B         	goto	l2467
  1646   0016A2                     u1390:
  1647   0016A2                     l2465:
  1648                           
  1649                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 53:         Retval = E_NOT_OK;
  1650   0016A2  0E00               	movlw	0
  1651   0016A4  6E44               	movwf	lcd_4bit_set_cursor@Retval^0,c
  1652                           
  1653                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 54:     }
  1654   0016A6  EF99  F00B         	goto	l2485
  1655   0016AA                     l2467:
  1656   0016AA  C041  F02F         	movff	lcd_4bit_set_cursor@lcd,GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG
  1657   0016AE  0E00               	movlw	0
  1658   0016B0  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  1659   0016B2  EC6F  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  1660   0016B6                     
  1661                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 57:         column--;
  1662   0016B6  0643               	decf	lcd_4bit_set_cursor@column^0,f,c
  1663                           
  1664                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 58:         switch(row){
  1665   0016B8  EF86  F00B         	goto	l2483
  1666   0016BC                     l2471:
  1667                           
  1668                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 60:                 Retval = LCD_4BIT_SEND_COMMAND((lcd) ,
      +                           (0x80 + column));
  1669   0016BC  C041  F03E         	movff	lcd_4bit_set_cursor@lcd,LCD_4BIT_SEND_COMMAND@lcd
  1670   0016C0  5043               	movf	lcd_4bit_set_cursor@column^0,w,c
  1671   0016C2  0F80               	addlw	128
  1672   0016C4  6E3F               	movwf	LCD_4BIT_SEND_COMMAND@command^0,c
  1673   0016C6  EC22  F00D         	call	_LCD_4BIT_SEND_COMMAND	;wreg free
  1674   0016CA  6E44               	movwf	lcd_4bit_set_cursor@Retval^0,c
  1675                           
  1676                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 61:                 break;
  1677   0016CC  EF99  F00B         	goto	l2485
  1678   0016D0                     l2473:
  1679                           
  1680                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 63:                 Retval = LCD_4BIT_SEND_COMMAND((lcd) ,
      +                           (0xC0 + column));
  1681   0016D0  C041  F03E         	movff	lcd_4bit_set_cursor@lcd,LCD_4BIT_SEND_COMMAND@lcd
  1682   0016D4  5043               	movf	lcd_4bit_set_cursor@column^0,w,c
  1683   0016D6  0FC0               	addlw	192
  1684   0016D8  6E3F               	movwf	LCD_4BIT_SEND_COMMAND@command^0,c
  1685   0016DA  EC22  F00D         	call	_LCD_4BIT_SEND_COMMAND	;wreg free
  1686   0016DE  6E44               	movwf	lcd_4bit_set_cursor@Retval^0,c
  1687                           
  1688                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 64:                 break;
  1689   0016E0  EF99  F00B         	goto	l2485
  1690   0016E4                     l2475:
  1691                           
  1692                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 66:                 Retval = LCD_4BIT_SEND_COMMAND((lcd) ,
      +                           (0x94 + column));
  1693   0016E4  C041  F03E         	movff	lcd_4bit_set_cursor@lcd,LCD_4BIT_SEND_COMMAND@lcd
  1694   0016E8  5043               	movf	lcd_4bit_set_cursor@column^0,w,c
  1695   0016EA  0F94               	addlw	148
  1696   0016EC  6E3F               	movwf	LCD_4BIT_SEND_COMMAND@command^0,c
  1697   0016EE  EC22  F00D         	call	_LCD_4BIT_SEND_COMMAND	;wreg free
  1698   0016F2  6E44               	movwf	lcd_4bit_set_cursor@Retval^0,c
  1699                           
  1700                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 67:                 break;
  1701   0016F4  EF99  F00B         	goto	l2485
  1702   0016F8                     l2477:
  1703                           
  1704                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 69:                 Retval = LCD_4BIT_SEND_COMMAND((lcd) ,
      +                           (0xD4 + column));
  1705   0016F8  C041  F03E         	movff	lcd_4bit_set_cursor@lcd,LCD_4BIT_SEND_COMMAND@lcd
  1706   0016FC  5043               	movf	lcd_4bit_set_cursor@column^0,w,c
  1707   0016FE  0FD4               	addlw	212
  1708   001700  6E3F               	movwf	LCD_4BIT_SEND_COMMAND@command^0,c
  1709   001702  EC22  F00D         	call	_LCD_4BIT_SEND_COMMAND	;wreg free
  1710   001706  6E44               	movwf	lcd_4bit_set_cursor@Retval^0,c
  1711                           
  1712                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 70:                 break;
  1713   001708  EF99  F00B         	goto	l2485
  1714   00170C                     l2483:
  1715   00170C  5042               	movf	lcd_4bit_set_cursor@row^0,w,c
  1716                           
  1717                           ; Switch size 1, requested type "simple"
  1718                           ; Number of cases is 4, Range of values is 1 to 4
  1719                           ; switch strategies available:
  1720                           ; Name         Instructions Cycles
  1721                           ; simple_byte           13     7 (average)
  1722                           ;	Chosen strategy is simple_byte
  1723   00170E  0A01               	xorlw	1	; case 1
  1724   001710  B4D8               	btfsc	status,2,c
  1725   001712  EF5E  F00B         	goto	l2471
  1726   001716  0A03               	xorlw	3	; case 2
  1727   001718  B4D8               	btfsc	status,2,c
  1728   00171A  EF68  F00B         	goto	l2473
  1729   00171E  0A01               	xorlw	1	; case 3
  1730   001720  B4D8               	btfsc	status,2,c
  1731   001722  EF72  F00B         	goto	l2475
  1732   001726  0A07               	xorlw	7	; case 4
  1733   001728  B4D8               	btfsc	status,2,c
  1734   00172A  EF7C  F00B         	goto	l2477
  1735   00172E  EF51  F00B         	goto	l2465
  1736   001732                     l2485:
  1737                           
  1738                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 76:     return Retval;
  1739   001732  5044               	movf	lcd_4bit_set_cursor@Retval^0,w,c
  1740   001734  0012               	return		;funcret
  1741   001736                     __end_of_lcd_4bit_set_cursor:
  1742                           	callstack 0
  1743                           
  1744 ;; *************** function _LCD_4BIT_SEND_CHARACTER_DATA *****************
  1745 ;; Defined at:
  1746 ;;		line 154 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;  lcd             1   15[COMRAM] PTR const struct .
  1749 ;;		 -> lcd1(6), 
  1750 ;;  data            1   16[COMRAM] unsigned char 
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;  Retval          1   17[COMRAM] enum E3654
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      enum E3654
  1755 ;; Registers used:
  1756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1762 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1765 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1766 ;;Total ram usage:        3 bytes
  1767 ;; Hardware stack levels used: 1
  1768 ;; Hardware stack levels required when called: 2
  1769 ;; This function calls:
  1770 ;;		_GPIO_PIN_WRITE_LOGIC
  1771 ;;		_lcd_4bit_send_enable_signal
  1772 ;;		_lcd_send_4bits
  1773 ;; This function is called by:
  1774 ;;		_LCD_4BIT_SEND_CHARACTER_DATA_POS
  1775 ;;		_LCD_4BIT_SEND_CUSTOM_CHARACTER
  1776 ;;		_LCD_4BIT_SEND_STRING
  1777 ;;		_LCD_4BIT_SEND_STRING_POS
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           	psect	text8
  1782   0019E8                     __ptext8:
  1783                           	callstack 0
  1784   0019E8                     _LCD_4BIT_SEND_CHARACTER_DATA:
  1785                           	callstack 26
  1786   0019E8                     
  1787                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 156:     if(((void*)0) == lcd){
  1788   0019E8  503E               	movf	LCD_4BIT_SEND_CHARACTER_DATA@lcd^0,w,c
  1789   0019EA  A4D8               	btfss	status,2,c
  1790   0019EC  EFFA  F00C         	goto	u1411
  1791   0019F0  EFFC  F00C         	goto	u1410
  1792   0019F4                     u1411:
  1793   0019F4  EF00  F00D         	goto	l2519
  1794   0019F8                     u1410:
  1795   0019F8                     
  1796                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 157:         Retval = E_NOT_OK;
  1797   0019F8  0E00               	movlw	0
  1798   0019FA  6E40               	movwf	LCD_4BIT_SEND_CHARACTER_DATA@Retval^0,c
  1799                           
  1800                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 158:     }
  1801   0019FC  EF20  F00D         	goto	l2521
  1802   001A00                     l2519:
  1803                           
  1804                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 160:         Retval = GPIO_PIN_WRITE_LOGIC(&(lcd->RS_PIN) 
      +                          , GPIO_HIGH);
  1805   001A00  C03E  F02F         	movff	LCD_4BIT_SEND_CHARACTER_DATA@lcd,GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG
  1806   001A04  0E01               	movlw	1
  1807   001A06  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  1808   001A08  EC6F  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  1809   001A0C  6E40               	movwf	LCD_4BIT_SEND_CHARACTER_DATA@Retval^0,c
  1810                           
  1811                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 161:         Retval = lcd_send_4bits(lcd , (data >> 4));
  1812   001A0E  C03E  F037         	movff	LCD_4BIT_SEND_CHARACTER_DATA@lcd,lcd_send_4bits@lcd
  1813   001A12  383F               	swapf	LCD_4BIT_SEND_CHARACTER_DATA@data^0,w,c
  1814   001A14  0B0F               	andlw	15
  1815   001A16  6E38               	movwf	lcd_send_4bits@_data_command^0,c
  1816   001A18  EC1F  F00C         	call	_lcd_send_4bits	;wreg free
  1817   001A1C  6E40               	movwf	LCD_4BIT_SEND_CHARACTER_DATA@Retval^0,c
  1818                           
  1819                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 162:         Retval = lcd_4bit_send_enable_signal(lcd);
  1820   001A1E  C03E  F037         	movff	LCD_4BIT_SEND_CHARACTER_DATA@lcd,lcd_4bit_send_enable_signal@lcd
  1821   001A22  ECBA  F00D         	call	_lcd_4bit_send_enable_signal	;wreg free
  1822   001A26  6E40               	movwf	LCD_4BIT_SEND_CHARACTER_DATA@Retval^0,c
  1823                           
  1824                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 163:         Retval = lcd_send_4bits(lcd , (data));
  1825   001A28  C03E  F037         	movff	LCD_4BIT_SEND_CHARACTER_DATA@lcd,lcd_send_4bits@lcd
  1826   001A2C  C03F  F038         	movff	LCD_4BIT_SEND_CHARACTER_DATA@data,lcd_send_4bits@_data_command
  1827   001A30  EC1F  F00C         	call	_lcd_send_4bits	;wreg free
  1828   001A34  6E40               	movwf	LCD_4BIT_SEND_CHARACTER_DATA@Retval^0,c
  1829                           
  1830                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 164:         Retval = lcd_4bit_send_enable_signal(lcd);
  1831   001A36  C03E  F037         	movff	LCD_4BIT_SEND_CHARACTER_DATA@lcd,lcd_4bit_send_enable_signal@lcd
  1832   001A3A  ECBA  F00D         	call	_lcd_4bit_send_enable_signal	;wreg free
  1833   001A3E  6E40               	movwf	LCD_4BIT_SEND_CHARACTER_DATA@Retval^0,c
  1834   001A40                     l2521:
  1835                           
  1836                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 166:     return Retval;
  1837   001A40  5040               	movf	LCD_4BIT_SEND_CHARACTER_DATA@Retval^0,w,c
  1838   001A42  0012               	return		;funcret
  1839   001A44                     __end_of_LCD_4BIT_SEND_CHARACTER_DATA:
  1840                           	callstack 0
  1841                           
  1842 ;; *************** function _Application_intialize *****************
  1843 ;; Defined at:
  1844 ;;		line 57 in file "Drivers_Main.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;		None
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;		None
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      void 
  1851 ;; Registers used:
  1852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;Total ram usage:        0 bytes
  1863 ;; Hardware stack levels used: 1
  1864 ;; Hardware stack levels required when called: 5
  1865 ;; This function calls:
  1866 ;;		_ECU_LAYER_INITIALIZE
  1867 ;; This function is called by:
  1868 ;;		_main
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text9
  1873   001C6A                     __ptext9:
  1874                           	callstack 0
  1875   001C6A                     _Application_intialize:
  1876                           	callstack 25
  1877   001C6A                     
  1878                           ;Drivers_Main.c: 58:     ECU_LAYER_INITIALIZE();
  1879   001C6A  EC2C  F00E         	call	_ECU_LAYER_INITIALIZE	;wreg free
  1880   001C6E  0012               	return		;funcret
  1881   001C70                     __end_of_Application_intialize:
  1882                           	callstack 0
  1883                           
  1884 ;; *************** function _ECU_LAYER_INITIALIZE *****************
  1885 ;; Defined at:
  1886 ;;		line 96 in file "ECUAL/ECU_INIT.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;		None
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;  Ret             1    0        enum E3654
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      void 
  1893 ;; Registers used:
  1894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1904 ;;Total ram usage:        0 bytes
  1905 ;; Hardware stack levels used: 1
  1906 ;; Hardware stack levels required when called: 4
  1907 ;; This function calls:
  1908 ;;		_LCD_4BIT_INITIALIZE
  1909 ;;		_LCD_8BIT_INITIALIZE
  1910 ;; This function is called by:
  1911 ;;		_Application_intialize
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           	psect	text10
  1916   001C58                     __ptext10:
  1917                           	callstack 0
  1918   001C58                     _ECU_LAYER_INITIALIZE:
  1919                           	callstack 25
  1920   001C58  0E29               	movlw	low _lcd1
  1921   001C5A  6E41               	movwf	LCD_4BIT_INITIALIZE@lcd^0,c
  1922   001C5C  EC7D  F00A         	call	_LCD_4BIT_INITIALIZE	;wreg free
  1923   001C60  0E1F               	movlw	low _lcd2
  1924   001C62  6E40               	movwf	LCD_8BIT_INITIALIZE@lcd^0,c
  1925   001C64  ECF7  F009         	call	_LCD_8BIT_INITIALIZE	;wreg free
  1926   001C68  0012               	return		;funcret
  1927   001C6A                     __end_of_ECU_LAYER_INITIALIZE:
  1928                           	callstack 0
  1929                           
  1930 ;; *************** function _LCD_8BIT_INITIALIZE *****************
  1931 ;; Defined at:
  1932 ;;		line 227 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;  lcd             1   17[COMRAM] PTR const struct .
  1935 ;;		 -> lcd2(10), 
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;  i               2   19[COMRAM] int 
  1938 ;;  Retval          1   21[COMRAM] enum E3654
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      enum E3654
  1941 ;; Registers used:
  1942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1948 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1949 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1950 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1951 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1952 ;;Total ram usage:        5 bytes
  1953 ;; Hardware stack levels used: 1
  1954 ;; Hardware stack levels required when called: 3
  1955 ;; This function calls:
  1956 ;;		_GPIO_PIN_INITIALIZE
  1957 ;;		_GPIO_PIN_WRITE_LOGIC
  1958 ;;		_LCD_8BIT_SEND_COMMAND
  1959 ;; This function is called by:
  1960 ;;		_ECU_LAYER_INITIALIZE
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           	psect	text11
  1965   0013EE                     __ptext11:
  1966                           	callstack 0
  1967   0013EE                     _LCD_8BIT_INITIALIZE:
  1968                           	callstack 25
  1969   0013EE                     
  1970                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 229:     if(((void*)0) == lcd){
  1971   0013EE  5040               	movf	LCD_8BIT_INITIALIZE@lcd^0,w,c
  1972   0013F0  A4D8               	btfss	status,2,c
  1973   0013F2  EFFD  F009         	goto	u1371
  1974   0013F6  EFFF  F009         	goto	u1370
  1975   0013FA                     u1371:
  1976   0013FA  EF03  F00A         	goto	l2435
  1977   0013FE                     u1370:
  1978   0013FE                     
  1979                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 230:         Retval = E_NOT_OK;
  1980   0013FE  0E00               	movlw	0
  1981   001400  6E44               	movwf	LCD_8BIT_INITIALIZE@Retval^0,c
  1982                           
  1983                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 231:     }
  1984   001402  EF7B  F00A         	goto	l2459
  1985   001406                     l2435:
  1986                           
  1987                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 233:         Retval = GPIO_PIN_INITIALIZE(&(lcd->RS_PIN));
  1988   001406  C040  F037         	movff	LCD_8BIT_INITIALIZE@lcd,GPIO_PIN_INITIALIZE@_PIN_CONFIG
  1989   00140A  ECC5  F00C         	call	_GPIO_PIN_INITIALIZE	;wreg free
  1990   00140E  6E44               	movwf	LCD_8BIT_INITIALIZE@Retval^0,c
  1991                           
  1992                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 234:         Retval = GPIO_PIN_INITIALIZE(&(lcd->EN_PIN));
  1993   001410  2840               	incf	LCD_8BIT_INITIALIZE@lcd^0,w,c
  1994   001412  6E37               	movwf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,c
  1995   001414  ECC5  F00C         	call	_GPIO_PIN_INITIALIZE	;wreg free
  1996   001418  6E44               	movwf	LCD_8BIT_INITIALIZE@Retval^0,c
  1997   00141A                     
  1998                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 235:         for(int i = 0; i < 8 ; i++){
  1999   00141A  0E00               	movlw	0
  2000   00141C  6E43               	movwf	(LCD_8BIT_INITIALIZE@i+1)^0,c
  2001   00141E  0E00               	movlw	0
  2002   001420  6E42               	movwf	LCD_8BIT_INITIALIZE@i^0,c
  2003   001422                     l2443:
  2004   001422  5040               	movf	LCD_8BIT_INITIALIZE@lcd^0,w,c
  2005   001424  2442               	addwf	LCD_8BIT_INITIALIZE@i^0,w,c
  2006   001426  0F02               	addlw	2
  2007   001428  6E37               	movwf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,c
  2008   00142A  ECC5  F00C         	call	_GPIO_PIN_INITIALIZE	;wreg free
  2009   00142E                     
  2010                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 237:         }
  2011   00142E  4A42               	infsnz	LCD_8BIT_INITIALIZE@i^0,f,c
  2012   001430  2A43               	incf	(LCD_8BIT_INITIALIZE@i+1)^0,f,c
  2013   001432  BE43               	btfsc	(LCD_8BIT_INITIALIZE@i+1)^0,7,c
  2014   001434  EF25  F00A         	goto	u1381
  2015   001438  5043               	movf	(LCD_8BIT_INITIALIZE@i+1)^0,w,c
  2016   00143A  E109               	bnz	u1380
  2017   00143C  0E08               	movlw	8
  2018   00143E  5C42               	subwf	LCD_8BIT_INITIALIZE@i^0,w,c
  2019   001440  A0D8               	btfss	status,0,c
  2020   001442  EF25  F00A         	goto	u1381
  2021   001446  EF27  F00A         	goto	u1380
  2022   00144A                     u1381:
  2023   00144A  EF11  F00A         	goto	l2443
  2024   00144E                     u1380:
  2025   00144E                     
  2026                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 238:         _delay((unsigned long)((20)*(8000000UL/4000.0
      +                          )));
  2027   00144E  0E34               	movlw	52
  2028   001450  6E41               	movwf	??_LCD_8BIT_INITIALIZE^0,c
  2029   001452  0EF2               	movlw	242
  2030   001454                     u2057:
  2031   001454  2EE8               	decfsz	wreg,f,c
  2032   001456  D7FE               	bra	u2057
  2033   001458  2E41               	decfsz	??_LCD_8BIT_INITIALIZE^0,f,c
  2034   00145A  D7FC               	bra	u2057
  2035   00145C  C040  F02F         	movff	LCD_8BIT_INITIALIZE@lcd,GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG
  2036   001460  0E00               	movlw	0
  2037   001462  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  2038   001464  EC6F  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  2039   001468  C040  F039         	movff	LCD_8BIT_INITIALIZE@lcd,LCD_8BIT_SEND_COMMAND@lcd
  2040   00146C  0E38               	movlw	56
  2041   00146E  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  2042   001470  ECDD  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  2043                           
  2044                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 241:         _delay((unsigned long)((5)*(8000000UL/4000.0)
      +                          ));
  2045   001474  0E0D               	movlw	13
  2046   001476  6E41               	movwf	??_LCD_8BIT_INITIALIZE^0,c
  2047   001478  0EFC               	movlw	252
  2048   00147A                     u2067:
  2049   00147A  2EE8               	decfsz	wreg,f,c
  2050   00147C  D7FE               	bra	u2067
  2051   00147E  2E41               	decfsz	??_LCD_8BIT_INITIALIZE^0,f,c
  2052   001480  D7FC               	bra	u2067
  2053   001482  C040  F039         	movff	LCD_8BIT_INITIALIZE@lcd,LCD_8BIT_SEND_COMMAND@lcd
  2054   001486  0E38               	movlw	56
  2055   001488  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  2056   00148A  ECDD  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  2057   00148E                     
  2058                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 243:         _delay((unsigned long)((150)*(8000000UL/40000
      +                          00.0)));
  2059   00148E  0E64               	movlw	100
  2060   001490                     u2077:
  2061   001490  2EE8               	decfsz	wreg,f,c
  2062   001492  D7FE               	bra	u2077
  2063                           
  2064                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 244:         Retval = LCD_8BIT_SEND_COMMAND(lcd , 0x38);
  2065   001494  C040  F039         	movff	LCD_8BIT_INITIALIZE@lcd,LCD_8BIT_SEND_COMMAND@lcd
  2066   001498  0E38               	movlw	56
  2067   00149A  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  2068   00149C  ECDD  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  2069   0014A0  6E44               	movwf	LCD_8BIT_INITIALIZE@Retval^0,c
  2070                           
  2071                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 246:         Retval = LCD_8BIT_SEND_COMMAND(lcd , 0x01);
  2072   0014A2  C040  F039         	movff	LCD_8BIT_INITIALIZE@lcd,LCD_8BIT_SEND_COMMAND@lcd
  2073   0014A6  0E01               	movlw	1
  2074   0014A8  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  2075   0014AA  ECDD  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  2076   0014AE  6E44               	movwf	LCD_8BIT_INITIALIZE@Retval^0,c
  2077                           
  2078                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 247:         Retval = LCD_8BIT_SEND_COMMAND(lcd , 0x02);
  2079   0014B0  C040  F039         	movff	LCD_8BIT_INITIALIZE@lcd,LCD_8BIT_SEND_COMMAND@lcd
  2080   0014B4  0E02               	movlw	2
  2081   0014B6  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  2082   0014B8  ECDD  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  2083   0014BC  6E44               	movwf	LCD_8BIT_INITIALIZE@Retval^0,c
  2084                           
  2085                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 248:         Retval = LCD_8BIT_SEND_COMMAND(lcd , 0x06);
  2086   0014BE  C040  F039         	movff	LCD_8BIT_INITIALIZE@lcd,LCD_8BIT_SEND_COMMAND@lcd
  2087   0014C2  0E06               	movlw	6
  2088   0014C4  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  2089   0014C6  ECDD  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  2090   0014CA  6E44               	movwf	LCD_8BIT_INITIALIZE@Retval^0,c
  2091                           
  2092                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 249:         Retval = LCD_8BIT_SEND_COMMAND(lcd , 0x0C);
  2093   0014CC  C040  F039         	movff	LCD_8BIT_INITIALIZE@lcd,LCD_8BIT_SEND_COMMAND@lcd
  2094   0014D0  0E0C               	movlw	12
  2095   0014D2  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  2096   0014D4  ECDD  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  2097   0014D8  6E44               	movwf	LCD_8BIT_INITIALIZE@Retval^0,c
  2098                           
  2099                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 250:         Retval = LCD_8BIT_SEND_COMMAND(lcd , 0x38);
  2100   0014DA  C040  F039         	movff	LCD_8BIT_INITIALIZE@lcd,LCD_8BIT_SEND_COMMAND@lcd
  2101   0014DE  0E38               	movlw	56
  2102   0014E0  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  2103   0014E2  ECDD  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  2104   0014E6  6E44               	movwf	LCD_8BIT_INITIALIZE@Retval^0,c
  2105                           
  2106                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 251:         Retval = LCD_8BIT_SEND_COMMAND(lcd , 0x80);
  2107   0014E8  C040  F039         	movff	LCD_8BIT_INITIALIZE@lcd,LCD_8BIT_SEND_COMMAND@lcd
  2108   0014EC  0E80               	movlw	128
  2109   0014EE  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  2110   0014F0  ECDD  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  2111   0014F4  6E44               	movwf	LCD_8BIT_INITIALIZE@Retval^0,c
  2112   0014F6                     l2459:
  2113                           
  2114                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 253:     return Retval;
  2115   0014F6  5044               	movf	LCD_8BIT_INITIALIZE@Retval^0,w,c
  2116   0014F8  0012               	return		;funcret
  2117   0014FA                     __end_of_LCD_8BIT_INITIALIZE:
  2118                           	callstack 0
  2119                           
  2120 ;; *************** function _LCD_8BIT_SEND_COMMAND *****************
  2121 ;; Defined at:
  2122 ;;		line 256 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  lcd             1   10[COMRAM] PTR const struct .
  2125 ;;		 -> lcd2(10), 
  2126 ;;  command         1   11[COMRAM] unsigned char 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;  i               2   15[COMRAM] int 
  2129 ;;  Retval          1   14[COMRAM] enum E3654
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      enum E3654
  2132 ;; Registers used:
  2133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;Total ram usage:        7 bytes
  2144 ;; Hardware stack levels used: 1
  2145 ;; Hardware stack levels required when called: 2
  2146 ;; This function calls:
  2147 ;;		_GPIO_PIN_WRITE_LOGIC
  2148 ;;		_lcd_8bit_send_enable_signal
  2149 ;; This function is called by:
  2150 ;;		_lcd_8bit_set_cursor
  2151 ;;		_LCD_8BIT_INITIALIZE
  2152 ;;		_LCD_8BIT_SEND_CUSTOM_CHARACTER
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text12
  2157   0017BA                     __ptext12:
  2158                           	callstack 0
  2159   0017BA                     _LCD_8BIT_SEND_COMMAND:
  2160                           	callstack 27
  2161   0017BA                     
  2162                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 258:     if(((void*)0) == lcd){
  2163   0017BA  5039               	movf	LCD_8BIT_SEND_COMMAND@lcd^0,w,c
  2164   0017BC  A4D8               	btfss	status,2,c
  2165   0017BE  EFE3  F00B         	goto	u1321
  2166   0017C2  EFE5  F00B         	goto	u1320
  2167   0017C6                     u1321:
  2168   0017C6  EFE9  F00B         	goto	l2367
  2169   0017CA                     u1320:
  2170   0017CA                     
  2171                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 259:         Retval = E_NOT_OK;
  2172   0017CA  0E00               	movlw	0
  2173   0017CC  6E3D               	movwf	LCD_8BIT_SEND_COMMAND@Retval^0,c
  2174                           
  2175                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 260:     }
  2176   0017CE  EF1D  F00C         	goto	l2383
  2177   0017D2                     l2367:
  2178   0017D2  C039  F02F         	movff	LCD_8BIT_SEND_COMMAND@lcd,GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG
  2179   0017D6  0E00               	movlw	0
  2180   0017D8  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  2181   0017DA  EC6F  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  2182   0017DE                     
  2183                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 263:         for(int i = 0 ; i < 8 ; i++){
  2184   0017DE  0E00               	movlw	0
  2185   0017E0  6E3F               	movwf	(LCD_8BIT_SEND_COMMAND@i+1)^0,c
  2186   0017E2  0E00               	movlw	0
  2187   0017E4  6E3E               	movwf	LCD_8BIT_SEND_COMMAND@i^0,c
  2188   0017E6                     l2375:
  2189   0017E6  5039               	movf	LCD_8BIT_SEND_COMMAND@lcd^0,w,c
  2190   0017E8  243E               	addwf	LCD_8BIT_SEND_COMMAND@i^0,w,c
  2191   0017EA  0F02               	addlw	2
  2192   0017EC  6E2F               	movwf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,c
  2193   0017EE  C03E  F03B         	movff	LCD_8BIT_SEND_COMMAND@i,??_LCD_8BIT_SEND_COMMAND
  2194   0017F2  C03A  F03C         	movff	LCD_8BIT_SEND_COMMAND@command,??_LCD_8BIT_SEND_COMMAND+1
  2195   0017F6  2A3B               	incf	??_LCD_8BIT_SEND_COMMAND^0,f,c
  2196   0017F8  EF00  F00C         	goto	u1334
  2197   0017FC                     u1335:
  2198   0017FC  90D8               	bcf	status,0,c
  2199   0017FE  323C               	rrcf	(??_LCD_8BIT_SEND_COMMAND+1)^0,f,c
  2200   001800                     u1334:
  2201   001800  2E3B               	decfsz	??_LCD_8BIT_SEND_COMMAND^0,f,c
  2202   001802  EFFE  F00B         	goto	u1335
  2203   001806  503C               	movf	(??_LCD_8BIT_SEND_COMMAND+1)^0,w,c
  2204   001808  0B01               	andlw	1
  2205   00180A  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  2206   00180C  EC6F  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  2207   001810                     
  2208                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 265:         }
  2209   001810  4A3E               	infsnz	LCD_8BIT_SEND_COMMAND@i^0,f,c
  2210   001812  2A3F               	incf	(LCD_8BIT_SEND_COMMAND@i+1)^0,f,c
  2211   001814  BE3F               	btfsc	(LCD_8BIT_SEND_COMMAND@i+1)^0,7,c
  2212   001816  EF16  F00C         	goto	u1341
  2213   00181A  503F               	movf	(LCD_8BIT_SEND_COMMAND@i+1)^0,w,c
  2214   00181C  E109               	bnz	u1340
  2215   00181E  0E08               	movlw	8
  2216   001820  5C3E               	subwf	LCD_8BIT_SEND_COMMAND@i^0,w,c
  2217   001822  A0D8               	btfss	status,0,c
  2218   001824  EF16  F00C         	goto	u1341
  2219   001828  EF18  F00C         	goto	u1340
  2220   00182C                     u1341:
  2221   00182C  EFF3  F00B         	goto	l2375
  2222   001830                     u1340:
  2223   001830                     
  2224                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 266:         Retval = lcd_8bit_send_enable_signal(lcd);
  2225   001830  C039  F037         	movff	LCD_8BIT_SEND_COMMAND@lcd,lcd_8bit_send_enable_signal@lcd
  2226   001834  EC9B  F00D         	call	_lcd_8bit_send_enable_signal	;wreg free
  2227   001838  6E3D               	movwf	LCD_8BIT_SEND_COMMAND@Retval^0,c
  2228   00183A                     l2383:
  2229                           
  2230                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 268:     return Retval;
  2231   00183A  503D               	movf	LCD_8BIT_SEND_COMMAND@Retval^0,w,c
  2232   00183C  0012               	return		;funcret
  2233   00183E                     __end_of_LCD_8BIT_SEND_COMMAND:
  2234                           	callstack 0
  2235                           
  2236 ;; *************** function _lcd_8bit_send_enable_signal *****************
  2237 ;; Defined at:
  2238 ;;		line 38 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  lcd             1    8[COMRAM] PTR const struct .
  2241 ;;		 -> lcd2(10), 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  Retval          1    9[COMRAM] enum E3654
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  1    wreg      enum E3654
  2246 ;; Registers used:
  2247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2253 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2254 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2256 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;Total ram usage:        2 bytes
  2258 ;; Hardware stack levels used: 1
  2259 ;; Hardware stack levels required when called: 1
  2260 ;; This function calls:
  2261 ;;		_GPIO_PIN_WRITE_LOGIC
  2262 ;; This function is called by:
  2263 ;;		_LCD_8BIT_SEND_COMMAND
  2264 ;;		_LCD_8BIT_SEND_CHARACTER_DATA
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	text13
  2269   001B36                     __ptext13:
  2270                           	callstack 0
  2271   001B36                     _lcd_8bit_send_enable_signal:
  2272                           	callstack 27
  2273   001B36                     
  2274                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 40:     if(((void*)0) == lcd){
  2275   001B36  5037               	movf	lcd_8bit_send_enable_signal@lcd^0,w,c
  2276   001B38  A4D8               	btfss	status,2,c
  2277   001B3A  EFA1  F00D         	goto	u1281
  2278   001B3E  EFA3  F00D         	goto	u1280
  2279   001B42                     u1281:
  2280   001B42  EFA7  F00D         	goto	l2329
  2281   001B46                     u1280:
  2282   001B46                     
  2283                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 41:         Retval = E_NOT_OK;
  2284   001B46  0E00               	movlw	0
  2285   001B48  6E38               	movwf	lcd_8bit_send_enable_signal@Retval^0,c
  2286                           
  2287                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 42:     }
  2288   001B4A  EFB8  F00D         	goto	l2335
  2289   001B4E                     l2329:
  2290   001B4E  2837               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
  2291   001B50  6E2F               	movwf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,c
  2292   001B52  0E01               	movlw	1
  2293   001B54  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  2294   001B56  EC6F  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  2295   001B5A                     
  2296                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 45:         _delay((unsigned long)((5)*(8000000UL/4000000.
      +                          0)));
  2297   001B5A  0E03               	movlw	3
  2298   001B5C                     u2087:
  2299   001B5C  2EE8               	decfsz	wreg,f,c
  2300   001B5E  D7FE               	bra	u2087
  2301   001B60  0000               	nop	
  2302   001B62                     
  2303                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 46:         Retval = GPIO_PIN_WRITE_LOGIC(&(lcd->EN_PIN) ,
      +                           GPIO_LOW);
  2304   001B62  2837               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
  2305   001B64  6E2F               	movwf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,c
  2306   001B66  0E00               	movlw	0
  2307   001B68  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  2308   001B6A  EC6F  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  2309   001B6E  6E38               	movwf	lcd_8bit_send_enable_signal@Retval^0,c
  2310   001B70                     l2335:
  2311                           
  2312                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 48:     return Retval;
  2313   001B70  5038               	movf	lcd_8bit_send_enable_signal@Retval^0,w,c
  2314   001B72  0012               	return		;funcret
  2315   001B74                     __end_of_lcd_8bit_send_enable_signal:
  2316                           	callstack 0
  2317                           
  2318 ;; *************** function _LCD_4BIT_INITIALIZE *****************
  2319 ;; Defined at:
  2320 ;;		line 111 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  lcd             1   18[COMRAM] PTR const struct .
  2323 ;;		 -> lcd1(6), 
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;  i               2   20[COMRAM] int 
  2326 ;;  Retval          1   22[COMRAM] enum E3654
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  1    wreg      enum E3654
  2329 ;; Registers used:
  2330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2336 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2337 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2338 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2339 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2340 ;;Total ram usage:        5 bytes
  2341 ;; Hardware stack levels used: 1
  2342 ;; Hardware stack levels required when called: 3
  2343 ;; This function calls:
  2344 ;;		_GPIO_PIN_INITIALIZE
  2345 ;;		_LCD_4BIT_SEND_COMMAND
  2346 ;; This function is called by:
  2347 ;;		_ECU_LAYER_INITIALIZE
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           	psect	text14
  2352   0014FA                     __ptext14:
  2353                           	callstack 0
  2354   0014FA                     _LCD_4BIT_INITIALIZE:
  2355                           	callstack 25
  2356   0014FA                     
  2357                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 113:     if(((void*)0) == lcd){
  2358   0014FA  5041               	movf	LCD_4BIT_INITIALIZE@lcd^0,w,c
  2359   0014FC  A4D8               	btfss	status,2,c
  2360   0014FE  EF83  F00A         	goto	u1351
  2361   001502  EF85  F00A         	goto	u1350
  2362   001506                     u1351:
  2363   001506  EF89  F00A         	goto	l2391
  2364   00150A                     u1350:
  2365   00150A                     
  2366                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 114:         Retval = E_NOT_OK;
  2367   00150A  0E00               	movlw	0
  2368   00150C  6E45               	movwf	LCD_4BIT_INITIALIZE@Retval^0,c
  2369                           
  2370                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 115:     }
  2371   00150E  EFF5  F00A         	goto	l2427
  2372   001512                     l2391:
  2373                           
  2374                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 117:         Retval = GPIO_PIN_INITIALIZE(&(lcd->RS_PIN));
  2375   001512  C041  F037         	movff	LCD_4BIT_INITIALIZE@lcd,GPIO_PIN_INITIALIZE@_PIN_CONFIG
  2376   001516  ECC5  F00C         	call	_GPIO_PIN_INITIALIZE	;wreg free
  2377   00151A  6E45               	movwf	LCD_4BIT_INITIALIZE@Retval^0,c
  2378                           
  2379                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 118:         Retval = GPIO_PIN_INITIALIZE(&(lcd->EN_PIN));
  2380   00151C  2841               	incf	LCD_4BIT_INITIALIZE@lcd^0,w,c
  2381   00151E  6E37               	movwf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,c
  2382   001520  ECC5  F00C         	call	_GPIO_PIN_INITIALIZE	;wreg free
  2383   001524  6E45               	movwf	LCD_4BIT_INITIALIZE@Retval^0,c
  2384   001526                     
  2385                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 119:         for(int i = 0 ; i < 4 ; i++){
  2386   001526  0E00               	movlw	0
  2387   001528  6E44               	movwf	(LCD_4BIT_INITIALIZE@i+1)^0,c
  2388   00152A  0E00               	movlw	0
  2389   00152C  6E43               	movwf	LCD_4BIT_INITIALIZE@i^0,c
  2390   00152E                     l2399:
  2391   00152E  5041               	movf	LCD_4BIT_INITIALIZE@lcd^0,w,c
  2392   001530  2443               	addwf	LCD_4BIT_INITIALIZE@i^0,w,c
  2393   001532  0F02               	addlw	2
  2394   001534  6E37               	movwf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,c
  2395   001536  ECC5  F00C         	call	_GPIO_PIN_INITIALIZE	;wreg free
  2396   00153A                     
  2397                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 121:         }
  2398   00153A  4A43               	infsnz	LCD_4BIT_INITIALIZE@i^0,f,c
  2399   00153C  2A44               	incf	(LCD_4BIT_INITIALIZE@i+1)^0,f,c
  2400   00153E  BE44               	btfsc	(LCD_4BIT_INITIALIZE@i+1)^0,7,c
  2401   001540  EFAB  F00A         	goto	u1361
  2402   001544  5044               	movf	(LCD_4BIT_INITIALIZE@i+1)^0,w,c
  2403   001546  E109               	bnz	u1360
  2404   001548  0E04               	movlw	4
  2405   00154A  5C43               	subwf	LCD_4BIT_INITIALIZE@i^0,w,c
  2406   00154C  A0D8               	btfss	status,0,c
  2407   00154E  EFAB  F00A         	goto	u1361
  2408   001552  EFAD  F00A         	goto	u1360
  2409   001556                     u1361:
  2410   001556  EF97  F00A         	goto	l2399
  2411   00155A                     u1360:
  2412   00155A                     
  2413                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 122:         _delay((unsigned long)((20)*(8000000UL/4000.0
      +                          )));
  2414   00155A  0E34               	movlw	52
  2415   00155C  6E42               	movwf	??_LCD_4BIT_INITIALIZE^0,c
  2416   00155E  0EF2               	movlw	242
  2417   001560                     u2097:
  2418   001560  2EE8               	decfsz	wreg,f,c
  2419   001562  D7FE               	bra	u2097
  2420   001564  2E42               	decfsz	??_LCD_4BIT_INITIALIZE^0,f,c
  2421   001566  D7FC               	bra	u2097
  2422   001568  C041  F03E         	movff	LCD_4BIT_INITIALIZE@lcd,LCD_4BIT_SEND_COMMAND@lcd
  2423   00156C  0E38               	movlw	56
  2424   00156E  6E3F               	movwf	LCD_4BIT_SEND_COMMAND@command^0,c
  2425   001570  EC22  F00D         	call	_LCD_4BIT_SEND_COMMAND	;wreg free
  2426   001574                     
  2427                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 124:         _delay((unsigned long)((5)*(8000000UL/4000.0)
      +                          ));
  2428   001574  0E0D               	movlw	13
  2429   001576  6E42               	movwf	??_LCD_4BIT_INITIALIZE^0,c
  2430   001578  0EFC               	movlw	252
  2431   00157A                     u2107:
  2432   00157A  2EE8               	decfsz	wreg,f,c
  2433   00157C  D7FE               	bra	u2107
  2434   00157E  2E42               	decfsz	??_LCD_4BIT_INITIALIZE^0,f,c
  2435   001580  D7FC               	bra	u2107
  2436   001582  C041  F03E         	movff	LCD_4BIT_INITIALIZE@lcd,LCD_4BIT_SEND_COMMAND@lcd
  2437   001586  0E38               	movlw	56
  2438   001588  6E3F               	movwf	LCD_4BIT_SEND_COMMAND@command^0,c
  2439   00158A  EC22  F00D         	call	_LCD_4BIT_SEND_COMMAND	;wreg free
  2440   00158E                     
  2441                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 126:         _delay((unsigned long)((150)*(8000000UL/40000
      +                          00.0)));
  2442   00158E  0E64               	movlw	100
  2443   001590                     u2117:
  2444   001590  2EE8               	decfsz	wreg,f,c
  2445   001592  D7FE               	bra	u2117
  2446   001594  C041  F03E         	movff	LCD_4BIT_INITIALIZE@lcd,LCD_4BIT_SEND_COMMAND@lcd
  2447   001598  0E38               	movlw	56
  2448   00159A  6E3F               	movwf	LCD_4BIT_SEND_COMMAND@command^0,c
  2449   00159C  EC22  F00D         	call	_LCD_4BIT_SEND_COMMAND	;wreg free
  2450   0015A0  C041  F03E         	movff	LCD_4BIT_INITIALIZE@lcd,LCD_4BIT_SEND_COMMAND@lcd
  2451   0015A4  0E01               	movlw	1
  2452   0015A6  6E3F               	movwf	LCD_4BIT_SEND_COMMAND@command^0,c
  2453   0015A8  EC22  F00D         	call	_LCD_4BIT_SEND_COMMAND	;wreg free
  2454   0015AC  C041  F03E         	movff	LCD_4BIT_INITIALIZE@lcd,LCD_4BIT_SEND_COMMAND@lcd
  2455   0015B0  0E02               	movlw	2
  2456   0015B2  6E3F               	movwf	LCD_4BIT_SEND_COMMAND@command^0,c
  2457   0015B4  EC22  F00D         	call	_LCD_4BIT_SEND_COMMAND	;wreg free
  2458   0015B8  C041  F03E         	movff	LCD_4BIT_INITIALIZE@lcd,LCD_4BIT_SEND_COMMAND@lcd
  2459   0015BC  0E06               	movlw	6
  2460   0015BE  6E3F               	movwf	LCD_4BIT_SEND_COMMAND@command^0,c
  2461   0015C0  EC22  F00D         	call	_LCD_4BIT_SEND_COMMAND	;wreg free
  2462   0015C4  C041  F03E         	movff	LCD_4BIT_INITIALIZE@lcd,LCD_4BIT_SEND_COMMAND@lcd
  2463   0015C8  0E0C               	movlw	12
  2464   0015CA  6E3F               	movwf	LCD_4BIT_SEND_COMMAND@command^0,c
  2465   0015CC  EC22  F00D         	call	_LCD_4BIT_SEND_COMMAND	;wreg free
  2466   0015D0  C041  F03E         	movff	LCD_4BIT_INITIALIZE@lcd,LCD_4BIT_SEND_COMMAND@lcd
  2467   0015D4  0E28               	movlw	40
  2468   0015D6  6E3F               	movwf	LCD_4BIT_SEND_COMMAND@command^0,c
  2469   0015D8  EC22  F00D         	call	_LCD_4BIT_SEND_COMMAND	;wreg free
  2470   0015DC                     
  2471                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 134:         Retval = LCD_4BIT_SEND_COMMAND(lcd , 0x80);
  2472   0015DC  C041  F03E         	movff	LCD_4BIT_INITIALIZE@lcd,LCD_4BIT_SEND_COMMAND@lcd
  2473   0015E0  0E80               	movlw	128
  2474   0015E2  6E3F               	movwf	LCD_4BIT_SEND_COMMAND@command^0,c
  2475   0015E4  EC22  F00D         	call	_LCD_4BIT_SEND_COMMAND	;wreg free
  2476   0015E8  6E45               	movwf	LCD_4BIT_INITIALIZE@Retval^0,c
  2477   0015EA                     l2427:
  2478                           
  2479                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 136:     return Retval;
  2480   0015EA  5045               	movf	LCD_4BIT_INITIALIZE@Retval^0,w,c
  2481   0015EC  0012               	return		;funcret
  2482   0015EE                     __end_of_LCD_4BIT_INITIALIZE:
  2483                           	callstack 0
  2484                           
  2485 ;; *************** function _LCD_4BIT_SEND_COMMAND *****************
  2486 ;; Defined at:
  2487 ;;		line 139 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  lcd             1   15[COMRAM] PTR const struct .
  2490 ;;		 -> lcd1(6), 
  2491 ;;  command         1   16[COMRAM] unsigned char 
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;  Retval          1   17[COMRAM] enum E3654
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      enum E3654
  2496 ;; Registers used:
  2497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2503 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2504 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2506 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2507 ;;Total ram usage:        3 bytes
  2508 ;; Hardware stack levels used: 1
  2509 ;; Hardware stack levels required when called: 2
  2510 ;; This function calls:
  2511 ;;		_GPIO_PIN_WRITE_LOGIC
  2512 ;;		_lcd_4bit_send_enable_signal
  2513 ;;		_lcd_send_4bits
  2514 ;; This function is called by:
  2515 ;;		_lcd_4bit_set_cursor
  2516 ;;		_LCD_4BIT_INITIALIZE
  2517 ;;		_LCD_4BIT_SEND_CUSTOM_CHARACTER
  2518 ;;		_welcome_message
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           	psect	text15
  2523   001A44                     __ptext15:
  2524                           	callstack 0
  2525   001A44                     _LCD_4BIT_SEND_COMMAND:
  2526                           	callstack 27
  2527   001A44                     
  2528                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 141:     if(((void*)0) == lcd){
  2529   001A44  503E               	movf	LCD_4BIT_SEND_COMMAND@lcd^0,w,c
  2530   001A46  A4D8               	btfss	status,2,c
  2531   001A48  EF28  F00D         	goto	u1311
  2532   001A4C  EF2A  F00D         	goto	u1310
  2533   001A50                     u1311:
  2534   001A50  EF2E  F00D         	goto	l2357
  2535   001A54                     u1310:
  2536   001A54                     
  2537                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 142:         Retval = E_NOT_OK;
  2538   001A54  0E00               	movlw	0
  2539   001A56  6E40               	movwf	LCD_4BIT_SEND_COMMAND@Retval^0,c
  2540                           
  2541                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 143:     }
  2542   001A58  EF4E  F00D         	goto	l2359
  2543   001A5C                     l2357:
  2544                           
  2545                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 145:         Retval = GPIO_PIN_WRITE_LOGIC(&(lcd->RS_PIN) 
      +                          , GPIO_LOW);
  2546   001A5C  C03E  F02F         	movff	LCD_4BIT_SEND_COMMAND@lcd,GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG
  2547   001A60  0E00               	movlw	0
  2548   001A62  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  2549   001A64  EC6F  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  2550   001A68  6E40               	movwf	LCD_4BIT_SEND_COMMAND@Retval^0,c
  2551                           
  2552                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 146:         Retval = lcd_send_4bits(lcd , (command >> 4))
      +                          ;
  2553   001A6A  C03E  F037         	movff	LCD_4BIT_SEND_COMMAND@lcd,lcd_send_4bits@lcd
  2554   001A6E  383F               	swapf	LCD_4BIT_SEND_COMMAND@command^0,w,c
  2555   001A70  0B0F               	andlw	15
  2556   001A72  6E38               	movwf	lcd_send_4bits@_data_command^0,c
  2557   001A74  EC1F  F00C         	call	_lcd_send_4bits	;wreg free
  2558   001A78  6E40               	movwf	LCD_4BIT_SEND_COMMAND@Retval^0,c
  2559                           
  2560                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 147:         Retval = lcd_4bit_send_enable_signal(lcd);
  2561   001A7A  C03E  F037         	movff	LCD_4BIT_SEND_COMMAND@lcd,lcd_4bit_send_enable_signal@lcd
  2562   001A7E  ECBA  F00D         	call	_lcd_4bit_send_enable_signal	;wreg free
  2563   001A82  6E40               	movwf	LCD_4BIT_SEND_COMMAND@Retval^0,c
  2564                           
  2565                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 148:         Retval = lcd_send_4bits(lcd , (command));
  2566   001A84  C03E  F037         	movff	LCD_4BIT_SEND_COMMAND@lcd,lcd_send_4bits@lcd
  2567   001A88  C03F  F038         	movff	LCD_4BIT_SEND_COMMAND@command,lcd_send_4bits@_data_command
  2568   001A8C  EC1F  F00C         	call	_lcd_send_4bits	;wreg free
  2569   001A90  6E40               	movwf	LCD_4BIT_SEND_COMMAND@Retval^0,c
  2570                           
  2571                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 149:         Retval = lcd_4bit_send_enable_signal(lcd);
  2572   001A92  C03E  F037         	movff	LCD_4BIT_SEND_COMMAND@lcd,lcd_4bit_send_enable_signal@lcd
  2573   001A96  ECBA  F00D         	call	_lcd_4bit_send_enable_signal	;wreg free
  2574   001A9A  6E40               	movwf	LCD_4BIT_SEND_COMMAND@Retval^0,c
  2575   001A9C                     l2359:
  2576                           
  2577                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 151:     return Retval;
  2578   001A9C  5040               	movf	LCD_4BIT_SEND_COMMAND@Retval^0,w,c
  2579   001A9E  0012               	return		;funcret
  2580   001AA0                     __end_of_LCD_4BIT_SEND_COMMAND:
  2581                           	callstack 0
  2582                           
  2583 ;; *************** function _lcd_send_4bits *****************
  2584 ;; Defined at:
  2585 ;;		line 14 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;  lcd             1    8[COMRAM] PTR const struct .
  2588 ;;		 -> lcd1(6), 
  2589 ;;  _data_comman    1    9[COMRAM] unsigned char 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  i               2   13[COMRAM] int 
  2592 ;;  Retval          1   12[COMRAM] enum E3654
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      enum E3654
  2595 ;; Registers used:
  2596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2602 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;Total ram usage:        7 bytes
  2607 ;; Hardware stack levels used: 1
  2608 ;; Hardware stack levels required when called: 1
  2609 ;; This function calls:
  2610 ;;		_GPIO_PIN_WRITE_LOGIC
  2611 ;; This function is called by:
  2612 ;;		_LCD_4BIT_SEND_COMMAND
  2613 ;;		_LCD_4BIT_SEND_CHARACTER_DATA
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           	psect	text16
  2618   00183E                     __ptext16:
  2619                           	callstack 0
  2620   00183E                     _lcd_send_4bits:
  2621                           	callstack 27
  2622   00183E                     
  2623                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 16:     if(((void*)0) == lcd){
  2624   00183E  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2625   001840  A4D8               	btfss	status,2,c
  2626   001842  EF25  F00C         	goto	u1241
  2627   001846  EF27  F00C         	goto	u1240
  2628   00184A                     u1241:
  2629   00184A  EF2B  F00C         	goto	l2295
  2630   00184E                     u1240:
  2631   00184E                     
  2632                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 17:         Retval = E_NOT_OK;
  2633   00184E  0E00               	movlw	0
  2634   001850  6E3B               	movwf	lcd_send_4bits@Retval^0,c
  2635                           
  2636                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 18:     }
  2637   001852  EF55  F00C         	goto	l2307
  2638   001856                     l2295:
  2639                           
  2640                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 20:         for(int i = 0 ; i < 4 ; i++){
  2641   001856  0E00               	movlw	0
  2642   001858  6E3D               	movwf	(lcd_send_4bits@i+1)^0,c
  2643   00185A  0E00               	movlw	0
  2644   00185C  6E3C               	movwf	lcd_send_4bits@i^0,c
  2645   00185E                     l2301:
  2646                           
  2647                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 21:             Retval = GPIO_PIN_WRITE_LOGIC(&(lcd->DATA_
      +                          PINS[i]) , (_data_command >> i) & (uint8)0x01);
  2648   00185E  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2649   001860  243C               	addwf	lcd_send_4bits@i^0,w,c
  2650   001862  0F02               	addlw	2
  2651   001864  6E2F               	movwf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,c
  2652   001866  C03C  F039         	movff	lcd_send_4bits@i,??_lcd_send_4bits
  2653   00186A  C038  F03A         	movff	lcd_send_4bits@_data_command,??_lcd_send_4bits+1
  2654   00186E  2A39               	incf	??_lcd_send_4bits^0,f,c
  2655   001870  EF3C  F00C         	goto	u1254
  2656   001874                     u1255:
  2657   001874  90D8               	bcf	status,0,c
  2658   001876  323A               	rrcf	(??_lcd_send_4bits+1)^0,f,c
  2659   001878                     u1254:
  2660   001878  2E39               	decfsz	??_lcd_send_4bits^0,f,c
  2661   00187A  EF3A  F00C         	goto	u1255
  2662   00187E  503A               	movf	(??_lcd_send_4bits+1)^0,w,c
  2663   001880  0B01               	andlw	1
  2664   001882  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  2665   001884  EC6F  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  2666   001888  6E3B               	movwf	lcd_send_4bits@Retval^0,c
  2667   00188A                     
  2668                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 22:         }
  2669   00188A  4A3C               	infsnz	lcd_send_4bits@i^0,f,c
  2670   00188C  2A3D               	incf	(lcd_send_4bits@i+1)^0,f,c
  2671   00188E  BE3D               	btfsc	(lcd_send_4bits@i+1)^0,7,c
  2672   001890  EF53  F00C         	goto	u1261
  2673   001894  503D               	movf	(lcd_send_4bits@i+1)^0,w,c
  2674   001896  E109               	bnz	u1260
  2675   001898  0E04               	movlw	4
  2676   00189A  5C3C               	subwf	lcd_send_4bits@i^0,w,c
  2677   00189C  A0D8               	btfss	status,0,c
  2678   00189E  EF53  F00C         	goto	u1261
  2679   0018A2  EF55  F00C         	goto	u1260
  2680   0018A6                     u1261:
  2681   0018A6  EF2F  F00C         	goto	l2301
  2682   0018AA                     u1260:
  2683   0018AA                     l2307:
  2684                           
  2685                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 24:     return Retval;
  2686   0018AA  503B               	movf	lcd_send_4bits@Retval^0,w,c
  2687   0018AC  0012               	return		;funcret
  2688   0018AE                     __end_of_lcd_send_4bits:
  2689                           	callstack 0
  2690                           
  2691 ;; *************** function _lcd_4bit_send_enable_signal *****************
  2692 ;; Defined at:
  2693 ;;		line 26 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;  lcd             1    8[COMRAM] PTR const struct .
  2696 ;;		 -> lcd1(6), 
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;  Retval          1    9[COMRAM] enum E3654
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      enum E3654
  2701 ;; Registers used:
  2702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2708 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2711 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2712 ;;Total ram usage:        2 bytes
  2713 ;; Hardware stack levels used: 1
  2714 ;; Hardware stack levels required when called: 1
  2715 ;; This function calls:
  2716 ;;		_GPIO_PIN_WRITE_LOGIC
  2717 ;; This function is called by:
  2718 ;;		_LCD_4BIT_SEND_COMMAND
  2719 ;;		_LCD_4BIT_SEND_CHARACTER_DATA
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           	psect	text17
  2724   001B74                     __ptext17:
  2725                           	callstack 0
  2726   001B74                     _lcd_4bit_send_enable_signal:
  2727                           	callstack 27
  2728   001B74                     
  2729                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 28:     if(((void*)0) == lcd){
  2730   001B74  5037               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2731   001B76  A4D8               	btfss	status,2,c
  2732   001B78  EFC0  F00D         	goto	u1271
  2733   001B7C  EFC2  F00D         	goto	u1270
  2734   001B80                     u1271:
  2735   001B80  EFC6  F00D         	goto	l2315
  2736   001B84                     u1270:
  2737   001B84                     
  2738                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 29:         Retval = E_NOT_OK;
  2739   001B84  0E00               	movlw	0
  2740   001B86  6E38               	movwf	lcd_4bit_send_enable_signal@Retval^0,c
  2741                           
  2742                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 30:     }
  2743   001B88  EFD7  F00D         	goto	l2321
  2744   001B8C                     l2315:
  2745   001B8C  2837               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2746   001B8E  6E2F               	movwf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,c
  2747   001B90  0E01               	movlw	1
  2748   001B92  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  2749   001B94  EC6F  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  2750   001B98                     
  2751                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 33:         _delay((unsigned long)((5)*(8000000UL/4000000.
      +                          0)));
  2752   001B98  0E03               	movlw	3
  2753   001B9A                     u2127:
  2754   001B9A  2EE8               	decfsz	wreg,f,c
  2755   001B9C  D7FE               	bra	u2127
  2756   001B9E  0000               	nop	
  2757   001BA0                     
  2758                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 34:         Retval = GPIO_PIN_WRITE_LOGIC(&(lcd->EN_PIN) ,
      +                           GPIO_LOW);
  2759   001BA0  2837               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2760   001BA2  6E2F               	movwf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,c
  2761   001BA4  0E00               	movlw	0
  2762   001BA6  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  2763   001BA8  EC6F  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  2764   001BAC  6E38               	movwf	lcd_4bit_send_enable_signal@Retval^0,c
  2765   001BAE                     l2321:
  2766                           
  2767                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 36:     return Retval;
  2768   001BAE  5038               	movf	lcd_4bit_send_enable_signal@Retval^0,w,c
  2769   001BB0  0012               	return		;funcret
  2770   001BB2                     __end_of_lcd_4bit_send_enable_signal:
  2771                           	callstack 0
  2772                           
  2773 ;; *************** function _GPIO_PIN_INITIALIZE *****************
  2774 ;; Defined at:
  2775 ;;		line 156 in file "MCAL/GPIO/HAL_GPIO.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;  _PIN_CONFIG     1    8[COMRAM] PTR const struct .
  2778 ;;		 -> lcd2$DATA_PINS(8), lcd2(10), lcd1$DATA_PINS(4), lcd1(6), 
  2779 ;;		 -> RELAY_INITIALIZE@pin(1), LED_INITIALIZE@PIN_OBJ(1), 
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;  Retval          1   10[COMRAM] enum E3654
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1    wreg      enum E3654
  2784 ;; Registers used:
  2785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2791 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2793 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2794 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2795 ;;Total ram usage:        3 bytes
  2796 ;; Hardware stack levels used: 1
  2797 ;; Hardware stack levels required when called: 1
  2798 ;; This function calls:
  2799 ;;		_GPIO_PIN_DIRECTION_INITIALIZE
  2800 ;;		_GPIO_PIN_WRITE_LOGIC
  2801 ;; This function is called by:
  2802 ;;		_LCD_4BIT_INITIALIZE
  2803 ;;		_LCD_8BIT_INITIALIZE
  2804 ;;		_SEGMENT_INITIALIZE
  2805 ;;		_DC_MOTOR_INITIALIZE
  2806 ;;		_KEYPAD_INITIALIZE
  2807 ;;		_LED_INITIALIZE
  2808 ;;		_RELAY_INITIALIZE
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           	psect	text18
  2813   00198A                     __ptext18:
  2814                           	callstack 0
  2815   00198A                     _GPIO_PIN_INITIALIZE:
  2816                           	callstack 26
  2817   00198A                     
  2818                           ;MCAL/GPIO/HAL_GPIO.c: 158:     if(((void*)0) == _PIN_CONFIG || _PIN_CONFIG->PIN >= 8){
  2819   00198A  5037               	movf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,w,c
  2820   00198C  B4D8               	btfsc	status,2,c
  2821   00198E  EFCB  F00C         	goto	u1291
  2822   001992  EFCD  F00C         	goto	u1290
  2823   001996                     u1291:
  2824   001996  EFDD  F00C         	goto	l2343
  2825   00199A                     u1290:
  2826   00199A  5037               	movf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,w,c
  2827   00199C  6ED9               	movwf	fsr2l,c
  2828   00199E  6ADA               	clrf	fsr2h,c
  2829   0019A0  30DF               	rrcf	223,w,c
  2830   0019A2  32E8               	rrcf	wreg,f,c
  2831   0019A4  32E8               	rrcf	wreg,f,c
  2832   0019A6  0B07               	andlw	7
  2833   0019A8  6E38               	movwf	??_GPIO_PIN_INITIALIZE^0,c
  2834   0019AA  0E07               	movlw	7
  2835   0019AC  6438               	cpfsgt	??_GPIO_PIN_INITIALIZE^0,c
  2836   0019AE  EFDB  F00C         	goto	u1301
  2837   0019B2  EFDD  F00C         	goto	u1300
  2838   0019B6                     u1301:
  2839   0019B6  EFE1  F00C         	goto	l2345
  2840   0019BA                     u1300:
  2841   0019BA                     l2343:
  2842                           
  2843                           ;MCAL/GPIO/HAL_GPIO.c: 159:         Retval = E_NOT_OK;
  2844   0019BA  0E00               	movlw	0
  2845   0019BC  6E39               	movwf	GPIO_PIN_INITIALIZE@Retval^0,c
  2846                           
  2847                           ;MCAL/GPIO/HAL_GPIO.c: 160:     }
  2848   0019BE  EFF2  F00C         	goto	l2349
  2849   0019C2                     l2345:
  2850                           
  2851                           ;MCAL/GPIO/HAL_GPIO.c: 162:         GPIO_PIN_DIRECTION_INITIALIZE(_PIN_CONFIG);
  2852   0019C2  C037  F02F         	movff	GPIO_PIN_INITIALIZE@_PIN_CONFIG,GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG
  2853   0019C6  ECE6  F008         	call	_GPIO_PIN_DIRECTION_INITIALIZE	;wreg free
  2854                           
  2855                           ;MCAL/GPIO/HAL_GPIO.c: 163:         GPIO_PIN_WRITE_LOGIC(_PIN_CONFIG,_PIN_CONFIG->LOGIC)
      +                          ;
  2856   0019CA  C037  F02F         	movff	GPIO_PIN_INITIALIZE@_PIN_CONFIG,GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG
  2857   0019CE  5037               	movf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,w,c
  2858   0019D0  6ED9               	movwf	fsr2l,c
  2859   0019D2  6ADA               	clrf	fsr2h,c
  2860   0019D4  0E00               	movlw	0
  2861   0019D6  BEDF               	btfsc	indf2,7,c
  2862   0019D8  0E01               	movlw	1
  2863   0019DA  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  2864   0019DC  EC6F  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  2865   0019E0                     
  2866                           ;MCAL/GPIO/HAL_GPIO.c: 164:         Retval = E_OK;
  2867   0019E0  0E01               	movlw	1
  2868   0019E2  6E39               	movwf	GPIO_PIN_INITIALIZE@Retval^0,c
  2869   0019E4                     l2349:
  2870                           
  2871                           ;MCAL/GPIO/HAL_GPIO.c: 166:     return Retval;
  2872   0019E4  5039               	movf	GPIO_PIN_INITIALIZE@Retval^0,w,c
  2873   0019E6  0012               	return		;funcret
  2874   0019E8                     __end_of_GPIO_PIN_INITIALIZE:
  2875                           	callstack 0
  2876                           
  2877 ;; *************** function _GPIO_PIN_WRITE_LOGIC *****************
  2878 ;; Defined at:
  2879 ;;		line 84 in file "MCAL/GPIO/HAL_GPIO.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  _PIN_CONFIG     1    0[COMRAM] PTR const struct .
  2882 ;;		 -> lcd2$DATA_PINS(8), lcd2(10), lcd1$DATA_PINS(4), lcd1(6), 
  2883 ;;		 -> RELAY_TURN_OFF@pin(1), RELAY_TURN_ON@pin(1), RELAY_INITIALIZE@pin(1), LED_Turn_OFF@PIN_OBJ(1), 
  2884 ;;		 -> LED_Turn_ON@PIN_OBJ(1), LED_INITIALIZE@PIN_OBJ(1), 
  2885 ;;  LOGIC           1    1[COMRAM] enum E3658
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;  Retval          1    7[COMRAM] enum E3654
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      enum E3654
  2890 ;; Registers used:
  2891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2901 ;;Total ram usage:        8 bytes
  2902 ;; Hardware stack levels used: 1
  2903 ;; This function calls:
  2904 ;;		Nothing
  2905 ;; This function is called by:
  2906 ;;		_GPIO_PIN_INITIALIZE
  2907 ;;		_lcd_send_4bits
  2908 ;;		_lcd_4bit_send_enable_signal
  2909 ;;		_lcd_8bit_send_enable_signal
  2910 ;;		_lcd_4bit_set_cursor
  2911 ;;		_lcd_8bit_set_cursor
  2912 ;;		_LCD_4BIT_SEND_COMMAND
  2913 ;;		_LCD_4BIT_SEND_CHARACTER_DATA
  2914 ;;		_LCD_8BIT_INITIALIZE
  2915 ;;		_LCD_8BIT_SEND_COMMAND
  2916 ;;		_LCD_8BIT_SEND_CHARACTER_DATA
  2917 ;;		_SEGMENT_WRITE_NUMBER
  2918 ;;		_DC_MOTOR_ROTATE_CW
  2919 ;;		_DC_MOTOR_ROTATE_CCW
  2920 ;;		_DC_MOTOR_STOP
  2921 ;;		_KEYPAD_GET_VALUE
  2922 ;;		_LED_Turn_ON
  2923 ;;		_LED_Turn_OFF
  2924 ;;		_RELAY_TURN_ON
  2925 ;;		_RELAY_TURN_OFF
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           	psect	text19
  2930   0012DE                     __ptext19:
  2931                           	callstack 0
  2932   0012DE                     _GPIO_PIN_WRITE_LOGIC:
  2933                           	callstack 27
  2934   0012DE                     
  2935                           ;MCAL/GPIO/HAL_GPIO.c: 86:     if(((void*)0) == _PIN_CONFIG || _PIN_CONFIG->PIN >= 8){
  2936   0012DE  502F               	movf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,w,c
  2937   0012E0  B4D8               	btfsc	status,2,c
  2938   0012E2  EF75  F009         	goto	u1151
  2939   0012E6  EF77  F009         	goto	u1150
  2940   0012EA                     u1151:
  2941   0012EA  EF87  F009         	goto	l2243
  2942   0012EE                     u1150:
  2943   0012EE  502F               	movf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,w,c
  2944   0012F0  6ED9               	movwf	fsr2l,c
  2945   0012F2  6ADA               	clrf	fsr2h,c
  2946   0012F4  30DF               	rrcf	223,w,c
  2947   0012F6  32E8               	rrcf	wreg,f,c
  2948   0012F8  32E8               	rrcf	wreg,f,c
  2949   0012FA  0B07               	andlw	7
  2950   0012FC  6E31               	movwf	??_GPIO_PIN_WRITE_LOGIC^0,c
  2951   0012FE  0E07               	movlw	7
  2952   001300  6431               	cpfsgt	??_GPIO_PIN_WRITE_LOGIC^0,c
  2953   001302  EF85  F009         	goto	u1161
  2954   001306  EF87  F009         	goto	u1160
  2955   00130A                     u1161:
  2956   00130A  EFE0  F009         	goto	l2257
  2957   00130E                     u1160:
  2958   00130E                     l2243:
  2959                           
  2960                           ;MCAL/GPIO/HAL_GPIO.c: 87:         Retval= E_NOT_OK;
  2961   00130E  0E00               	movlw	0
  2962   001310  6E36               	movwf	GPIO_PIN_WRITE_LOGIC@Retval^0,c
  2963                           
  2964                           ;MCAL/GPIO/HAL_GPIO.c: 88:     }
  2965   001312  EFF5  F009         	goto	l2259
  2966   001316                     l2245:
  2967                           
  2968                           ;MCAL/GPIO/HAL_GPIO.c: 92:                 (*LAT_REG[_PIN_CONFIG->PORT] &= ~(((uint8)0x0
      +                          1) << _PIN_CONFIG->PIN));
  2969   001316  502F               	movf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,w,c
  2970   001318  6ED9               	movwf	fsr2l,c
  2971   00131A  6ADA               	clrf	fsr2h,c
  2972   00131C  30DF               	rrcf	223,w,c
  2973   00131E  32E8               	rrcf	wreg,f,c
  2974   001320  32E8               	rrcf	wreg,f,c
  2975   001322  0B07               	andlw	7
  2976   001324  6E31               	movwf	??_GPIO_PIN_WRITE_LOGIC^0,c
  2977   001326  0E01               	movlw	1
  2978   001328  6E32               	movwf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,c
  2979   00132A  2A31               	incf	??_GPIO_PIN_WRITE_LOGIC^0,f,c
  2980   00132C  EF9A  F009         	goto	u1174
  2981   001330                     u1175:
  2982   001330  90D8               	bcf	status,0,c
  2983   001332  3632               	rlcf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,f,c
  2984   001334                     u1174:
  2985   001334  2E31               	decfsz	??_GPIO_PIN_WRITE_LOGIC^0,f,c
  2986   001336  EF98  F009         	goto	u1175
  2987   00133A  5032               	movf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,w,c
  2988   00133C  0AFF               	xorlw	255
  2989   00133E  6E33               	movwf	(??_GPIO_PIN_WRITE_LOGIC+2)^0,c
  2990   001340  502F               	movf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,w,c
  2991   001342  6ED9               	movwf	fsr2l,c
  2992   001344  6ADA               	clrf	fsr2h,c
  2993   001346  50DF               	movf	223,w,c
  2994   001348  0B07               	andlw	7
  2995   00134A  0D02               	mullw	2
  2996   00134C  50F3               	movf	243,w,c
  2997   00134E  0F01               	addlw	low _LAT_REG
  2998   001350  6ED9               	movwf	fsr2l,c
  2999   001352  6ADA               	clrf	fsr2h,c
  3000   001354  CFDE F034          	movff	postinc2,??_GPIO_PIN_WRITE_LOGIC+3
  3001   001358  CFDD F035          	movff	postdec2,??_GPIO_PIN_WRITE_LOGIC+4
  3002   00135C  C034  FFD9         	movff	??_GPIO_PIN_WRITE_LOGIC+3,fsr2l
  3003   001360  C035  FFDA         	movff	??_GPIO_PIN_WRITE_LOGIC+4,fsr2h
  3004   001364  5033               	movf	(??_GPIO_PIN_WRITE_LOGIC+2)^0,w,c
  3005   001366  16DF               	andwf	indf2,f,c
  3006   001368                     l2247:
  3007                           
  3008                           ;MCAL/GPIO/HAL_GPIO.c: 93:                 Retval = E_OK;
  3009   001368  0E01               	movlw	1
  3010   00136A  6E36               	movwf	GPIO_PIN_WRITE_LOGIC@Retval^0,c
  3011                           
  3012                           ;MCAL/GPIO/HAL_GPIO.c: 94:                 break;
  3013   00136C  EFF5  F009         	goto	l2259
  3014   001370                     l2249:
  3015                           
  3016                           ;MCAL/GPIO/HAL_GPIO.c: 96:                 (*LAT_REG[_PIN_CONFIG->PORT] |= (((uint8)0x01
      +                          ) << _PIN_CONFIG->PIN));
  3017   001370  502F               	movf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,w,c
  3018   001372  6ED9               	movwf	fsr2l,c
  3019   001374  6ADA               	clrf	fsr2h,c
  3020   001376  30DF               	rrcf	223,w,c
  3021   001378  32E8               	rrcf	wreg,f,c
  3022   00137A  32E8               	rrcf	wreg,f,c
  3023   00137C  0B07               	andlw	7
  3024   00137E  6E31               	movwf	??_GPIO_PIN_WRITE_LOGIC^0,c
  3025   001380  0E01               	movlw	1
  3026   001382  6E32               	movwf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,c
  3027   001384  2A31               	incf	??_GPIO_PIN_WRITE_LOGIC^0,f,c
  3028   001386  EFC7  F009         	goto	u1184
  3029   00138A                     u1185:
  3030   00138A  90D8               	bcf	status,0,c
  3031   00138C  3632               	rlcf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,f,c
  3032   00138E                     u1184:
  3033   00138E  2E31               	decfsz	??_GPIO_PIN_WRITE_LOGIC^0,f,c
  3034   001390  EFC5  F009         	goto	u1185
  3035   001394  502F               	movf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,w,c
  3036   001396  6ED9               	movwf	fsr2l,c
  3037   001398  6ADA               	clrf	fsr2h,c
  3038   00139A  50DF               	movf	223,w,c
  3039   00139C  0B07               	andlw	7
  3040   00139E  0D02               	mullw	2
  3041   0013A0  50F3               	movf	243,w,c
  3042   0013A2  0F01               	addlw	low _LAT_REG
  3043   0013A4  6ED9               	movwf	fsr2l,c
  3044   0013A6  6ADA               	clrf	fsr2h,c
  3045   0013A8  CFDE F033          	movff	postinc2,??_GPIO_PIN_WRITE_LOGIC+2
  3046   0013AC  CFDD F034          	movff	postdec2,??_GPIO_PIN_WRITE_LOGIC+3
  3047   0013B0  C033  FFD9         	movff	??_GPIO_PIN_WRITE_LOGIC+2,fsr2l
  3048   0013B4  C034  FFDA         	movff	??_GPIO_PIN_WRITE_LOGIC+3,fsr2h
  3049   0013B8  5032               	movf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,w,c
  3050   0013BA  12DF               	iorwf	indf2,f,c
  3051   0013BC  EFB4  F009         	goto	l2247
  3052   0013C0                     l2257:
  3053   0013C0  5030               	movf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,w,c
  3054   0013C2  6E31               	movwf	??_GPIO_PIN_WRITE_LOGIC^0,c
  3055   0013C4  6A32               	clrf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,c
  3056                           
  3057                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3058                           ; Switch size 1, requested type "simple"
  3059                           ; Number of cases is 1, Range of values is 0 to 0
  3060                           ; switch strategies available:
  3061                           ; Name         Instructions Cycles
  3062                           ; simple_byte            4     3 (average)
  3063                           ;	Chosen strategy is simple_byte
  3064   0013C6  5032               	movf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,w,c
  3065   0013C8  0A00               	xorlw	0	; case 0
  3066   0013CA  B4D8               	btfsc	status,2,c
  3067   0013CC  EFEA  F009         	goto	l3071
  3068   0013D0  EF87  F009         	goto	l2243
  3069   0013D4                     l3071:
  3070                           
  3071                           ; Switch size 1, requested type "simple"
  3072                           ; Number of cases is 2, Range of values is 0 to 1
  3073                           ; switch strategies available:
  3074                           ; Name         Instructions Cycles
  3075                           ; simple_byte            7     4 (average)
  3076                           ;	Chosen strategy is simple_byte
  3077   0013D4  5031               	movf	??_GPIO_PIN_WRITE_LOGIC^0,w,c
  3078   0013D6  0A00               	xorlw	0	; case 0
  3079   0013D8  B4D8               	btfsc	status,2,c
  3080   0013DA  EF8B  F009         	goto	l2245
  3081   0013DE  0A01               	xorlw	1	; case 1
  3082   0013E0  B4D8               	btfsc	status,2,c
  3083   0013E2  EFB8  F009         	goto	l2249
  3084   0013E6  EF87  F009         	goto	l2243
  3085   0013EA                     l2259:
  3086                           
  3087                           ;MCAL/GPIO/HAL_GPIO.c: 104:     return Retval;
  3088   0013EA  5036               	movf	GPIO_PIN_WRITE_LOGIC@Retval^0,w,c
  3089   0013EC  0012               	return		;funcret
  3090   0013EE                     __end_of_GPIO_PIN_WRITE_LOGIC:
  3091                           	callstack 0
  3092                           
  3093 ;; *************** function _GPIO_PIN_DIRECTION_INITIALIZE *****************
  3094 ;; Defined at:
  3095 ;;		line 29 in file "MCAL/GPIO/HAL_GPIO.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;  _PIN_CONFIG     1    0[COMRAM] PTR const struct .
  3098 ;;		 -> lcd2$DATA_PINS(8), lcd2(10), lcd1$DATA_PINS(4), lcd1(6), 
  3099 ;;		 -> RELAY_INITIALIZE@pin(1), LED_INITIALIZE@PIN_OBJ(1), 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;  Retval          1    6[COMRAM] enum E3654
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      enum E3654
  3104 ;; Registers used:
  3105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3111 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3112 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3113 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3114 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3115 ;;Total ram usage:        7 bytes
  3116 ;; Hardware stack levels used: 1
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_GPIO_PIN_INITIALIZE
  3121 ;;		_BUTTON_INITIALIZE
  3122 ;;		_KEYPAD_INITIALIZE
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           	psect	text20
  3127   0011CC                     __ptext20:
  3128                           	callstack 0
  3129   0011CC                     _GPIO_PIN_DIRECTION_INITIALIZE:
  3130                           	callstack 26
  3131   0011CC                     
  3132                           ;MCAL/GPIO/HAL_GPIO.c: 31:     if(((void*)0) == _PIN_CONFIG || _PIN_CONFIG->PIN >= 8){
  3133   0011CC  502F               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
  3134   0011CE  B4D8               	btfsc	status,2,c
  3135   0011D0  EFEC  F008         	goto	u1191
  3136   0011D4  EFEE  F008         	goto	u1190
  3137   0011D8                     u1191:
  3138   0011D8  EFFE  F008         	goto	l2271
  3139   0011DC                     u1190:
  3140   0011DC  502F               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
  3141   0011DE  6ED9               	movwf	fsr2l,c
  3142   0011E0  6ADA               	clrf	fsr2h,c
  3143   0011E2  30DF               	rrcf	223,w,c
  3144   0011E4  32E8               	rrcf	wreg,f,c
  3145   0011E6  32E8               	rrcf	wreg,f,c
  3146   0011E8  0B07               	andlw	7
  3147   0011EA  6E30               	movwf	??_GPIO_PIN_DIRECTION_INITIALIZE^0,c
  3148   0011EC  0E07               	movlw	7
  3149   0011EE  6430               	cpfsgt	??_GPIO_PIN_DIRECTION_INITIALIZE^0,c
  3150   0011F0  EFFC  F008         	goto	u1201
  3151   0011F4  EFFE  F008         	goto	u1200
  3152   0011F8                     u1201:
  3153   0011F8  EF57  F009         	goto	l2285
  3154   0011FC                     u1200:
  3155   0011FC                     l2271:
  3156                           
  3157                           ;MCAL/GPIO/HAL_GPIO.c: 32:         Retval = E_NOT_OK;
  3158   0011FC  0E00               	movlw	0
  3159   0011FE  6E35               	movwf	GPIO_PIN_DIRECTION_INITIALIZE@Retval^0,c
  3160                           
  3161                           ;MCAL/GPIO/HAL_GPIO.c: 33:     }
  3162   001200  EF6D  F009         	goto	l2287
  3163   001204                     l2273:
  3164                           
  3165                           ;MCAL/GPIO/HAL_GPIO.c: 37:                 (*TRIS_REG[_PIN_CONFIG->PORT] &= ~(((uint8)0x
      +                          01) << _PIN_CONFIG->PIN));
  3166   001204  502F               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
  3167   001206  6ED9               	movwf	fsr2l,c
  3168   001208  6ADA               	clrf	fsr2h,c
  3169   00120A  30DF               	rrcf	223,w,c
  3170   00120C  32E8               	rrcf	wreg,f,c
  3171   00120E  32E8               	rrcf	wreg,f,c
  3172   001210  0B07               	andlw	7
  3173   001212  6E30               	movwf	??_GPIO_PIN_DIRECTION_INITIALIZE^0,c
  3174   001214  0E01               	movlw	1
  3175   001216  6E31               	movwf	(??_GPIO_PIN_DIRECTION_INITIALIZE+1)^0,c
  3176   001218  2A30               	incf	??_GPIO_PIN_DIRECTION_INITIALIZE^0,f,c
  3177   00121A  EF11  F009         	goto	u1214
  3178   00121E                     u1215:
  3179   00121E  90D8               	bcf	status,0,c
  3180   001220  3631               	rlcf	(??_GPIO_PIN_DIRECTION_INITIALIZE+1)^0,f,c
  3181   001222                     u1214:
  3182   001222  2E30               	decfsz	??_GPIO_PIN_DIRECTION_INITIALIZE^0,f,c
  3183   001224  EF0F  F009         	goto	u1215
  3184   001228  5031               	movf	(??_GPIO_PIN_DIRECTION_INITIALIZE+1)^0,w,c
  3185   00122A  0AFF               	xorlw	255
  3186   00122C  6E32               	movwf	(??_GPIO_PIN_DIRECTION_INITIALIZE+2)^0,c
  3187   00122E  502F               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
  3188   001230  6ED9               	movwf	fsr2l,c
  3189   001232  6ADA               	clrf	fsr2h,c
  3190   001234  50DF               	movf	223,w,c
  3191   001236  0B07               	andlw	7
  3192   001238  0D02               	mullw	2
  3193   00123A  50F3               	movf	243,w,c
  3194   00123C  0F15               	addlw	low _TRIS_REG
  3195   00123E  6ED9               	movwf	fsr2l,c
  3196   001240  6ADA               	clrf	fsr2h,c
  3197   001242  CFDE F033          	movff	postinc2,??_GPIO_PIN_DIRECTION_INITIALIZE+3
  3198   001246  CFDD F034          	movff	postdec2,??_GPIO_PIN_DIRECTION_INITIALIZE+4
  3199   00124A  C033  FFD9         	movff	??_GPIO_PIN_DIRECTION_INITIALIZE+3,fsr2l
  3200   00124E  C034  FFDA         	movff	??_GPIO_PIN_DIRECTION_INITIALIZE+4,fsr2h
  3201   001252  5032               	movf	(??_GPIO_PIN_DIRECTION_INITIALIZE+2)^0,w,c
  3202   001254  16DF               	andwf	indf2,f,c
  3203   001256                     l2275:
  3204                           
  3205                           ;MCAL/GPIO/HAL_GPIO.c: 38:                 Retval = E_OK;
  3206   001256  0E01               	movlw	1
  3207   001258  6E35               	movwf	GPIO_PIN_DIRECTION_INITIALIZE@Retval^0,c
  3208                           
  3209                           ;MCAL/GPIO/HAL_GPIO.c: 39:                 break;
  3210   00125A  EF6D  F009         	goto	l2287
  3211   00125E                     l2277:
  3212                           
  3213                           ;MCAL/GPIO/HAL_GPIO.c: 41:                 (*TRIS_REG[_PIN_CONFIG->PORT] |= (((uint8)0x0
      +                          1) << _PIN_CONFIG->PIN));
  3214   00125E  502F               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
  3215   001260  6ED9               	movwf	fsr2l,c
  3216   001262  6ADA               	clrf	fsr2h,c
  3217   001264  30DF               	rrcf	223,w,c
  3218   001266  32E8               	rrcf	wreg,f,c
  3219   001268  32E8               	rrcf	wreg,f,c
  3220   00126A  0B07               	andlw	7
  3221   00126C  6E30               	movwf	??_GPIO_PIN_DIRECTION_INITIALIZE^0,c
  3222   00126E  0E01               	movlw	1
  3223   001270  6E31               	movwf	(??_GPIO_PIN_DIRECTION_INITIALIZE+1)^0,c
  3224   001272  2A30               	incf	??_GPIO_PIN_DIRECTION_INITIALIZE^0,f,c
  3225   001274  EF3E  F009         	goto	u1224
  3226   001278                     u1225:
  3227   001278  90D8               	bcf	status,0,c
  3228   00127A  3631               	rlcf	(??_GPIO_PIN_DIRECTION_INITIALIZE+1)^0,f,c
  3229   00127C                     u1224:
  3230   00127C  2E30               	decfsz	??_GPIO_PIN_DIRECTION_INITIALIZE^0,f,c
  3231   00127E  EF3C  F009         	goto	u1225
  3232   001282  502F               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
  3233   001284  6ED9               	movwf	fsr2l,c
  3234   001286  6ADA               	clrf	fsr2h,c
  3235   001288  50DF               	movf	223,w,c
  3236   00128A  0B07               	andlw	7
  3237   00128C  0D02               	mullw	2
  3238   00128E  50F3               	movf	243,w,c
  3239   001290  0F15               	addlw	low _TRIS_REG
  3240   001292  6ED9               	movwf	fsr2l,c
  3241   001294  6ADA               	clrf	fsr2h,c
  3242   001296  CFDE F032          	movff	postinc2,??_GPIO_PIN_DIRECTION_INITIALIZE+2
  3243   00129A  CFDD F033          	movff	postdec2,??_GPIO_PIN_DIRECTION_INITIALIZE+3
  3244   00129E  C032  FFD9         	movff	??_GPIO_PIN_DIRECTION_INITIALIZE+2,fsr2l
  3245   0012A2  C033  FFDA         	movff	??_GPIO_PIN_DIRECTION_INITIALIZE+3,fsr2h
  3246   0012A6  5031               	movf	(??_GPIO_PIN_DIRECTION_INITIALIZE+1)^0,w,c
  3247   0012A8  12DF               	iorwf	indf2,f,c
  3248   0012AA  EF2B  F009         	goto	l2275
  3249   0012AE                     l2285:
  3250   0012AE  502F               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
  3251   0012B0  6ED9               	movwf	fsr2l,c
  3252   0012B2  6ADA               	clrf	fsr2h,c
  3253   0012B4  BCDF               	btfsc	indf2,6,c
  3254   0012B6  EF5F  F009         	goto	u1231
  3255   0012BA  EF62  F009         	goto	u1230
  3256   0012BE                     u1231:
  3257   0012BE  0E01               	movlw	1
  3258   0012C0  EF63  F009         	goto	u1236
  3259   0012C4                     u1230:
  3260   0012C4  0E00               	movlw	0
  3261   0012C6                     u1236:
  3262                           
  3263                           ; Switch size 1, requested type "simple"
  3264                           ; Number of cases is 2, Range of values is 0 to 1
  3265                           ; switch strategies available:
  3266                           ; Name         Instructions Cycles
  3267                           ; simple_byte            7     4 (average)
  3268                           ;	Chosen strategy is simple_byte
  3269   0012C6  0A00               	xorlw	0	; case 0
  3270   0012C8  B4D8               	btfsc	status,2,c
  3271   0012CA  EF02  F009         	goto	l2273
  3272   0012CE  0A01               	xorlw	1	; case 1
  3273   0012D0  B4D8               	btfsc	status,2,c
  3274   0012D2  EF2F  F009         	goto	l2277
  3275   0012D6  EFFE  F008         	goto	l2271
  3276   0012DA                     l2287:
  3277                           
  3278                           ;MCAL/GPIO/HAL_GPIO.c: 49:     return Retval;
  3279   0012DA  5035               	movf	GPIO_PIN_DIRECTION_INITIALIZE@Retval^0,w,c
  3280   0012DC  0012               	return		;funcret
  3281   0012DE                     __end_of_GPIO_PIN_DIRECTION_INITIALIZE:
  3282                           	callstack 0
  3283                           
  3284                           	psect	rparam
  3285   000000                     
  3286                           	psect	config
  3287                           
  3288                           ; Padding undefined space
  3289   300000                     	org	3145728
  3290   300000  FF                 	db	255
  3291                           
  3292                           ;Config register CONFIG1H @ 0x300001
  3293                           ;	Oscillator Selection bits
  3294                           ;	FOSC = HS, HS oscillator
  3295                           ;	Fail-Safe Clock Monitor Enable bit
  3296                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3297                           ;	Internal/External Oscillator Switchover bit
  3298                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3299   300001                     	org	3145729
  3300   300001  02                 	db	2
  3301                           
  3302                           ;Config register CONFIG2L @ 0x300002
  3303                           ;	Power-up Timer Enable bit
  3304                           ;	PWRTEN = OFF, PWRT disabled
  3305                           ;	Brown-out Reset Enable bits
  3306                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3307                           ;	Brown Out Reset Voltage bits
  3308                           ;	BORV = 18, VBOR set to 1.8 V nominal
  3309   300002                     	org	3145730
  3310   300002  19                 	db	25
  3311                           
  3312                           ;Config register CONFIG2H @ 0x300003
  3313                           ;	Watchdog Timer Enable bit
  3314                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  3315                           ;	Watchdog Timer Postscale Select bits
  3316                           ;	WDTPS = 32768, 1:32768
  3317   300003                     	org	3145731
  3318   300003  1E                 	db	30
  3319                           
  3320                           ; Padding undefined space
  3321   300004                     	org	3145732
  3322   300004  FF                 	db	255
  3323                           
  3324                           ;Config register CONFIG3H @ 0x300005
  3325                           ;	CCP2 MUX bit
  3326                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3327                           ;	PORTB A/D Enable bit
  3328                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3329                           ;	Low-Power Timer1 Oscillator Enable bit
  3330                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3331                           ;	HFINTOSC Fast Start-up
  3332                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  3333                           ;	MCLR Pin Enable bit
  3334                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3335   300005                     	org	3145733
  3336   300005  89                 	db	137
  3337                           
  3338                           ;Config register CONFIG4L @ 0x300006
  3339                           ;	Stack Full/Underflow Reset Enable bit
  3340                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3341                           ;	Single-Supply ICSP Enable bit
  3342                           ;	LVP = OFF, Single-Supply ICSP disabled
  3343                           ;	Extended Instruction Set Enable bit
  3344                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3345                           ;	Background Debugger Enable bit
  3346                           ;	DEBUG = 0x1, unprogrammed default
  3347   300006                     	org	3145734
  3348   300006  81                 	db	129
  3349                           
  3350                           ; Padding undefined space
  3351   300007                     	org	3145735
  3352   300007  FF                 	db	255
  3353                           
  3354                           ;Config register CONFIG5L @ 0x300008
  3355                           ;	Code Protection Block 0
  3356                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3357                           ;	Code Protection Block 1
  3358                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3359                           ;	Code Protection Block 2
  3360                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3361                           ;	Code Protection Block 3
  3362                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3363   300008                     	org	3145736
  3364   300008  0F                 	db	15
  3365                           
  3366                           ;Config register CONFIG5H @ 0x300009
  3367                           ;	Boot Block Code Protection bit
  3368                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3369                           ;	Data EEPROM Code Protection bit
  3370                           ;	CPD = OFF, Data EEPROM not code-protected
  3371   300009                     	org	3145737
  3372   300009  C0                 	db	192
  3373                           
  3374                           ;Config register CONFIG6L @ 0x30000A
  3375                           ;	Write Protection Block 0
  3376                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3377                           ;	Write Protection Block 1
  3378                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3379                           ;	Write Protection Block 2
  3380                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3381                           ;	Write Protection Block 3
  3382                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  3383   30000A                     	org	3145738
  3384   30000A  0F                 	db	15
  3385                           
  3386                           ;Config register CONFIG6H @ 0x30000B
  3387                           ;	Configuration Register Write Protection bit
  3388                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3389                           ;	Boot Block Write Protection bit
  3390                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3391                           ;	Data EEPROM Write Protection bit
  3392                           ;	WRTD = OFF, Data EEPROM not write-protected
  3393   30000B                     	org	3145739
  3394   30000B  E0                 	db	224
  3395                           
  3396                           ;Config register CONFIG7L @ 0x30000C
  3397                           ;	Table Read Protection Block 0
  3398                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3399                           ;	Table Read Protection Block 1
  3400                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3401                           ;	Table Read Protection Block 2
  3402                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3403                           ;	Table Read Protection Block 3
  3404                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3405   30000C                     	org	3145740
  3406   30000C  0F                 	db	15
  3407                           
  3408                           ;Config register CONFIG7H @ 0x30000D
  3409                           ;	Boot Block Table Read Protection bit
  3410                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3411   30000D                     	org	3145741
  3412   30000D  40                 	db	64
  3413                           tosu	equ	0xFFF
  3414                           tosh	equ	0xFFE
  3415                           tosl	equ	0xFFD
  3416                           stkptr	equ	0xFFC
  3417                           pclatu	equ	0xFFB
  3418                           pclath	equ	0xFFA
  3419                           pcl	equ	0xFF9
  3420                           tblptru	equ	0xFF8
  3421                           tblptrh	equ	0xFF7
  3422                           tblptrl	equ	0xFF6
  3423                           tablat	equ	0xFF5
  3424                           prodh	equ	0xFF4
  3425                           prodl	equ	0xFF3
  3426                           indf0	equ	0xFEF
  3427                           postinc0	equ	0xFEE
  3428                           postdec0	equ	0xFED
  3429                           preinc0	equ	0xFEC
  3430                           plusw0	equ	0xFEB
  3431                           fsr0h	equ	0xFEA
  3432                           fsr0l	equ	0xFE9
  3433                           wreg	equ	0xFE8
  3434                           indf1	equ	0xFE7
  3435                           postinc1	equ	0xFE6
  3436                           postdec1	equ	0xFE5
  3437                           preinc1	equ	0xFE4
  3438                           plusw1	equ	0xFE3
  3439                           fsr1h	equ	0xFE2
  3440                           fsr1l	equ	0xFE1
  3441                           bsr	equ	0xFE0
  3442                           indf2	equ	0xFDF
  3443                           postinc2	equ	0xFDE
  3444                           postdec2	equ	0xFDD
  3445                           preinc2	equ	0xFDC
  3446                           plusw2	equ	0xFDB
  3447                           fsr2h	equ	0xFDA
  3448                           fsr2l	equ	0xFD9
  3449                           status	equ	0xFD8

Data Sizes:
    Strings     59
    Constant    16
    Data        110
    BSS         7
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      90
    BANK0           160      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[6]), lcd1$DATA_PINS(COMRAM[4]), lcd2(COMRAM[10]), lcd2$DATA_PINS(COMRAM[8]), 
		 -> LED_INITIALIZE@PIN_OBJ(COMRAM[1]), RELAY_INITIALIZE@pin(COMRAM[1]), 

    GPIO_PIN_INITIALIZE@_PIN_CONFIG	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[6]), lcd1$DATA_PINS(COMRAM[4]), lcd2(COMRAM[10]), lcd2$DATA_PINS(COMRAM[8]), 
		 -> LED_INITIALIZE@PIN_OBJ(COMRAM[1]), RELAY_INITIALIZE@pin(COMRAM[1]), 

    GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[6]), lcd1$DATA_PINS(COMRAM[4]), lcd2(COMRAM[10]), lcd2$DATA_PINS(COMRAM[8]), 
		 -> LED_INITIALIZE@PIN_OBJ(COMRAM[1]), LED_Turn_OFF@PIN_OBJ(COMRAM[1]), LED_Turn_ON@PIN_OBJ(COMRAM[1]), RELAY_INITIALIZE@pin(COMRAM[1]), 
		 -> RELAY_TURN_OFF@pin(COMRAM[1]), RELAY_TURN_ON@pin(COMRAM[1]), 

    LAT_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlhl[1]), LATB(BITBIGSFRlhh[1]), LATC(BITBIGSFRlhh[1]), LATD(BITBIGSFRlhh[1]), 
		 -> LATE(BITBIGSFRlhh[1]), 

    LCD_4BIT_INITIALIZE@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    LCD_4BIT_SEND_CHARACTER_DATA@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    LCD_4BIT_SEND_CHARACTER_DATA_POS@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    LCD_4BIT_SEND_COMMAND@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    LCD_4BIT_SEND_CUSTOM_CHARACTER@chr	PTR const unsigned char  size(1) Largest target is 8
		 -> charge_battery_00(BANK0[8]), charge_battery_100(BANK0[8]), charge_battery_25(BANK0[8]), charge_battery_50(BANK0[8]), 
		 -> charge_battery_75(BANK0[8]), 

    LCD_4BIT_SEND_CUSTOM_CHARACTER@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    LCD_8BIT_INITIALIZE@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    LCD_8BIT_SEND_CHARACTER_DATA@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    LCD_8BIT_SEND_CHARACTER_DATA_POS@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    LCD_8BIT_SEND_COMMAND@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    LCD_8BIT_SEND_CUSTOM_CHARACTER@chr	PTR unsigned char  size(1) Largest target is 8
		 -> charge_battery_00(BANK0[8]), charge_battery_100(BANK0[8]), charge_battery_25(BANK0[8]), charge_battery_50(BANK0[8]), 
		 -> charge_battery_75(BANK0[8]), 

    LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    PORT_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRlhl[1]), PORTC(BITBIGSFRlhl[1]), PORTD(BITBIGSFRlhl[1]), 
		 -> PORTE(BITBIGSFRlhl[1]), 

    S1383$buffer	PTR unsigned char  size(2) Largest target is 0

    S1383$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    TRIS_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_10(CODE[3]), STR_8(CODE[3]), STR_9(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_LCD_4BIT_SEND_CUSTOM_CHARACTER
    _LCD_8BIT_SEND_CUSTOM_CHARACTER->_LCD_8BIT_SEND_CHARACTER_DATA_POS
    _LCD_8BIT_SEND_CHARACTER_DATA_POS->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_LCD_8BIT_SEND_COMMAND
    _LCD_8BIT_SEND_CHARACTER_DATA->_lcd_8bit_send_enable_signal
    _LCD_4BIT_SEND_CUSTOM_CHARACTER->_LCD_4BIT_SEND_CHARACTER_DATA_POS
    _LCD_4BIT_SEND_CHARACTER_DATA_POS->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_LCD_4BIT_SEND_COMMAND
    _LCD_4BIT_SEND_CHARACTER_DATA->_lcd_send_4bits
    _ECU_LAYER_INITIALIZE->_LCD_4BIT_INITIALIZE
    _LCD_8BIT_INITIALIZE->_LCD_8BIT_SEND_COMMAND
    _LCD_8BIT_SEND_COMMAND->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_GPIO_PIN_WRITE_LOGIC
    _LCD_4BIT_INITIALIZE->_LCD_4BIT_SEND_COMMAND
    _LCD_4BIT_SEND_COMMAND->_lcd_send_4bits
    _lcd_send_4bits->_GPIO_PIN_WRITE_LOGIC
    _lcd_4bit_send_enable_signal->_GPIO_PIN_WRITE_LOGIC
    _GPIO_PIN_INITIALIZE->_GPIO_PIN_WRITE_LOGIC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  169621
                                             34 COMRAM     2     2      0
              _Application_intialize
     _LCD_4BIT_SEND_CUSTOM_CHARACTER
     _LCD_8BIT_SEND_CUSTOM_CHARACTER
 ---------------------------------------------------------------------------------
 (1) _LCD_8BIT_SEND_CUSTOM_CHARACTER                       7     2      5   50977
                                             26 COMRAM     7     2      5
       _LCD_8BIT_SEND_CHARACTER_DATA
   _LCD_8BIT_SEND_CHARACTER_DATA_POS
              _LCD_8BIT_SEND_COMMAND
 ---------------------------------------------------------------------------------
 (2) _LCD_8BIT_SEND_CHARACTER_DATA_POS                     5     1      4   27358
                                             21 COMRAM     5     1      4
       _LCD_8BIT_SEND_CHARACTER_DATA
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_set_cursor                                  4     1      3   16639
                                             17 COMRAM     4     1      3
               _GPIO_PIN_WRITE_LOGIC
              _LCD_8BIT_SEND_COMMAND
 ---------------------------------------------------------------------------------
 (3) _LCD_8BIT_SEND_CHARACTER_DATA                         7     5      2    9953
                                             10 COMRAM     7     5      2
               _GPIO_PIN_WRITE_LOGIC
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _LCD_4BIT_SEND_CUSTOM_CHARACTER                       7     2      5   73009
                                             27 COMRAM     7     2      5
       _LCD_4BIT_SEND_CHARACTER_DATA
   _LCD_4BIT_SEND_CHARACTER_DATA_POS
              _LCD_4BIT_SEND_COMMAND
 ---------------------------------------------------------------------------------
 (2) _LCD_4BIT_SEND_CHARACTER_DATA_POS                     5     1      4   38526
                                             22 COMRAM     5     1      4
       _LCD_4BIT_SEND_CHARACTER_DATA
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_set_cursor                                  4     1      3   22147
                                             18 COMRAM     4     1      3
               _GPIO_PIN_WRITE_LOGIC
              _LCD_4BIT_SEND_COMMAND
 ---------------------------------------------------------------------------------
 (3) _LCD_4BIT_SEND_CHARACTER_DATA                         3     1      2   15309
                                             15 COMRAM     3     1      2
               _GPIO_PIN_WRITE_LOGIC
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _Application_intialize                                0     0      0   45635
               _ECU_LAYER_INITIALIZE
 ---------------------------------------------------------------------------------
 (2) _ECU_LAYER_INITIALIZE                                 1     1      0   45635
                _LCD_4BIT_INITIALIZE
                _LCD_8BIT_INITIALIZE
 ---------------------------------------------------------------------------------
 (3) _LCD_8BIT_INITIALIZE                                  5     4      1   22292
                                             17 COMRAM     5     4      1
                _GPIO_PIN_INITIALIZE
               _GPIO_PIN_WRITE_LOGIC
              _LCD_8BIT_SEND_COMMAND
 ---------------------------------------------------------------------------------
 (2) _LCD_8BIT_SEND_COMMAND                                7     5      2   11473
                                             10 COMRAM     7     5      2
               _GPIO_PIN_WRITE_LOGIC
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_enable_signal                          2     1      1    4681
                                              8 COMRAM     2     1      1
               _GPIO_PIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (3) _LCD_4BIT_INITIALIZE                                  5     4      1   23340
                                             18 COMRAM     5     4      1
                _GPIO_PIN_INITIALIZE
              _LCD_4BIT_SEND_COMMAND
 ---------------------------------------------------------------------------------
 (2) _LCD_4BIT_SEND_COMMAND                                3     1      2   16981
                                             15 COMRAM     3     1      2
               _GPIO_PIN_WRITE_LOGIC
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (3) _lcd_send_4bits                                       7     5      2    5226
                                              8 COMRAM     7     5      2
               _GPIO_PIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_enable_signal                          2     1      1    4833
                                              8 COMRAM     2     1      1
               _GPIO_PIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (4) _GPIO_PIN_INITIALIZE                                  3     2      1    5893
                                              8 COMRAM     3     2      1
      _GPIO_PIN_DIRECTION_INITIALIZE
               _GPIO_PIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (4) _GPIO_PIN_WRITE_LOGIC                                 8     6      2    4437
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _GPIO_PIN_DIRECTION_INITIALIZE                        7     6      1     409
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Application_intialize
     _ECU_LAYER_INITIALIZE
       _LCD_4BIT_INITIALIZE
         _GPIO_PIN_INITIALIZE
           _GPIO_PIN_DIRECTION_INITIALIZE
           _GPIO_PIN_WRITE_LOGIC
         _LCD_4BIT_SEND_COMMAND
           _GPIO_PIN_WRITE_LOGIC
           _lcd_4bit_send_enable_signal
             _GPIO_PIN_WRITE_LOGIC
           _lcd_send_4bits
             _GPIO_PIN_WRITE_LOGIC
       _LCD_8BIT_INITIALIZE
         _GPIO_PIN_INITIALIZE
         _GPIO_PIN_WRITE_LOGIC
         _LCD_8BIT_SEND_COMMAND
           _GPIO_PIN_WRITE_LOGIC
           _lcd_8bit_send_enable_signal
             _GPIO_PIN_WRITE_LOGIC
   _LCD_4BIT_SEND_CUSTOM_CHARACTER
     _LCD_4BIT_SEND_CHARACTER_DATA
       _GPIO_PIN_WRITE_LOGIC
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _LCD_4BIT_SEND_CHARACTER_DATA_POS
       _LCD_4BIT_SEND_CHARACTER_DATA
       _lcd_4bit_set_cursor
         _GPIO_PIN_WRITE_LOGIC
         _LCD_4BIT_SEND_COMMAND
     _LCD_4BIT_SEND_COMMAND
   _LCD_8BIT_SEND_CUSTOM_CHARACTER
     _LCD_8BIT_SEND_CHARACTER_DATA
       _GPIO_PIN_WRITE_LOGIC
       _lcd_8bit_send_enable_signal
     _LCD_8BIT_SEND_CHARACTER_DATA_POS
       _LCD_8BIT_SEND_CHARACTER_DATA
       _lcd_8bit_set_cursor
         _GPIO_PIN_WRITE_LOGIC
         _LCD_8BIT_SEND_COMMAND
     _LCD_8BIT_SEND_COMMAND

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      40       5       40.0%
BITBIGSFRh          69      0       0      36        0.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     24      5A       1       94.7%
BITBIGSFRll         20      0       0      39        0.0%
BITBIGSFRlhh         4      0       0      37        0.0%
BITBIGSFRlhl         4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9A      40        0.0%
DATA                 0      0      9A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Oct 08 00:13:05 2024

                         ?_lcd_send_4bits 0037                    ??_GPIO_PIN_WRITE_LOGIC 0031  
               LCD_8BIT_INITIALIZE@Retval 0044                                       l220 12DC  
                                     l403 1734                                       l260 19E6  
                                     l172 1C68                                       l422 15EC  
                                     l342 1C6E                                       l239 13EC  
                                     l415 1690                                       l432 1A42  
                                     l336 1052                                       l427 1A9E  
                                     l381 18AC                                       l437 1C28  
                                     l517 191A                                       l391 1B72  
                                     l471 14F8                                       l464 1988  
                                     l386 1BB0                                       l490 1BEC  
                                     l485 17B8                                       l478 183C  
                                     _Ret 005A       __end_of_lcd_4bit_send_enable_signal 1BB2  
             _lcd_4bit_send_enable_signal 1B74                                       wreg 0FE8  
             __end_of_lcd_8bit_set_cursor 1692               lcd_send_4bits@_data_command 0038  
       lcd_8bit_send_enable_signal@Retval 0038                                      l2301 185E  
                                    l2311 1B74                                      l2303 188A  
                                    l2241 12EE                                      l2321 1BAE  
                                    l2313 1B84                                      l2305 188E  
                                    l2401 153A                                      l2243 130E  
                                    l2315 1B8C                                      l2307 18AA  
                                    l2411 158E                                      l2403 153E  
                                    l2331 1B5A                                      l2245 1316  
                                    l2341 199A                                      l2317 1B98  
                                    l2421 15C4                                      l2413 1594  
                                    l2405 155A                                      l2333 1B62  
                                    l2325 1B36                                      l2501 1640  
                                    l2271 11FC                                      l3071 13D4  
                                    l2247 1368                                      l2239 12DE  
                                    l2343 19BA                                      l2319 1BA0  
                                    l2423 15D0                                      l2415 15A0  
                                    l2407 1568                                      l2335 1B70  
                                    l2327 1B46                                      l2431 13EE  
                                    l2503 1654                                      l2511 168E  
                                    l2273 1204                                      l2249 1370  
                                    l2257 13C0                                      l2345 19C2  
                                    l2353 1A44                                      l2425 15DC  
                                    l2417 15AC                                      l2409 1574  
                                    l2329 1B4E                                      l2433 13FE  
                                    l2521 1A40                                      l2601 18AE  
                                    l2275 1256                                      l2267 11CC  
                                    l2259 13EA                                      l2347 19E0  
                                    l2339 198A                                      l2291 183E  
                                    l2355 1A54                                      l2419 15B8  
                                    l2427 15EA                                      l2363 17BA  
                                    l2451 145C                                      l2443 1422  
                                    l2435 1406                                      l2515 19E8  
                                    l2531 175A                                      l2603 18BE  
                                    l2277 125E                                      l2285 12AE  
                                    l2269 11DC                                      l2349 19E4  
                                    l2293 184E                                      l2357 1A5C  
                                    l2381 1830                                      l2365 17CA  
                                    l2453 1468                                      l2445 142E  
                                    l2437 141A                                      l2517 19F8  
                                    l2541 1790                                      l2525 1736  
                                    l2509 1668                                      l2613 18DC  
                                    l2621 1918                                      l2605 18C6  
                                    l2287 12DA                                      l2295 1856  
                                    l2359 1A9C                                      l2391 1512  
                                    l2375 17E6                                      l2383 183A  
                                    l2367 17D2                                      l2455 1482  
                                    l2447 1432                                      l2551 1C58  
                                    l2519 1A00                                      l2471 16BC  
                                    l2463 1692                                      l2543 17AC  
                                    l2527 1746                                      l2615 18F0  
                                    l2607 18D8                                      l2393 1526  
                                    l2377 1810                                      l2369 17DE  
                                    l2457 148E                                      l2449 144E  
                                    l2553 1C60                                      l2473 16D0  
                                    l2465 16A2                                      l2561 1C26  
                                    l2537 1762                                      l2545 17B6  
                                    l2529 174E                                      l2617 18F2  
                                    l2387 14FA                                      l2379 1814  
                                    l2459 14F6                                      l2475 16E4  
                                    l2483 170C                                      l2467 16AA  
                                    l2555 1BEE                                      l2539 178C  
                                    l2491 15FE                                      l2571 1BEA  
                                    l2619 1902                                      l2389 150A  
                                    l2549 1C58                                      l2477 16F8  
                                    l2469 16B6                                      l2485 1732  
                                    l2557 1BFE                                      l2581 1934  
                                    l2493 1606                                      l2565 1BB2  
                                    l2399 152E                                      l2575 1C6A  
                                    l2559 1C06                                      l2591 195E  
                                    l2583 1946                                      l2495 1612  
                                    l2567 1BC2                                      l2911 104E  
                                    l2593 1960                                      l2577 191C  
                                    l2497 1618                                      l2489 15EE  
                                    l2569 1BCA                                      l2921 111A  
                                    l2913 1086                                      l2595 1970  
                                    l2579 192C                                      l2499 162C  
                                    l2923 1130                                      l2915 109C  
                                    l2589 194A                                      l2597 1986  
                                    l2925 114A                                      l2917 10B6  
                                    l2927 1164                                      l2919 10D0  
                                    l2929 11AE                                      STR_1 1037  
                                    STR_2 1011                                      STR_5 1026  
                                    STR_6 1041                                      STR_8 1049  
                                    u1200 11FC                                      u1201 11F8  
                                    u1300 19BA                                      u1301 19B6  
                                    u1230 12C4                                      u1214 1222  
                                    u1150 12EE                                      u1310 1A54  
                                    u1231 12BE                                      u1215 121E  
                                    u1151 12EA                                      u1311 1A50  
                                    u2007 1090                                      u1224 127C  
                                    u1160 130E                                      u1240 184E  
                                    u1320 17CA                                      u1400 15FE  
                                    u1225 1278                                      u1161 130A  
                                    u1241 184A                                      u1321 17C6  
                                    u1401 15FA                                      u2017 10DA  
                                    u1410 19F8                                      u2107 157A  
                                    u1411 19F4                                      u2027 1124  
                                    u1236 12C6                                      u1260 18AA  
                                    u1340 1830                                      u1420 1746  
                                    u1500 1902                                      u1261 18A6  
                                    u2117 1590                                      u1341 182C  
                                    u1421 1742                                      u1501 18FE  
                                    u2037 116E                                      _LATA 0F89  
                                    u1190 11DC                                      u1174 1334  
                                    u1270 1B84                                      u1254 1878  
                                    u1350 150A                                      u1334 1800  
                                    _LATB 0F8A                                      u1191 11D8  
                                    u1175 1330                                      u2127 1B9A  
                                    u1271 1B80                                      u1255 1874  
                                    u1351 1506                                      u1335 17FC  
                                    u2047 11B8                                      _LATC 0F8B  
                                    u1184 138E                                      u1360 155A  
                                    u1280 1B46                                      u1440 17AC  
                                    _LATD 0F8C                                      u1185 138A  
                                    u1361 1556                                      u1281 1B42  
                                    u2057 1454                                      u1441 17A8  
                                    _LATE 0F8D                                      u1290 199A  
                                    u1370 13FE                                      u1450 1BFE  
                                    u1434 177C                                      u1291 1996  
                                    u2067 147A                                      u1371 13FA  
                                    u1451 1BFA                                      u1435 1778  
                                    u1380 144E                                      u1460 1BC2  
                                    u2077 1490                                      u1381 144A  
                                    u1461 1BBE                                      u1390 16A2  
                                    u1470 192C                                      u2087 1B5C  
                                    u1391 169E                                      u1471 1928  
                                    u1480 1970                                      u2097 1560  
                                    u1481 196C                                      u1490 18BE  
                                    u1491 18BA                       LED_INITIALIZE@F3739 0059  
           ??_lcd_4bit_send_enable_signal 0038                                      _lcd1 0029  
                                    _lcd2 001F                                      _main 104E  
                                    fsr2h 0FDA                                      indf2 0FDF  
                                    fsr1l 0FE1                                      fsr2l 0FD9  
                                    prodl 0FF3                                      start 0004  
           ?_LCD_4BIT_SEND_CHARACTER_DATA 003E                             _KEYPAD_VALUES 1001  
                            ___param_bank 0000         LCD_8BIT_SEND_CUSTOM_CHARACTER@chr 004C  
       LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd 0049         LCD_8BIT_SEND_CUSTOM_CHARACTER@row 004A  
                  ?_LCD_4BIT_SEND_COMMAND 003E                           _completed_heart 0060  
    LCD_4BIT_SEND_CUSTOM_CHARACTER@Retval 004F      LCD_8BIT_SEND_CUSTOM_CHARACTER@Retval 004E  
               lcd_4bit_set_cursor@Retval 0044                                     ?_main 002F  
                                   _PORTA 0F80                                     _PORTB 0F81  
                                   _PORTC 0F82                                     _PORTD 0F83  
                                   _PORTE 0F84                                     _TRISA 0F92  
                                   _TRISB 0F93                                     _TRISC 0F94  
                                   _TRISD 0F95                                     _TRISE 0F96  
    LCD_4BIT_SEND_CUSTOM_CHARACTER@column 004C      LCD_8BIT_SEND_CUSTOM_CHARACTER@column 004B  
               lcd_4bit_set_cursor@column 0043               __end_of_LCD_4BIT_INITIALIZE 15EE  
                  ?_Application_intialize 002F                                     tablat 0FF5  
                                   status 0FD8                           __initialization 1AA0  
                            __end_of_main 11CC              LCD_4BIT_SEND_COMMAND@command 003F  
            __end_of_ECU_LAYER_INITIALIZE 1C6A                    lcd_8bit_set_cursor@lcd 0040  
                  lcd_8bit_set_cursor@row 0041                                    ??_main 0051  
                           __activetblptr 0002               __end_of_LCD_8BIT_INITIALIZE 14FA  
          ??_LCD_4BIT_SEND_CHARACTER_DATA 0040                                    clear_0 1AE6  
                                  isa$std 0001                    LCD_4BIT_INITIALIZE@lcd 0041  
                        LED_Turn_ON@F3744 0058                              __pdataCOMRAM 0001  
                            __mediumconst 0000                                    tblptrh 0FF7  
                                  tblptrl 0FF6                                    tblptru 0FF8  
                LCD_4BIT_SEND_COMMAND@lcd 003E                                __accesstop 0060  
                 __end_of__initialization 1AEC                             ___rparam_used 0001  
                        ??_lcd_send_4bits 0039               LCD_4BIT_SEND_COMMAND@Retval 0040  
                          __pcstackCOMRAM 002F                              __pidataBANK0 1AF6  
                     _GPIO_PIN_INITIALIZE 198A                     _LCD_8BIT_SEND_COMMAND 17BA  
          ?_GPIO_PIN_DIRECTION_INITIALIZE 002F                      ?_GPIO_PIN_INITIALIZE 0037  
                    LCD_4BIT_INITIALIZE@i 0043                      _ECU_LAYER_INITIALIZE 1C58  
                              __pnvCOMRAM 005A                   ??_LCD_4BIT_SEND_COMMAND 0040  
        ??_LCD_8BIT_SEND_CUSTOM_CHARACTER 004E           ?_LCD_8BIT_SEND_CUSTOM_CHARACTER 0049  
       lcd_4bit_send_enable_signal@Retval 0038                 LCD_4BIT_INITIALIZE@Retval 0045  
                                 _LAT_REG 0001         LCD_4BIT_SEND_CUSTOM_CHARACTER@chr 004D  
       LCD_4BIT_SEND_CUSTOM_CHARACTER@lcd 004A         LCD_4BIT_SEND_CUSTOM_CHARACTER@row 004B  
                 ??_Application_intialize 0046                     ??_GPIO_PIN_INITIALIZE 0038  
     __end_of_lcd_8bit_send_enable_signal 1B74               _lcd_8bit_send_enable_signal 1B36  
                   ?_ECU_LAYER_INITIALIZE 002F                       RELAY_TURN_OFF@F3749 0053  
          lcd_8bit_send_enable_signal@lcd 0037             ??_lcd_8bit_send_enable_signal 0038  
                  LCD_8BIT_SEND_COMMAND@i 003E                                   __Hparam 0000  
                                 __Lparam 0000                    ?_LCD_8BIT_SEND_COMMAND 0039  
                            __psmallconst 1000                                   __pcinit 1AA0  
                                 __ramtop 1000           LCD_8BIT_SEND_CHARACTER_DATA@lcd 0039  
                                 __ptext0 104E                                   __ptext1 18AE  
                                 __ptext2 1BB2                                   __ptext3 15EE  
                                 __ptext4 1736                                   __ptext5 191C  
                                 __ptext6 1BEE                                   __ptext7 1692  
                                 __ptext8 19E8                                   __ptext9 1C6A  
__end_of_LCD_8BIT_SEND_CHARACTER_DATA_POS 1BEE        ??_LCD_8BIT_SEND_CHARACTER_DATA_POS 0048  
       ?_LCD_8BIT_SEND_CHARACTER_DATA_POS 0044          _LCD_8BIT_SEND_CHARACTER_DATA_POS 1BB2  
                       LED_Turn_OFF@F3749 0057                      end_of_initialization 1AEC  
                       lcd_send_4bits@lcd 0037                             __Lmediumconst 0000  
                              _right_half 0068                                   postdec1 0FE5  
                                 postdec2 0FDD                                   postinc0 0FEE  
                                 postinc2 0FDE       LCD_4BIT_SEND_CHARACTER_DATA_POS@lcd 0045  
     LCD_8BIT_SEND_CHARACTER_DATA_POS@lcd 0044       LCD_4BIT_SEND_CHARACTER_DATA_POS@row 0046  
     LCD_8BIT_SEND_CHARACTER_DATA_POS@row 0045           LCD_4BIT_SEND_CHARACTER_DATA@lcd 003E  
__end_of_LCD_4BIT_SEND_CHARACTER_DATA_POS 1C2A        ??_LCD_4BIT_SEND_CHARACTER_DATA_POS 0049  
       ?_LCD_4BIT_SEND_CHARACTER_DATA_POS 0045          _LCD_4BIT_SEND_CHARACTER_DATA_POS 1BEE  
            LCD_8BIT_SEND_COMMAND@command 003A                    ??_ECU_LAYER_INITIALIZE 0046  
          GPIO_PIN_INITIALIZE@_PIN_CONFIG 0037           LCD_8BIT_SEND_CUSTOM_CHARACTER@i 004F  
                     _lcd_4bit_set_cursor 1692                      lcd_send_4bits@Retval 003B  
                           __pidataCOMRAM 1C2A                    LCD_8BIT_INITIALIZE@lcd 0040  
                     start_initialization 1AA0              ?_lcd_4bit_send_enable_signal 0037  
                    ?_lcd_4bit_set_cursor 0041                  LCD_8BIT_SEND_COMMAND@lcd 0039  
         ??_GPIO_PIN_DIRECTION_INITIALIZE 0030                GPIO_PIN_WRITE_LOGIC@Retval 0036  
         LCD_4BIT_SEND_CUSTOM_CHARACTER@i 0050                     __end_of_KEYPAD_VALUES 1011  
           __end_of_LCD_4BIT_SEND_COMMAND 1AA0          ??_LCD_4BIT_SEND_CUSTOM_CHARACTER 004F  
         ?_LCD_4BIT_SEND_CUSTOM_CHARACTER 004A                           lcd_send_4bits@i 003C  
                             __pdataBANK0 0060                       _lcd_8bit_set_cursor 15EE  
                             __pbssCOMRAM 0053                     ??_lcd_4bit_set_cursor 0044  
  __end_of_LCD_8BIT_SEND_CUSTOM_CHARACTER 191C            _LCD_8BIT_SEND_CUSTOM_CHARACTER 18AE  
                    LCD_8BIT_INITIALIZE@i 0042             __end_of_Application_intialize 1C70  
                    ?_lcd_8bit_set_cursor 0040              __end_of_GPIO_PIN_WRITE_LOGIC 13EE  
                 ??_LCD_8BIT_SEND_COMMAND 003B      __end_of_LCD_8BIT_SEND_CHARACTER_DATA 17BA  
            _LCD_8BIT_SEND_CHARACTER_DATA 1736  GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG 002F  
                     _LCD_4BIT_INITIALIZE 14FA               __end_of_GPIO_PIN_INITIALIZE 19E8  
                             __smallconst 1000                        RELAY_TURN_ON@F3743 0054  
                               _left_half 0070             LCD_8BIT_SEND_CHARACTER_DATA@i 003E  
                      _charge_battery_100 0078                     ??_lcd_8bit_set_cursor 0043  
                    ?_LCD_4BIT_INITIALIZE 0041           GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG 002F  
   __end_of_GPIO_PIN_DIRECTION_INITIALIZE 12DE             _GPIO_PIN_DIRECTION_INITIALIZE 11CC  
           ?_LCD_8BIT_SEND_CHARACTER_DATA 0039                                  _PORT_REG 000B  
               GPIO_PIN_INITIALIZE@Retval 0039                                  _TRIS_REG 0015  
               lcd_8bit_set_cursor@Retval 0043                 lcd_8bit_set_cursor@column 0042  
                     _LCD_8BIT_INITIALIZE 13EE                                 copy_data0 1AB4  
                               copy_data1 1AD4                 GPIO_PIN_WRITE_LOGIC@LOGIC 0030  
                   ??_LCD_4BIT_INITIALIZE 0042     LCD_4BIT_SEND_CUSTOM_CHARACTER@mem_pos 004E  
   LCD_8BIT_SEND_CUSTOM_CHARACTER@mem_pos 004D                                  __Hrparam 0000  
                    ?_LCD_8BIT_INITIALIZE 0040                                  __Lrparam 0000  
                  lcd_4bit_set_cursor@lcd 0041                    lcd_4bit_set_cursor@row 0042  
                    _GPIO_PIN_WRITE_LOGIC 12DE          LCD_8BIT_SEND_CHARACTER_DATA@data 003A  
                                __ptext10 1C58                                  __ptext11 13EE  
                                __ptext20 11CC                                  __ptext12 17BA  
                                __ptext13 1B36                                  __ptext14 14FA  
                                __ptext15 1A44                                  __ptext16 183E  
                                __ptext17 1B74                                  __ptext18 198A  
                                __ptext19 12DE       GPIO_PIN_DIRECTION_INITIALIZE@Retval 0035  
                       _charge_battery_00 0098                         _charge_battery_25 0090  
                       _charge_battery_50 0088                         _charge_battery_75 0080  
                   ??_LCD_8BIT_INITIALIZE 0041                                  isa$xinst 0000  
                         LED_TOGGLE@F3754 0056                            _lcd_send_4bits 183E  
          ??_LCD_8BIT_SEND_CHARACTER_DATA 003B                     ?_GPIO_PIN_WRITE_LOGIC 002F  
  __end_of_LCD_4BIT_SEND_CUSTOM_CHARACTER 198A            _LCD_4BIT_SEND_CUSTOM_CHARACTER 191C  
            ?_lcd_8bit_send_enable_signal 0037            lcd_4bit_send_enable_signal@lcd 0037  
      LCD_4BIT_SEND_CHARACTER_DATA@Retval 0040        LCD_8BIT_SEND_CHARACTER_DATA@Retval 003D  
           __end_of_LCD_8BIT_SEND_COMMAND 183E                    __end_of_lcd_send_4bits 18AE  
                   _LCD_4BIT_SEND_COMMAND 1A44               LCD_8BIT_SEND_COMMAND@Retval 003D  
             __end_of_lcd_4bit_set_cursor 1736      LCD_4BIT_SEND_CHARACTER_DATA_POS@data 0048  
    LCD_8BIT_SEND_CHARACTER_DATA_POS@data 0047                     _Application_intialize 1C6A  
        LCD_4BIT_SEND_CHARACTER_DATA@data 003F    LCD_4BIT_SEND_CHARACTER_DATA_POS@Retval 0049  
  LCD_8BIT_SEND_CHARACTER_DATA_POS@Retval 0048      __end_of_LCD_4BIT_SEND_CHARACTER_DATA 1A44  
            _LCD_4BIT_SEND_CHARACTER_DATA 19E8    LCD_4BIT_SEND_CHARACTER_DATA_POS@column 0047  
  LCD_8BIT_SEND_CHARACTER_DATA_POS@column 0046                     RELAY_INITIALIZE@F3737 0055  
