

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Sep 25 10:01:59 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 12/10/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F46K20 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     
    57                           	psect	idataCOMRAM
    58   00138A                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for _LAT_REG
    62   00138A  89                 	db	137
    63   00138B  0F                 	db	15
    64   00138C  8A                 	db	138
    65   00138D  0F                 	db	15
    66   00138E  8B                 	db	139
    67   00138F  0F                 	db	15
    68   001390  8C                 	db	140
    69   001391  0F                 	db	15
    70   001392  8D                 	db	141
    71   001393  0F                 	db	15
    72                           
    73                           ;initializer for _PORT_REG
    74   001394  80                 	db	128
    75   001395  0F                 	db	15
    76   001396  81                 	db	129
    77   001397  0F                 	db	15
    78   001398  82                 	db	130
    79   001399  0F                 	db	15
    80   00139A  83                 	db	131
    81   00139B  0F                 	db	15
    82   00139C  84                 	db	132
    83   00139D  0F                 	db	15
    84                           
    85                           ;initializer for _TRIS_REG
    86   00139E  92                 	db	146
    87   00139F  0F                 	db	15
    88   0013A0  93                 	db	147
    89   0013A1  0F                 	db	15
    90   0013A2  94                 	db	148
    91   0013A3  0F                 	db	15
    92   0013A4  95                 	db	149
    93   0013A5  0F                 	db	15
    94   0013A6  96                 	db	150
    95   0013A7  0F                 	db	15
    96                           
    97                           ;initializer for _motor2
    98   0013A8  12                 	db	18
    99   0013A9  1A                 	db	26
   100                           
   101                           ;initializer for _motor1
   102   0013AA  02                 	db	2
   103   0013AB  0A                 	db	10
   104                           
   105                           	psect	nvCOMRAM
   106   000042                     __pnvCOMRAM:
   107                           	callstack 0
   108   000042                     _Ret:
   109                           	callstack 0
   110   000042                     	ds	1
   111   000000                     _PORTA	set	3968
   112   000000                     _TRISA	set	3986
   113   000000                     _TRISE	set	3990
   114   000000                     _TRISD	set	3989
   115   000000                     _TRISC	set	3988
   116   000000                     _TRISB	set	3987
   117   000000                     _LATA	set	3977
   118   000000                     _PORTE	set	3972
   119   000000                     _PORTD	set	3971
   120   000000                     _PORTC	set	3970
   121   000000                     _PORTB	set	3969
   122   000000                     _LATE	set	3981
   123   000000                     _LATD	set	3980
   124   000000                     _LATC	set	3979
   125   000000                     _LATB	set	3978
   126                           
   127                           ; #config settings
   128                           
   129                           	psect	cinit
   130   001354                     __pcinit:
   131                           	callstack 0
   132   001354                     start_initialization:
   133                           	callstack 0
   134   001354                     __initialization:
   135                           	callstack 0
   136                           
   137                           ; Initialize objects allocated to COMRAM (34 bytes)
   138                           ; load TBLPTR registers with __pidataCOMRAM
   139   001354  0E8A               	movlw	low __pidataCOMRAM
   140   001356  6EF6               	movwf	tblptrl,c
   141   001358  0E13               	movlw	high __pidataCOMRAM
   142   00135A  6EF7               	movwf	tblptrh,c
   143   00135C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   144   00135E  6EF8               	movwf	tblptru,c
   145   001360  EE00  F001         	lfsr	0,__pdataCOMRAM
   146   001364  EE10 F022          	lfsr	1,34
   147   001368                     copy_data0:
   148   001368  0009               	tblrd		*+
   149   00136A  CFF5 FFEE          	movff	tablat,postinc0
   150   00136E  50E5               	movf	postdec1,w,c
   151   001370  50E1               	movf	fsr1l,w,c
   152   001372  E1FA               	bnz	copy_data0
   153                           
   154                           ; Clear objects allocated to COMRAM (15 bytes)
   155   001374  EE00  F033         	lfsr	0,__pbssCOMRAM
   156   001378  0E0F               	movlw	15
   157   00137A                     clear_0:
   158   00137A  6AEE               	clrf	postinc0,c
   159   00137C  06E8               	decf	wreg,f,c
   160   00137E  E1FD               	bnz	clear_0
   161   001380                     end_of_initialization:
   162                           	callstack 0
   163   001380                     __end_of__initialization:
   164                           	callstack 0
   165   001380  0E00               	movlw	low (__Lmediumconst shr (0+16))
   166   001382  6EF8               	movwf	tblptru,c
   167   001384  0100               	movlb	0
   168   001386  EFE1  F009         	goto	_main	;jump to C main() function
   169                           
   170                           	psect	bssCOMRAM
   171   000033                     __pbssCOMRAM:
   172                           	callstack 0
   173   000033                     DC_MOTOR_STOP@F3174:
   174                           	callstack 0
   175   000033                     	ds	1
   176   000034                     DC_MOTOR_STOP@F3172:
   177                           	callstack 0
   178   000034                     	ds	1
   179   000035                     DC_MOTOR_ROTATE_CCW@F3165:
   180                           	callstack 0
   181   000035                     	ds	1
   182   000036                     DC_MOTOR_ROTATE_CCW@F3163:
   183                           	callstack 0
   184   000036                     	ds	1
   185   000037                     DC_MOTOR_ROTATE_CW@F3156:
   186                           	callstack 0
   187   000037                     	ds	1
   188   000038                     DC_MOTOR_ROTATE_CW@F3154:
   189                           	callstack 0
   190   000038                     	ds	1
   191   000039                     DC_MOTOR_INITIALIZE@F3149:
   192                           	callstack 0
   193   000039                     	ds	1
   194   00003A                     DC_MOTOR_INITIALIZE@F3147:
   195                           	callstack 0
   196   00003A                     	ds	1
   197   00003B                     RELAY_TURN_OFF@F3158:
   198                           	callstack 0
   199   00003B                     	ds	1
   200   00003C                     RELAY_TURN_ON@F3152:
   201                           	callstack 0
   202   00003C                     	ds	1
   203   00003D                     RELAY_INITIALIZE@F3146:
   204                           	callstack 0
   205   00003D                     	ds	1
   206   00003E                     LED_TOGGLE@F3163:
   207                           	callstack 0
   208   00003E                     	ds	1
   209   00003F                     LED_Turn_OFF@F3158:
   210                           	callstack 0
   211   00003F                     	ds	1
   212   000040                     LED_Turn_ON@F3153:
   213                           	callstack 0
   214   000040                     	ds	1
   215   000041                     LED_INITIALIZE@F3148:
   216                           	callstack 0
   217   000041                     	ds	1
   218                           
   219                           	psect	dataCOMRAM
   220   000001                     __pdataCOMRAM:
   221                           	callstack 0
   222   000001                     _LAT_REG:
   223                           	callstack 0
   224   000001                     	ds	10
   225   00000B                     _PORT_REG:
   226                           	callstack 0
   227   00000B                     	ds	10
   228   000015                     _TRIS_REG:
   229                           	callstack 0
   230   000015                     	ds	10
   231   00001F                     _motor2:
   232                           	callstack 0
   233   00001F                     	ds	2
   234   000021                     _motor1:
   235                           	callstack 0
   236   000021                     	ds	2
   237                           
   238                           	psect	cstackCOMRAM
   239   000023                     __pcstackCOMRAM:
   240                           	callstack 0
   241   000023                     GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG:
   242                           	callstack 0
   243   000023                     GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG:
   244                           	callstack 0
   245                           
   246                           ; 1 bytes @ 0x0
   247   000023                     	ds	1
   248   000024                     ??_GPIO_PIN_DIRECTION_INITIALIZE:
   249   000024                     GPIO_PIN_WRITE_LOGIC@LOGIC:
   250                           	callstack 0
   251                           
   252                           ; 1 bytes @ 0x1
   253   000024                     	ds	1
   254   000025                     ??_GPIO_PIN_WRITE_LOGIC:
   255                           
   256                           ; 1 bytes @ 0x2
   257   000025                     	ds	4
   258   000029                     GPIO_PIN_DIRECTION_INITIALIZE@Retval:
   259                           	callstack 0
   260                           
   261                           ; 1 bytes @ 0x6
   262   000029                     	ds	1
   263   00002A                     GPIO_PIN_WRITE_LOGIC@Retval:
   264                           	callstack 0
   265                           
   266                           ; 1 bytes @ 0x7
   267   00002A                     	ds	1
   268   00002B                     GPIO_PIN_INITIALIZE@_PIN_CONFIG:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0x8
   272   00002B                     	ds	1
   273   00002C                     ??_GPIO_PIN_INITIALIZE:
   274                           
   275                           ; 1 bytes @ 0x9
   276   00002C                     	ds	1
   277   00002D                     GPIO_PIN_INITIALIZE@Retval:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0xA
   281   00002D                     	ds	1
   282   00002E                     DC_MOTOR_INITIALIZE@motor:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0xB
   286   00002E                     	ds	1
   287   00002F                     ??_DC_MOTOR_INITIALIZE:
   288                           
   289                           ; 1 bytes @ 0xC
   290   00002F                     	ds	1
   291   000030                     DC_MOTOR_INITIALIZE@Retval:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0xD
   295   000030                     	ds	1
   296   000031                     DC_MOTOR_INITIALIZE@motor_pin1:
   297                           	callstack 0
   298                           
   299                           ; 1 bytes @ 0xE
   300   000031                     	ds	1
   301   000032                     DC_MOTOR_INITIALIZE@motor_pin2:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0xF
   305   000032                     	ds	1
   306   000033                     
   307                           ; 1 bytes @ 0x10
   308 ;;
   309 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   310 ;;
   311 ;; *************** function _main *****************
   312 ;; Defined at:
   313 ;;		line 26 in file "Drivers_Main.c"
   314 ;; Parameters:    Size  Location     Type
   315 ;;		None
   316 ;; Auto vars:     Size  Location     Type
   317 ;;		None
   318 ;; Return value:  Size  Location     Type
   319 ;;                  2  214[None  ] int 
   320 ;; Registers used:
   321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   322 ;; Tracked objects:
   323 ;;		On entry : 0/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   331 ;;Total ram usage:        0 bytes
   332 ;; Hardware stack levels required when called: 4
   333 ;; This function calls:
   334 ;;		_Application_intialize
   335 ;; This function is called by:
   336 ;;		Startup code after reset
   337 ;; This function uses a non-reentrant model
   338 ;;
   339                           
   340                           	psect	text0
   341   0013C2                     __ptext0:
   342                           	callstack 0
   343   0013C2                     _main:
   344                           	callstack 27
   345   0013C2                     
   346                           ;Drivers_Main.c: 27:     Application_intialize();
   347   0013C2  ECD6  F009         	call	_Application_intialize	;wreg free
   348   0013C6                     l215:
   349   0013C6  EFE3  F009         	goto	l215
   350   0013CA  EF02  F000         	goto	start
   351   0013CE                     __end_of_main:
   352                           	callstack 0
   353                           
   354 ;; *************** function _Application_intialize *****************
   355 ;; Defined at:
   356 ;;		line 34 in file "Drivers_Main.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;		None
   359 ;; Auto vars:     Size  Location     Type
   360 ;;		None
   361 ;; Return value:  Size  Location     Type
   362 ;;                  1    wreg      void 
   363 ;; Registers used:
   364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   365 ;; Tracked objects:
   366 ;;		On entry : 0/0
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   374 ;;Total ram usage:        0 bytes
   375 ;; Hardware stack levels used: 1
   376 ;; Hardware stack levels required when called: 3
   377 ;; This function calls:
   378 ;;		_DC_MOTOR_INITIALIZE
   379 ;; This function is called by:
   380 ;;		_main
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           	psect	text1
   385   0013AC                     __ptext1:
   386                           	callstack 0
   387   0013AC                     _Application_intialize:
   388                           	callstack 27
   389   0013AC                     
   390                           ;Drivers_Main.c: 35:     Ret = DC_MOTOR_INITIALIZE(&motor1);
   391   0013AC  0E21               	movlw	low _motor1
   392   0013AE  6E2E               	movwf	DC_MOTOR_INITIALIZE@motor^0,c
   393   0013B0  EC12  F009         	call	_DC_MOTOR_INITIALIZE	;wreg free
   394   0013B4  6E42               	movwf	_Ret^0,c
   395                           
   396                           ;Drivers_Main.c: 36:     Ret = DC_MOTOR_INITIALIZE(&motor2);
   397   0013B6  0E1F               	movlw	low _motor2
   398   0013B8  6E2E               	movwf	DC_MOTOR_INITIALIZE@motor^0,c
   399   0013BA  EC12  F009         	call	_DC_MOTOR_INITIALIZE	;wreg free
   400   0013BE  6E42               	movwf	_Ret^0,c
   401   0013C0  0012               	return		;funcret
   402   0013C2                     __end_of_Application_intialize:
   403                           	callstack 0
   404                           
   405 ;; *************** function _DC_MOTOR_INITIALIZE *****************
   406 ;; Defined at:
   407 ;;		line 15 in file "ECUAL/DC_Motor/ECU_DC_MOTOR.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;  motor           1   11[COMRAM] PTR const struct .
   410 ;;		 -> motor2(2), motor1(2), 
   411 ;; Auto vars:     Size  Location     Type
   412 ;;  motor_pin2      1   15[COMRAM] struct .
   413 ;;  motor_pin1      1   14[COMRAM] struct .
   414 ;;  Retval          1   13[COMRAM] enum E3063
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      enum E3063
   417 ;; Registers used:
   418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   424 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   425 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   426 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   427 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   428 ;;Total ram usage:        5 bytes
   429 ;; Hardware stack levels used: 1
   430 ;; Hardware stack levels required when called: 2
   431 ;; This function calls:
   432 ;;		_GPIO_PIN_INITIALIZE
   433 ;; This function is called by:
   434 ;;		_Application_intialize
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           	psect	text2
   439   001224                     __ptext2:
   440                           	callstack 0
   441   001224                     _DC_MOTOR_INITIALIZE:
   442                           	callstack 27
   443   001224                     
   444                           ;ECUAL/DC_Motor/ECU_DC_MOTOR.c: 17:     if(((void*)0) == motor){
   445   001224  502E               	movf	DC_MOTOR_INITIALIZE@motor^0,w,c
   446   001226  A4D8               	btfss	status,2,c
   447   001228  EF18  F009         	goto	u741
   448   00122C  EF1A  F009         	goto	u740
   449   001230                     u741:
   450   001230  EF1E  F009         	goto	l228
   451   001234                     u740:
   452   001234                     
   453                           ;ECUAL/DC_Motor/ECU_DC_MOTOR.c: 18:         Retval = E_NOT_OK;
   454   001234  0E00               	movlw	0
   455   001236  6E30               	movwf	DC_MOTOR_INITIALIZE@Retval^0,c
   456                           
   457                           ;ECUAL/DC_Motor/ECU_DC_MOTOR.c: 19:     }
   458   001238  EF79  F009         	goto	l1499
   459   00123C                     l228:
   460                           
   461                           ;ECUAL/DC_Motor/ECU_DC_MOTOR.c: 21:         PIN_CONFIG_T motor_pin1 = {.PORT = motor->dc
      +                          _motor_pin[0].PORT , .PIN = motor->dc_motor_pin[0].PIN ,
   462   00123C  C03A  F031         	movff	DC_MOTOR_INITIALIZE@F3147,DC_MOTOR_INITIALIZE@motor_pin1
   463   001240  502E               	movf	DC_MOTOR_INITIALIZE@motor^0,w,c
   464   001242  6ED9               	movwf	fsr2l,c
   465   001244  6ADA               	clrf	fsr2h,c
   466   001246  50DF               	movf	223,w,c
   467   001248  0B07               	andlw	7
   468   00124A  6E2F               	movwf	??_DC_MOTOR_INITIALIZE^0,c
   469   00124C  5031               	movf	DC_MOTOR_INITIALIZE@motor_pin1^0,w,c
   470   00124E  182F               	xorwf	??_DC_MOTOR_INITIALIZE^0,w,c
   471   001250  0BF8               	andlw	-8
   472   001252  182F               	xorwf	??_DC_MOTOR_INITIALIZE^0,w,c
   473   001254  6E31               	movwf	DC_MOTOR_INITIALIZE@motor_pin1^0,c
   474   001256  502E               	movf	DC_MOTOR_INITIALIZE@motor^0,w,c
   475   001258  6ED9               	movwf	fsr2l,c
   476   00125A  6ADA               	clrf	fsr2h,c
   477   00125C  30DF               	rrcf	223,w,c
   478   00125E  32E8               	rrcf	wreg,f,c
   479   001260  32E8               	rrcf	wreg,f,c
   480   001262  0B07               	andlw	7
   481   001264  6E2F               	movwf	??_DC_MOTOR_INITIALIZE^0,c
   482   001266  462F               	rlncf	??_DC_MOTOR_INITIALIZE^0,f,c
   483   001268  462F               	rlncf	??_DC_MOTOR_INITIALIZE^0,f,c
   484   00126A  462F               	rlncf	??_DC_MOTOR_INITIALIZE^0,f,c
   485   00126C  5031               	movf	DC_MOTOR_INITIALIZE@motor_pin1^0,w,c
   486   00126E  182F               	xorwf	??_DC_MOTOR_INITIALIZE^0,w,c
   487   001270  0BC7               	andlw	-57
   488   001272  182F               	xorwf	??_DC_MOTOR_INITIALIZE^0,w,c
   489   001274  6E31               	movwf	DC_MOTOR_INITIALIZE@motor_pin1^0,c
   490   001276  9C31               	bcf	DC_MOTOR_INITIALIZE@motor_pin1^0,6,c
   491   001278  502E               	movf	DC_MOTOR_INITIALIZE@motor^0,w,c
   492   00127A  6ED9               	movwf	fsr2l,c
   493   00127C  6ADA               	clrf	fsr2h,c
   494   00127E  ACDF               	btfss	indf2,6,c
   495   001280  D002               	bra	u755
   496   001282  8E31               	bsf	DC_MOTOR_INITIALIZE@motor_pin1^0,7,c
   497   001284  D001               	bra	u757
   498   001286                     u755:
   499   001286  9E31               	bcf	DC_MOTOR_INITIALIZE@motor_pin1^0,7,c
   500   001288                     u757:
   501   001288                     
   502                           ;ECUAL/DC_Motor/ECU_DC_MOTOR.c: 23:         PIN_CONFIG_T motor_pin2 = {.PORT = motor->dc
      +                          _motor_pin[1].PORT , .PIN = motor->dc_motor_pin[1].PIN ,
   503   001288  C039  F032         	movff	DC_MOTOR_INITIALIZE@F3149,DC_MOTOR_INITIALIZE@motor_pin2
   504   00128C  502E               	movf	DC_MOTOR_INITIALIZE@motor^0,w,c
   505   00128E  6ED9               	movwf	fsr2l,c
   506   001290  6ADA               	clrf	fsr2h,c
   507   001292  0E01               	movlw	1
   508   001294  26D9               	addwf	fsr2l,f,c
   509   001296  50DF               	movf	223,w,c
   510   001298  0B07               	andlw	7
   511   00129A  6E2F               	movwf	??_DC_MOTOR_INITIALIZE^0,c
   512   00129C  5032               	movf	DC_MOTOR_INITIALIZE@motor_pin2^0,w,c
   513   00129E  182F               	xorwf	??_DC_MOTOR_INITIALIZE^0,w,c
   514   0012A0  0BF8               	andlw	-8
   515   0012A2  182F               	xorwf	??_DC_MOTOR_INITIALIZE^0,w,c
   516   0012A4  6E32               	movwf	DC_MOTOR_INITIALIZE@motor_pin2^0,c
   517   0012A6  502E               	movf	DC_MOTOR_INITIALIZE@motor^0,w,c
   518   0012A8  6ED9               	movwf	fsr2l,c
   519   0012AA  6ADA               	clrf	fsr2h,c
   520   0012AC  0E01               	movlw	1
   521   0012AE  26D9               	addwf	fsr2l,f,c
   522   0012B0  30DF               	rrcf	223,w,c
   523   0012B2  32E8               	rrcf	wreg,f,c
   524   0012B4  32E8               	rrcf	wreg,f,c
   525   0012B6  0B07               	andlw	7
   526   0012B8  6E2F               	movwf	??_DC_MOTOR_INITIALIZE^0,c
   527   0012BA  462F               	rlncf	??_DC_MOTOR_INITIALIZE^0,f,c
   528   0012BC  462F               	rlncf	??_DC_MOTOR_INITIALIZE^0,f,c
   529   0012BE  462F               	rlncf	??_DC_MOTOR_INITIALIZE^0,f,c
   530   0012C0  5032               	movf	DC_MOTOR_INITIALIZE@motor_pin2^0,w,c
   531   0012C2  182F               	xorwf	??_DC_MOTOR_INITIALIZE^0,w,c
   532   0012C4  0BC7               	andlw	-57
   533   0012C6  182F               	xorwf	??_DC_MOTOR_INITIALIZE^0,w,c
   534   0012C8  6E32               	movwf	DC_MOTOR_INITIALIZE@motor_pin2^0,c
   535   0012CA  9C32               	bcf	DC_MOTOR_INITIALIZE@motor_pin2^0,6,c
   536   0012CC  502E               	movf	DC_MOTOR_INITIALIZE@motor^0,w,c
   537   0012CE  6ED9               	movwf	fsr2l,c
   538   0012D0  6ADA               	clrf	fsr2h,c
   539   0012D2  0E01               	movlw	1
   540   0012D4  26D9               	addwf	fsr2l,f,c
   541   0012D6  ACDF               	btfss	indf2,6,c
   542   0012D8  D002               	bra	u765
   543   0012DA  8E32               	bsf	DC_MOTOR_INITIALIZE@motor_pin2^0,7,c
   544   0012DC  D001               	bra	u767
   545   0012DE                     u765:
   546   0012DE  9E32               	bcf	DC_MOTOR_INITIALIZE@motor_pin2^0,7,c
   547   0012E0                     u767:
   548   0012E0  0E31               	movlw	low DC_MOTOR_INITIALIZE@motor_pin1
   549   0012E2  6E2B               	movwf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,c
   550   0012E4  EC7B  F009         	call	_GPIO_PIN_INITIALIZE	;wreg free
   551   0012E8                     
   552                           ;ECUAL/DC_Motor/ECU_DC_MOTOR.c: 27:         Retval = GPIO_PIN_INITIALIZE(&motor_pin2);
   553   0012E8  0E32               	movlw	low DC_MOTOR_INITIALIZE@motor_pin2
   554   0012EA  6E2B               	movwf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,c
   555   0012EC  EC7B  F009         	call	_GPIO_PIN_INITIALIZE	;wreg free
   556   0012F0  6E30               	movwf	DC_MOTOR_INITIALIZE@Retval^0,c
   557   0012F2                     l1499:
   558                           
   559                           ;ECUAL/DC_Motor/ECU_DC_MOTOR.c: 29:     return Retval;
   560   0012F2  5030               	movf	DC_MOTOR_INITIALIZE@Retval^0,w,c
   561   0012F4  0012               	return		;funcret
   562   0012F6                     __end_of_DC_MOTOR_INITIALIZE:
   563                           	callstack 0
   564                           
   565 ;; *************** function _GPIO_PIN_INITIALIZE *****************
   566 ;; Defined at:
   567 ;;		line 156 in file "MCAL/GPIO/HAL_GPIO.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;  _PIN_CONFIG     1    8[COMRAM] PTR const struct .
   570 ;;		 -> DC_MOTOR_INITIALIZE@motor_pin2(1), DC_MOTOR_INITIALIZE@motor_pin1(1), RELAY_INITIALIZE@pin(1), LED_INITIALIZE@PI
      +N_OBJ(1), 
   571 ;; Auto vars:     Size  Location     Type
   572 ;;  Retval          1   10[COMRAM] enum E3063
   573 ;; Return value:  Size  Location     Type
   574 ;;                  1    wreg      enum E3063
   575 ;; Registers used:
   576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   577 ;; Tracked objects:
   578 ;;		On entry : 0/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   582 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   583 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   584 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   585 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;Total ram usage:        3 bytes
   587 ;; Hardware stack levels used: 1
   588 ;; Hardware stack levels required when called: 1
   589 ;; This function calls:
   590 ;;		_GPIO_PIN_DIRECTION_INITIALIZE
   591 ;;		_GPIO_PIN_WRITE_LOGIC
   592 ;; This function is called by:
   593 ;;		_DC_MOTOR_INITIALIZE
   594 ;;		_LED_INITIALIZE
   595 ;;		_RELAY_INITIALIZE
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           	psect	text3
   600   0012F6                     __ptext3:
   601                           	callstack 0
   602   0012F6                     _GPIO_PIN_INITIALIZE:
   603                           	callstack 27
   604   0012F6                     
   605                           ;MCAL/GPIO/HAL_GPIO.c: 158:     if(((void*)0) == _PIN_CONFIG || _PIN_CONFIG->PIN >= 8){
   606   0012F6  502B               	movf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,w,c
   607   0012F8  B4D8               	btfsc	status,2,c
   608   0012FA  EF81  F009         	goto	u721
   609   0012FE  EF83  F009         	goto	u720
   610   001302                     u721:
   611   001302  EF93  F009         	goto	l1465
   612   001306                     u720:
   613   001306  502B               	movf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,w,c
   614   001308  6ED9               	movwf	fsr2l,c
   615   00130A  6ADA               	clrf	fsr2h,c
   616   00130C  30DF               	rrcf	223,w,c
   617   00130E  32E8               	rrcf	wreg,f,c
   618   001310  32E8               	rrcf	wreg,f,c
   619   001312  0B07               	andlw	7
   620   001314  6E2C               	movwf	??_GPIO_PIN_INITIALIZE^0,c
   621   001316  0E07               	movlw	7
   622   001318  642C               	cpfsgt	??_GPIO_PIN_INITIALIZE^0,c
   623   00131A  EF91  F009         	goto	u731
   624   00131E  EF93  F009         	goto	u730
   625   001322                     u731:
   626   001322  EF97  F009         	goto	l1467
   627   001326                     u730:
   628   001326                     l1465:
   629                           
   630                           ;MCAL/GPIO/HAL_GPIO.c: 159:         Retval = E_NOT_OK;
   631   001326  0E00               	movlw	0
   632   001328  6E2D               	movwf	GPIO_PIN_INITIALIZE@Retval^0,c
   633                           
   634                           ;MCAL/GPIO/HAL_GPIO.c: 160:     }
   635   00132A  EFA8  F009         	goto	l1471
   636   00132E                     l1467:
   637                           
   638                           ;MCAL/GPIO/HAL_GPIO.c: 162:         GPIO_PIN_DIRECTION_INITIALIZE(_PIN_CONFIG);
   639   00132E  C02B  F023         	movff	GPIO_PIN_INITIALIZE@_PIN_CONFIG,GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG
   640   001332  EC01  F008         	call	_GPIO_PIN_DIRECTION_INITIALIZE	;wreg free
   641                           
   642                           ;MCAL/GPIO/HAL_GPIO.c: 163:         GPIO_PIN_WRITE_LOGIC(_PIN_CONFIG,_PIN_CONFIG->LOGIC)
      +                          ;
   643   001336  C02B  F023         	movff	GPIO_PIN_INITIALIZE@_PIN_CONFIG,GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG
   644   00133A  502B               	movf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,w,c
   645   00133C  6ED9               	movwf	fsr2l,c
   646   00133E  6ADA               	clrf	fsr2h,c
   647   001340  0E00               	movlw	0
   648   001342  BEDF               	btfsc	indf2,7,c
   649   001344  0E01               	movlw	1
   650   001346  6E24               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
   651   001348  EC8A  F008         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
   652   00134C                     
   653                           ;MCAL/GPIO/HAL_GPIO.c: 164:         Retval = E_OK;
   654   00134C  0E01               	movlw	1
   655   00134E  6E2D               	movwf	GPIO_PIN_INITIALIZE@Retval^0,c
   656   001350                     l1471:
   657                           
   658                           ;MCAL/GPIO/HAL_GPIO.c: 166:     return Retval;
   659   001350  502D               	movf	GPIO_PIN_INITIALIZE@Retval^0,w,c
   660   001352  0012               	return		;funcret
   661   001354                     __end_of_GPIO_PIN_INITIALIZE:
   662                           	callstack 0
   663                           
   664 ;; *************** function _GPIO_PIN_WRITE_LOGIC *****************
   665 ;; Defined at:
   666 ;;		line 84 in file "MCAL/GPIO/HAL_GPIO.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;  _PIN_CONFIG     1    0[COMRAM] PTR const struct .
   669 ;;		 -> DC_MOTOR_STOP@motor_pin2(1), DC_MOTOR_STOP@motor_pin1(1), DC_MOTOR_ROTATE_CCW@motor_pin2(1), DC_MOTOR_ROTATE_CCW
      +@motor_pin1(1), 
   670 ;;		 -> DC_MOTOR_ROTATE_CW@motor_pin2(1), DC_MOTOR_ROTATE_CW@motor_pin1(1), DC_MOTOR_INITIALIZE@motor_pin2(1), DC_MOTOR_
      +INITIALIZE@motor_pin1(1), 
   671 ;;		 -> RELAY_TURN_OFF@pin(1), RELAY_TURN_ON@pin(1), RELAY_INITIALIZE@pin(1), LED_Turn_OFF@PIN_OBJ(1), 
   672 ;;		 -> LED_Turn_ON@PIN_OBJ(1), LED_INITIALIZE@PIN_OBJ(1), 
   673 ;;  LOGIC           1    1[COMRAM] enum E3067
   674 ;; Auto vars:     Size  Location     Type
   675 ;;  Retval          1    7[COMRAM] enum E3063
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      enum E3063
   678 ;; Registers used:
   679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   685 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;Total ram usage:        8 bytes
   690 ;; Hardware stack levels used: 1
   691 ;; This function calls:
   692 ;;		Nothing
   693 ;; This function is called by:
   694 ;;		_GPIO_PIN_INITIALIZE
   695 ;;		_LED_Turn_ON
   696 ;;		_LED_Turn_OFF
   697 ;;		_RELAY_TURN_ON
   698 ;;		_RELAY_TURN_OFF
   699 ;;		_DC_MOTOR_ROTATE_CW
   700 ;;		_DC_MOTOR_ROTATE_CCW
   701 ;;		_DC_MOTOR_STOP
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           	psect	text4
   706   001114                     __ptext4:
   707                           	callstack 0
   708   001114                     _GPIO_PIN_WRITE_LOGIC:
   709                           	callstack 27
   710   001114                     
   711                           ;MCAL/GPIO/HAL_GPIO.c: 86:     if(((void*)0) == _PIN_CONFIG || _PIN_CONFIG->PIN >= 8){
   712   001114  5023               	movf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,w,c
   713   001116  B4D8               	btfsc	status,2,c
   714   001118  EF90  F008         	goto	u681
   715   00111C  EF92  F008         	goto	u680
   716   001120                     u681:
   717   001120  EFA2  F008         	goto	l1437
   718   001124                     u680:
   719   001124  5023               	movf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,w,c
   720   001126  6ED9               	movwf	fsr2l,c
   721   001128  6ADA               	clrf	fsr2h,c
   722   00112A  30DF               	rrcf	223,w,c
   723   00112C  32E8               	rrcf	wreg,f,c
   724   00112E  32E8               	rrcf	wreg,f,c
   725   001130  0B07               	andlw	7
   726   001132  6E25               	movwf	??_GPIO_PIN_WRITE_LOGIC^0,c
   727   001134  0E07               	movlw	7
   728   001136  6425               	cpfsgt	??_GPIO_PIN_WRITE_LOGIC^0,c
   729   001138  EFA0  F008         	goto	u691
   730   00113C  EFA2  F008         	goto	u690
   731   001140                     u691:
   732   001140  EFFB  F008         	goto	l1451
   733   001144                     u690:
   734   001144                     l1437:
   735                           
   736                           ;MCAL/GPIO/HAL_GPIO.c: 87:         Retval= E_NOT_OK;
   737   001144  0E00               	movlw	0
   738   001146  6E2A               	movwf	GPIO_PIN_WRITE_LOGIC@Retval^0,c
   739                           
   740                           ;MCAL/GPIO/HAL_GPIO.c: 88:     }
   741   001148  EF10  F009         	goto	l1453
   742   00114C                     l1439:
   743                           
   744                           ;MCAL/GPIO/HAL_GPIO.c: 92:                 (*LAT_REG[_PIN_CONFIG->PORT] &= ~(((uint8)0x0
      +                          1) << _PIN_CONFIG->PIN));
   745   00114C  5023               	movf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,w,c
   746   00114E  6ED9               	movwf	fsr2l,c
   747   001150  6ADA               	clrf	fsr2h,c
   748   001152  30DF               	rrcf	223,w,c
   749   001154  32E8               	rrcf	wreg,f,c
   750   001156  32E8               	rrcf	wreg,f,c
   751   001158  0B07               	andlw	7
   752   00115A  6E25               	movwf	??_GPIO_PIN_WRITE_LOGIC^0,c
   753   00115C  0E01               	movlw	1
   754   00115E  6E26               	movwf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,c
   755   001160  2A25               	incf	??_GPIO_PIN_WRITE_LOGIC^0,f,c
   756   001162  EFB5  F008         	goto	u704
   757   001166                     u705:
   758   001166  90D8               	bcf	status,0,c
   759   001168  3626               	rlcf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,f,c
   760   00116A                     u704:
   761   00116A  2E25               	decfsz	??_GPIO_PIN_WRITE_LOGIC^0,f,c
   762   00116C  EFB3  F008         	goto	u705
   763   001170  5026               	movf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,w,c
   764   001172  0AFF               	xorlw	255
   765   001174  6E27               	movwf	(??_GPIO_PIN_WRITE_LOGIC+2)^0,c
   766   001176  5023               	movf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,w,c
   767   001178  6ED9               	movwf	fsr2l,c
   768   00117A  6ADA               	clrf	fsr2h,c
   769   00117C  50DF               	movf	223,w,c
   770   00117E  0B07               	andlw	7
   771   001180  0D02               	mullw	2
   772   001182  50F3               	movf	243,w,c
   773   001184  0F01               	addlw	low _LAT_REG
   774   001186  6ED9               	movwf	fsr2l,c
   775   001188  6ADA               	clrf	fsr2h,c
   776   00118A  CFDE F028          	movff	postinc2,??_GPIO_PIN_WRITE_LOGIC+3
   777   00118E  CFDD F029          	movff	postdec2,??_GPIO_PIN_WRITE_LOGIC+4
   778   001192  C028  FFD9         	movff	??_GPIO_PIN_WRITE_LOGIC+3,fsr2l
   779   001196  C029  FFDA         	movff	??_GPIO_PIN_WRITE_LOGIC+4,fsr2h
   780   00119A  5027               	movf	(??_GPIO_PIN_WRITE_LOGIC+2)^0,w,c
   781   00119C  16DF               	andwf	indf2,f,c
   782   00119E                     l1441:
   783                           
   784                           ;MCAL/GPIO/HAL_GPIO.c: 93:                 Retval = E_OK;
   785   00119E  0E01               	movlw	1
   786   0011A0  6E2A               	movwf	GPIO_PIN_WRITE_LOGIC@Retval^0,c
   787                           
   788                           ;MCAL/GPIO/HAL_GPIO.c: 94:                 break;
   789   0011A2  EF10  F009         	goto	l1453
   790   0011A6                     l1443:
   791                           
   792                           ;MCAL/GPIO/HAL_GPIO.c: 96:                 (*LAT_REG[_PIN_CONFIG->PORT] |= (((uint8)0x01
      +                          ) << _PIN_CONFIG->PIN));
   793   0011A6  5023               	movf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,w,c
   794   0011A8  6ED9               	movwf	fsr2l,c
   795   0011AA  6ADA               	clrf	fsr2h,c
   796   0011AC  30DF               	rrcf	223,w,c
   797   0011AE  32E8               	rrcf	wreg,f,c
   798   0011B0  32E8               	rrcf	wreg,f,c
   799   0011B2  0B07               	andlw	7
   800   0011B4  6E25               	movwf	??_GPIO_PIN_WRITE_LOGIC^0,c
   801   0011B6  0E01               	movlw	1
   802   0011B8  6E26               	movwf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,c
   803   0011BA  2A25               	incf	??_GPIO_PIN_WRITE_LOGIC^0,f,c
   804   0011BC  EFE2  F008         	goto	u714
   805   0011C0                     u715:
   806   0011C0  90D8               	bcf	status,0,c
   807   0011C2  3626               	rlcf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,f,c
   808   0011C4                     u714:
   809   0011C4  2E25               	decfsz	??_GPIO_PIN_WRITE_LOGIC^0,f,c
   810   0011C6  EFE0  F008         	goto	u715
   811   0011CA  5023               	movf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,w,c
   812   0011CC  6ED9               	movwf	fsr2l,c
   813   0011CE  6ADA               	clrf	fsr2h,c
   814   0011D0  50DF               	movf	223,w,c
   815   0011D2  0B07               	andlw	7
   816   0011D4  0D02               	mullw	2
   817   0011D6  50F3               	movf	243,w,c
   818   0011D8  0F01               	addlw	low _LAT_REG
   819   0011DA  6ED9               	movwf	fsr2l,c
   820   0011DC  6ADA               	clrf	fsr2h,c
   821   0011DE  CFDE F027          	movff	postinc2,??_GPIO_PIN_WRITE_LOGIC+2
   822   0011E2  CFDD F028          	movff	postdec2,??_GPIO_PIN_WRITE_LOGIC+3
   823   0011E6  C027  FFD9         	movff	??_GPIO_PIN_WRITE_LOGIC+2,fsr2l
   824   0011EA  C028  FFDA         	movff	??_GPIO_PIN_WRITE_LOGIC+3,fsr2h
   825   0011EE  5026               	movf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,w,c
   826   0011F0  12DF               	iorwf	indf2,f,c
   827   0011F2  EFCF  F008         	goto	l1441
   828   0011F6                     l1451:
   829   0011F6  5024               	movf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,w,c
   830   0011F8  6E25               	movwf	??_GPIO_PIN_WRITE_LOGIC^0,c
   831   0011FA  6A26               	clrf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,c
   832                           
   833                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   834                           ; Switch size 1, requested type "simple"
   835                           ; Number of cases is 1, Range of values is 0 to 0
   836                           ; switch strategies available:
   837                           ; Name         Instructions Cycles
   838                           ; simple_byte            4     3 (average)
   839                           ;	Chosen strategy is simple_byte
   840   0011FC  5026               	movf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,w,c
   841   0011FE  0A00               	xorlw	0	; case 0
   842   001200  B4D8               	btfsc	status,2,c
   843   001202  EF05  F009         	goto	l1725
   844   001206  EFA2  F008         	goto	l1437
   845   00120A                     l1725:
   846                           
   847                           ; Switch size 1, requested type "simple"
   848                           ; Number of cases is 2, Range of values is 0 to 1
   849                           ; switch strategies available:
   850                           ; Name         Instructions Cycles
   851                           ; simple_byte            7     4 (average)
   852                           ;	Chosen strategy is simple_byte
   853   00120A  5025               	movf	??_GPIO_PIN_WRITE_LOGIC^0,w,c
   854   00120C  0A00               	xorlw	0	; case 0
   855   00120E  B4D8               	btfsc	status,2,c
   856   001210  EFA6  F008         	goto	l1439
   857   001214  0A01               	xorlw	1	; case 1
   858   001216  B4D8               	btfsc	status,2,c
   859   001218  EFD3  F008         	goto	l1443
   860   00121C  EFA2  F008         	goto	l1437
   861   001220                     l1453:
   862                           
   863                           ;MCAL/GPIO/HAL_GPIO.c: 104:     return Retval;
   864   001220  502A               	movf	GPIO_PIN_WRITE_LOGIC@Retval^0,w,c
   865   001222  0012               	return		;funcret
   866   001224                     __end_of_GPIO_PIN_WRITE_LOGIC:
   867                           	callstack 0
   868                           
   869 ;; *************** function _GPIO_PIN_DIRECTION_INITIALIZE *****************
   870 ;; Defined at:
   871 ;;		line 29 in file "MCAL/GPIO/HAL_GPIO.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;  _PIN_CONFIG     1    0[COMRAM] PTR const struct .
   874 ;;		 -> DC_MOTOR_INITIALIZE@motor_pin2(1), DC_MOTOR_INITIALIZE@motor_pin1(1), RELAY_INITIALIZE@pin(1), LED_INITIALIZE@PI
      +N_OBJ(1), 
   875 ;; Auto vars:     Size  Location     Type
   876 ;;  Retval          1    6[COMRAM] enum E3063
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      enum E3063
   879 ;; Registers used:
   880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   886 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   887 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   888 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   889 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   890 ;;Total ram usage:        7 bytes
   891 ;; Hardware stack levels used: 1
   892 ;; This function calls:
   893 ;;		Nothing
   894 ;; This function is called by:
   895 ;;		_GPIO_PIN_INITIALIZE
   896 ;;		_BUTTON_INITIALIZE
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           	psect	text5
   901   001002                     __ptext5:
   902                           	callstack 0
   903   001002                     _GPIO_PIN_DIRECTION_INITIALIZE:
   904                           	callstack 27
   905   001002                     
   906                           ;MCAL/GPIO/HAL_GPIO.c: 31:     if(((void*)0) == _PIN_CONFIG || _PIN_CONFIG->PIN >= 8){
   907   001002  5023               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
   908   001004  B4D8               	btfsc	status,2,c
   909   001006  EF07  F008         	goto	u631
   910   00100A  EF09  F008         	goto	u630
   911   00100E                     u631:
   912   00100E  EF19  F008         	goto	l1413
   913   001012                     u630:
   914   001012  5023               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
   915   001014  6ED9               	movwf	fsr2l,c
   916   001016  6ADA               	clrf	fsr2h,c
   917   001018  30DF               	rrcf	223,w,c
   918   00101A  32E8               	rrcf	wreg,f,c
   919   00101C  32E8               	rrcf	wreg,f,c
   920   00101E  0B07               	andlw	7
   921   001020  6E24               	movwf	??_GPIO_PIN_DIRECTION_INITIALIZE^0,c
   922   001022  0E07               	movlw	7
   923   001024  6424               	cpfsgt	??_GPIO_PIN_DIRECTION_INITIALIZE^0,c
   924   001026  EF17  F008         	goto	u641
   925   00102A  EF19  F008         	goto	u640
   926   00102E                     u641:
   927   00102E  EF72  F008         	goto	l1427
   928   001032                     u640:
   929   001032                     l1413:
   930                           
   931                           ;MCAL/GPIO/HAL_GPIO.c: 32:         Retval = E_NOT_OK;
   932   001032  0E00               	movlw	0
   933   001034  6E29               	movwf	GPIO_PIN_DIRECTION_INITIALIZE@Retval^0,c
   934                           
   935                           ;MCAL/GPIO/HAL_GPIO.c: 33:     }
   936   001036  EF88  F008         	goto	l1429
   937   00103A                     l1415:
   938                           
   939                           ;MCAL/GPIO/HAL_GPIO.c: 37:                 (*TRIS_REG[_PIN_CONFIG->PORT] &= ~(((uint8)0x
      +                          01) << _PIN_CONFIG->PIN));
   940   00103A  5023               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
   941   00103C  6ED9               	movwf	fsr2l,c
   942   00103E  6ADA               	clrf	fsr2h,c
   943   001040  30DF               	rrcf	223,w,c
   944   001042  32E8               	rrcf	wreg,f,c
   945   001044  32E8               	rrcf	wreg,f,c
   946   001046  0B07               	andlw	7
   947   001048  6E24               	movwf	??_GPIO_PIN_DIRECTION_INITIALIZE^0,c
   948   00104A  0E01               	movlw	1
   949   00104C  6E25               	movwf	(??_GPIO_PIN_DIRECTION_INITIALIZE+1)^0,c
   950   00104E  2A24               	incf	??_GPIO_PIN_DIRECTION_INITIALIZE^0,f,c
   951   001050  EF2C  F008         	goto	u654
   952   001054                     u655:
   953   001054  90D8               	bcf	status,0,c
   954   001056  3625               	rlcf	(??_GPIO_PIN_DIRECTION_INITIALIZE+1)^0,f,c
   955   001058                     u654:
   956   001058  2E24               	decfsz	??_GPIO_PIN_DIRECTION_INITIALIZE^0,f,c
   957   00105A  EF2A  F008         	goto	u655
   958   00105E  5025               	movf	(??_GPIO_PIN_DIRECTION_INITIALIZE+1)^0,w,c
   959   001060  0AFF               	xorlw	255
   960   001062  6E26               	movwf	(??_GPIO_PIN_DIRECTION_INITIALIZE+2)^0,c
   961   001064  5023               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
   962   001066  6ED9               	movwf	fsr2l,c
   963   001068  6ADA               	clrf	fsr2h,c
   964   00106A  50DF               	movf	223,w,c
   965   00106C  0B07               	andlw	7
   966   00106E  0D02               	mullw	2
   967   001070  50F3               	movf	243,w,c
   968   001072  0F15               	addlw	low _TRIS_REG
   969   001074  6ED9               	movwf	fsr2l,c
   970   001076  6ADA               	clrf	fsr2h,c
   971   001078  CFDE F027          	movff	postinc2,??_GPIO_PIN_DIRECTION_INITIALIZE+3
   972   00107C  CFDD F028          	movff	postdec2,??_GPIO_PIN_DIRECTION_INITIALIZE+4
   973   001080  C027  FFD9         	movff	??_GPIO_PIN_DIRECTION_INITIALIZE+3,fsr2l
   974   001084  C028  FFDA         	movff	??_GPIO_PIN_DIRECTION_INITIALIZE+4,fsr2h
   975   001088  5026               	movf	(??_GPIO_PIN_DIRECTION_INITIALIZE+2)^0,w,c
   976   00108A  16DF               	andwf	indf2,f,c
   977   00108C                     l1417:
   978                           
   979                           ;MCAL/GPIO/HAL_GPIO.c: 38:                 Retval = E_OK;
   980   00108C  0E01               	movlw	1
   981   00108E  6E29               	movwf	GPIO_PIN_DIRECTION_INITIALIZE@Retval^0,c
   982                           
   983                           ;MCAL/GPIO/HAL_GPIO.c: 39:                 break;
   984   001090  EF88  F008         	goto	l1429
   985   001094                     l1419:
   986                           
   987                           ;MCAL/GPIO/HAL_GPIO.c: 41:                 (*TRIS_REG[_PIN_CONFIG->PORT] |= (((uint8)0x0
      +                          1) << _PIN_CONFIG->PIN));
   988   001094  5023               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
   989   001096  6ED9               	movwf	fsr2l,c
   990   001098  6ADA               	clrf	fsr2h,c
   991   00109A  30DF               	rrcf	223,w,c
   992   00109C  32E8               	rrcf	wreg,f,c
   993   00109E  32E8               	rrcf	wreg,f,c
   994   0010A0  0B07               	andlw	7
   995   0010A2  6E24               	movwf	??_GPIO_PIN_DIRECTION_INITIALIZE^0,c
   996   0010A4  0E01               	movlw	1
   997   0010A6  6E25               	movwf	(??_GPIO_PIN_DIRECTION_INITIALIZE+1)^0,c
   998   0010A8  2A24               	incf	??_GPIO_PIN_DIRECTION_INITIALIZE^0,f,c
   999   0010AA  EF59  F008         	goto	u664
  1000   0010AE                     u665:
  1001   0010AE  90D8               	bcf	status,0,c
  1002   0010B0  3625               	rlcf	(??_GPIO_PIN_DIRECTION_INITIALIZE+1)^0,f,c
  1003   0010B2                     u664:
  1004   0010B2  2E24               	decfsz	??_GPIO_PIN_DIRECTION_INITIALIZE^0,f,c
  1005   0010B4  EF57  F008         	goto	u665
  1006   0010B8  5023               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
  1007   0010BA  6ED9               	movwf	fsr2l,c
  1008   0010BC  6ADA               	clrf	fsr2h,c
  1009   0010BE  50DF               	movf	223,w,c
  1010   0010C0  0B07               	andlw	7
  1011   0010C2  0D02               	mullw	2
  1012   0010C4  50F3               	movf	243,w,c
  1013   0010C6  0F15               	addlw	low _TRIS_REG
  1014   0010C8  6ED9               	movwf	fsr2l,c
  1015   0010CA  6ADA               	clrf	fsr2h,c
  1016   0010CC  CFDE F026          	movff	postinc2,??_GPIO_PIN_DIRECTION_INITIALIZE+2
  1017   0010D0  CFDD F027          	movff	postdec2,??_GPIO_PIN_DIRECTION_INITIALIZE+3
  1018   0010D4  C026  FFD9         	movff	??_GPIO_PIN_DIRECTION_INITIALIZE+2,fsr2l
  1019   0010D8  C027  FFDA         	movff	??_GPIO_PIN_DIRECTION_INITIALIZE+3,fsr2h
  1020   0010DC  5025               	movf	(??_GPIO_PIN_DIRECTION_INITIALIZE+1)^0,w,c
  1021   0010DE  12DF               	iorwf	indf2,f,c
  1022   0010E0  EF46  F008         	goto	l1417
  1023   0010E4                     l1427:
  1024   0010E4  5023               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
  1025   0010E6  6ED9               	movwf	fsr2l,c
  1026   0010E8  6ADA               	clrf	fsr2h,c
  1027   0010EA  BCDF               	btfsc	indf2,6,c
  1028   0010EC  EF7A  F008         	goto	u671
  1029   0010F0  EF7D  F008         	goto	u670
  1030   0010F4                     u671:
  1031   0010F4  0E01               	movlw	1
  1032   0010F6  EF7E  F008         	goto	u676
  1033   0010FA                     u670:
  1034   0010FA  0E00               	movlw	0
  1035   0010FC                     u676:
  1036                           
  1037                           ; Switch size 1, requested type "simple"
  1038                           ; Number of cases is 2, Range of values is 0 to 1
  1039                           ; switch strategies available:
  1040                           ; Name         Instructions Cycles
  1041                           ; simple_byte            7     4 (average)
  1042                           ;	Chosen strategy is simple_byte
  1043   0010FC  0A00               	xorlw	0	; case 0
  1044   0010FE  B4D8               	btfsc	status,2,c
  1045   001100  EF1D  F008         	goto	l1415
  1046   001104  0A01               	xorlw	1	; case 1
  1047   001106  B4D8               	btfsc	status,2,c
  1048   001108  EF4A  F008         	goto	l1419
  1049   00110C  EF19  F008         	goto	l1413
  1050   001110                     l1429:
  1051                           
  1052                           ;MCAL/GPIO/HAL_GPIO.c: 49:     return Retval;
  1053   001110  5029               	movf	GPIO_PIN_DIRECTION_INITIALIZE@Retval^0,w,c
  1054   001112  0012               	return		;funcret
  1055   001114                     __end_of_GPIO_PIN_DIRECTION_INITIALIZE:
  1056                           	callstack 0
  1057                           
  1058                           	psect	smallconst
  1059   001000                     __psmallconst:
  1060                           	callstack 0
  1061   001000  00                 	db	0
  1062   001001  00                 	db	0	; dummy byte at the end
  1063   000000                     
  1064                           	psect	rparam
  1065   000000                     
  1066                           	psect	config
  1067                           
  1068                           ; Padding undefined space
  1069   300000                     	org	3145728
  1070   300000  FF                 	db	255
  1071                           
  1072                           ;Config register CONFIG1H @ 0x300001
  1073                           ;	Oscillator Selection bits
  1074                           ;	FOSC = HS, HS oscillator
  1075                           ;	Fail-Safe Clock Monitor Enable bit
  1076                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1077                           ;	Internal/External Oscillator Switchover bit
  1078                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1079   300001                     	org	3145729
  1080   300001  02                 	db	2
  1081                           
  1082                           ;Config register CONFIG2L @ 0x300002
  1083                           ;	Power-up Timer Enable bit
  1084                           ;	PWRTEN = OFF, PWRT disabled
  1085                           ;	Brown-out Reset Enable bits
  1086                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1087                           ;	Brown Out Reset Voltage bits
  1088                           ;	BORV = 18, VBOR set to 1.8 V nominal
  1089   300002                     	org	3145730
  1090   300002  19                 	db	25
  1091                           
  1092                           ;Config register CONFIG2H @ 0x300003
  1093                           ;	Watchdog Timer Enable bit
  1094                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  1095                           ;	Watchdog Timer Postscale Select bits
  1096                           ;	WDTPS = 32768, 1:32768
  1097   300003                     	org	3145731
  1098   300003  1E                 	db	30
  1099                           
  1100                           ; Padding undefined space
  1101   300004                     	org	3145732
  1102   300004  FF                 	db	255
  1103                           
  1104                           ;Config register CONFIG3H @ 0x300005
  1105                           ;	CCP2 MUX bit
  1106                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1107                           ;	PORTB A/D Enable bit
  1108                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1109                           ;	Low-Power Timer1 Oscillator Enable bit
  1110                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1111                           ;	HFINTOSC Fast Start-up
  1112                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  1113                           ;	MCLR Pin Enable bit
  1114                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1115   300005                     	org	3145733
  1116   300005  89                 	db	137
  1117                           
  1118                           ;Config register CONFIG4L @ 0x300006
  1119                           ;	Stack Full/Underflow Reset Enable bit
  1120                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1121                           ;	Single-Supply ICSP Enable bit
  1122                           ;	LVP = OFF, Single-Supply ICSP disabled
  1123                           ;	Extended Instruction Set Enable bit
  1124                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1125                           ;	Background Debugger Enable bit
  1126                           ;	DEBUG = 0x1, unprogrammed default
  1127   300006                     	org	3145734
  1128   300006  81                 	db	129
  1129                           
  1130                           ; Padding undefined space
  1131   300007                     	org	3145735
  1132   300007  FF                 	db	255
  1133                           
  1134                           ;Config register CONFIG5L @ 0x300008
  1135                           ;	Code Protection Block 0
  1136                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1137                           ;	Code Protection Block 1
  1138                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1139                           ;	Code Protection Block 2
  1140                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1141                           ;	Code Protection Block 3
  1142                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1143   300008                     	org	3145736
  1144   300008  0F                 	db	15
  1145                           
  1146                           ;Config register CONFIG5H @ 0x300009
  1147                           ;	Boot Block Code Protection bit
  1148                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1149                           ;	Data EEPROM Code Protection bit
  1150                           ;	CPD = OFF, Data EEPROM not code-protected
  1151   300009                     	org	3145737
  1152   300009  C0                 	db	192
  1153                           
  1154                           ;Config register CONFIG6L @ 0x30000A
  1155                           ;	Write Protection Block 0
  1156                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1157                           ;	Write Protection Block 1
  1158                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1159                           ;	Write Protection Block 2
  1160                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1161                           ;	Write Protection Block 3
  1162                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  1163   30000A                     	org	3145738
  1164   30000A  0F                 	db	15
  1165                           
  1166                           ;Config register CONFIG6H @ 0x30000B
  1167                           ;	Configuration Register Write Protection bit
  1168                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1169                           ;	Boot Block Write Protection bit
  1170                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1171                           ;	Data EEPROM Write Protection bit
  1172                           ;	WRTD = OFF, Data EEPROM not write-protected
  1173   30000B                     	org	3145739
  1174   30000B  E0                 	db	224
  1175                           
  1176                           ;Config register CONFIG7L @ 0x30000C
  1177                           ;	Table Read Protection Block 0
  1178                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1179                           ;	Table Read Protection Block 1
  1180                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1181                           ;	Table Read Protection Block 2
  1182                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1183                           ;	Table Read Protection Block 3
  1184                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1185   30000C                     	org	3145740
  1186   30000C  0F                 	db	15
  1187                           
  1188                           ;Config register CONFIG7H @ 0x30000D
  1189                           ;	Boot Block Table Read Protection bit
  1190                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1191   30000D                     	org	3145741
  1192   30000D  40                 	db	64
  1193                           tosu	equ	0xFFF
  1194                           tosh	equ	0xFFE
  1195                           tosl	equ	0xFFD
  1196                           stkptr	equ	0xFFC
  1197                           pclatu	equ	0xFFB
  1198                           pclath	equ	0xFFA
  1199                           pcl	equ	0xFF9
  1200                           tblptru	equ	0xFF8
  1201                           tblptrh	equ	0xFF7
  1202                           tblptrl	equ	0xFF6
  1203                           tablat	equ	0xFF5
  1204                           prodh	equ	0xFF4
  1205                           prodl	equ	0xFF3
  1206                           indf0	equ	0xFEF
  1207                           postinc0	equ	0xFEE
  1208                           postdec0	equ	0xFED
  1209                           preinc0	equ	0xFEC
  1210                           plusw0	equ	0xFEB
  1211                           fsr0h	equ	0xFEA
  1212                           fsr0l	equ	0xFE9
  1213                           wreg	equ	0xFE8
  1214                           indf1	equ	0xFE7
  1215                           postinc1	equ	0xFE6
  1216                           postdec1	equ	0xFE5
  1217                           preinc1	equ	0xFE4
  1218                           plusw1	equ	0xFE3
  1219                           fsr1h	equ	0xFE2
  1220                           fsr1l	equ	0xFE1
  1221                           bsr	equ	0xFE0
  1222                           indf2	equ	0xFDF
  1223                           postinc2	equ	0xFDE
  1224                           postdec2	equ	0xFDD
  1225                           preinc2	equ	0xFDC
  1226                           plusw2	equ	0xFDB
  1227                           fsr2h	equ	0xFDA
  1228                           fsr2l	equ	0xFD9
  1229                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         15
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      66
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    DC_MOTOR_INITIALIZE@motor	PTR const struct . size(1) Largest target is 2
		 -> motor1(COMRAM[2]), motor2(COMRAM[2]), 

    GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG	PTR const struct . size(1) Largest target is 1
		 -> DC_MOTOR_INITIALIZE@motor_pin1(COMRAM[1]), DC_MOTOR_INITIALIZE@motor_pin2(COMRAM[1]), LED_INITIALIZE@PIN_OBJ(COMRAM[1]), RELAY_INITIALIZE@pin(COMRAM[1]), 

    GPIO_PIN_INITIALIZE@_PIN_CONFIG	PTR const struct . size(1) Largest target is 1
		 -> DC_MOTOR_INITIALIZE@motor_pin1(COMRAM[1]), DC_MOTOR_INITIALIZE@motor_pin2(COMRAM[1]), LED_INITIALIZE@PIN_OBJ(COMRAM[1]), RELAY_INITIALIZE@pin(COMRAM[1]), 

    GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG	PTR const struct . size(1) Largest target is 1
		 -> DC_MOTOR_INITIALIZE@motor_pin1(COMRAM[1]), DC_MOTOR_INITIALIZE@motor_pin2(COMRAM[1]), DC_MOTOR_ROTATE_CCW@motor_pin1(COMRAM[1]), DC_MOTOR_ROTATE_CCW@motor_pin2(COMRAM[1]), 
		 -> DC_MOTOR_ROTATE_CW@motor_pin1(COMRAM[1]), DC_MOTOR_ROTATE_CW@motor_pin2(COMRAM[1]), DC_MOTOR_STOP@motor_pin1(COMRAM[1]), DC_MOTOR_STOP@motor_pin2(COMRAM[1]), 
		 -> LED_INITIALIZE@PIN_OBJ(COMRAM[1]), LED_Turn_OFF@PIN_OBJ(COMRAM[1]), LED_Turn_ON@PIN_OBJ(COMRAM[1]), RELAY_INITIALIZE@pin(COMRAM[1]), 
		 -> RELAY_TURN_OFF@pin(COMRAM[1]), RELAY_TURN_ON@pin(COMRAM[1]), 

    LAT_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlhl[1]), LATB(BITBIGSFRlhh[1]), LATC(BITBIGSFRlhh[1]), LATD(BITBIGSFRlhh[1]), 
		 -> LATE(BITBIGSFRlhh[1]), 

    PORT_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRlhl[1]), PORTC(BITBIGSFRlhl[1]), PORTD(BITBIGSFRlhl[1]), 
		 -> PORTE(BITBIGSFRlhl[1]), 

    TRIS_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _Application_intialize->_DC_MOTOR_INITIALIZE
    _DC_MOTOR_INITIALIZE->_GPIO_PIN_INITIALIZE
    _GPIO_PIN_INITIALIZE->_GPIO_PIN_WRITE_LOGIC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3037
              _Application_intialize
 ---------------------------------------------------------------------------------
 (1) _Application_intialize                                0     0      0    3037
                _DC_MOTOR_INITIALIZE
 ---------------------------------------------------------------------------------
 (2) _DC_MOTOR_INITIALIZE                                  5     4      1    3037
                                             11 COMRAM     5     4      1
                _GPIO_PIN_INITIALIZE
 ---------------------------------------------------------------------------------
 (3) _GPIO_PIN_INITIALIZE                                  3     2      1    2625
                                              8 COMRAM     3     2      1
      _GPIO_PIN_DIRECTION_INITIALIZE
               _GPIO_PIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (4) _GPIO_PIN_WRITE_LOGIC                                 8     6      2    1853
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _GPIO_PIN_DIRECTION_INITIALIZE                        7     6      1     333
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Application_intialize
     _DC_MOTOR_INITIALIZE
       _GPIO_PIN_INITIALIZE
         _GPIO_PIN_DIRECTION_INITIALIZE
         _GPIO_PIN_WRITE_LOGIC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRh          69      0       0      36        0.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      42       1       69.5%
BITBIGSFRll         20      0       0      39        0.0%
BITBIGSFRlhh         4      0       0      37        0.0%
BITBIGSFRlhl         4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      42      40        0.0%
DATA                 0      0      42       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Sep 25 10:01:59 2024

                  ??_GPIO_PIN_WRITE_LOGIC 0025               __end_of_DC_MOTOR_INITIALIZE 12F6  
                                     l131 1112                                       l221 13C0  
                                     l150 1222                                       l215 13C6  
                                     l216 13C6                                       l234 12F4  
                                     l171 1352                                       l228 123C  
                                     u630 1012                                       u631 100E  
                                     u640 1032                                       u704 116A  
                                     u720 1306                                       u641 102E  
                                     u705 1166                                       u721 1302  
                                     u714 11C4                                       u730 1326  
                                     u715 11C0                                       u731 1322  
                                     u740 1234                                       u741 1230  
                                     u670 10FA                                       u654 1058  
                                     u671 10F4                                       u655 1054  
                                     u664 10B2                                       u680 1124  
                                     u665 10AE                                       u681 1120  
                                     u690 1144                                       u691 1140  
                                     u755 1286                                       u676 10FC  
                                     u765 12DE                                       u757 1288  
                                     u767 12E0                                       _Ret 0042  
                                     wreg 0FE8                                      l1411 1012  
                                    l1413 1032                                      l1415 103A  
                                    l1503 13AC                                      l1417 108C  
                                    l1409 1002                                      l1441 119E  
                                    l1433 1114                                      l1419 1094  
                                    l1427 10E4                                      l1443 11A6  
                                    l1451 11F6                                      l1435 1124  
                                    l1429 1110                                      l1453 1220  
                                    l1437 1144                                      l1461 12F6  
                                    l1439 114C                                      l1471 1350  
                                    l1463 1306                                      l1623 13C2  
                                    l1465 1326                                      l1481 1276  
                                    l1467 132E                                      l1491 12CA  
                                    l1483 1278                                      l1475 1224  
                                    l1725 120A                                      l1469 134C  
                                    l1493 12CC                                      l1485 1288  
                                    l1477 1234                                      l1495 12E0  
                                    l1487 128C                                      l1479 1240  
                                    l1497 12E8                                      l1489 12A6  
                                    l1499 12F2                                      _LATA 0F89  
                                    _LATB 0F8A                                      _LATC 0F8B  
                                    _LATD 0F8C                                      _LATE 0F8D  
                     LED_INITIALIZE@F3148 0041                                      _main 13C2  
                                    fsr2h 0FDA                                      indf2 0FDF  
                                    fsr1l 0FE1                                      fsr2l 0FD9  
                                    prodl 0FF3                                      start 0004  
                            ___param_bank 0000                                     ?_main 0023  
                                   _PORTA 0F80                                     _PORTB 0F81  
                                   _PORTC 0F82                                     _PORTD 0F83  
                                   _PORTE 0F84                                     _TRISA 0F92  
                                   _TRISB 0F93                                     _TRISC 0F94  
                                   _TRISD 0F95                                     _TRISE 0F96  
                  ?_Application_intialize 0023                                     tablat 0FF5  
                                   status 0FD8                           __initialization 1354  
                            __end_of_main 13CE                                    ??_main 0033  
                           __activetblptr 0002                                    clear_0 137A  
                                  _motor1 0021                                    _motor2 001F  
                                  isa$std 0001                          LED_Turn_ON@F3153 0040  
                            __pdataCOMRAM 0001                              __mediumconst 0000  
                                  tblptrh 0FF7                                    tblptrl 0FF6  
                                  tblptru 0FF8                                __accesstop 0060  
                 __end_of__initialization 1380                             ___rparam_used 0001  
                          __pcstackCOMRAM 0023                       _GPIO_PIN_INITIALIZE 12F6  
          ?_GPIO_PIN_DIRECTION_INITIALIZE 0023                      ?_GPIO_PIN_INITIALIZE 002B  
                              __pnvCOMRAM 0042                 DC_MOTOR_INITIALIZE@Retval 0030  
                      DC_MOTOR_STOP@F3172 0034                        DC_MOTOR_STOP@F3174 0033  
                                 _LAT_REG 0001                   ??_Application_intialize 0033  
                   ??_GPIO_PIN_INITIALIZE 002C                       RELAY_TURN_OFF@F3158 003B  
                                 __Hparam 0000                                   __Lparam 0000  
                            __psmallconst 1000                                   __pcinit 1354  
                                 __ramtop 1000                                   __ptext0 13C2  
                                 __ptext1 13AC                                   __ptext2 1224  
                                 __ptext3 12F6                                   __ptext4 1114  
                                 __ptext5 1002                         LED_Turn_OFF@F3158 003F  
                    end_of_initialization 1380                             __Lmediumconst 0000  
                                 postdec1 0FE5                                   postdec2 0FDD  
                                 postinc0 0FEE                                   postinc2 0FDE  
          GPIO_PIN_INITIALIZE@_PIN_CONFIG 002B                             __pidataCOMRAM 138A  
                     start_initialization 1354           ??_GPIO_PIN_DIRECTION_INITIALIZE 0024  
              GPIO_PIN_WRITE_LOGIC@Retval 002A                       _DC_MOTOR_INITIALIZE 1224  
                             __pbssCOMRAM 0033                      ?_DC_MOTOR_INITIALIZE 002E  
           __end_of_Application_intialize 13C2              __end_of_GPIO_PIN_WRITE_LOGIC 1224  
GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG 0023               __end_of_GPIO_PIN_INITIALIZE 1354  
                             __smallconst 1000                        RELAY_TURN_ON@F3152 003C  
                   ??_DC_MOTOR_INITIALIZE 002F           GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG 0023  
   __end_of_GPIO_PIN_DIRECTION_INITIALIZE 1114             _GPIO_PIN_DIRECTION_INITIALIZE 1002  
           DC_MOTOR_INITIALIZE@motor_pin1 0031             DC_MOTOR_INITIALIZE@motor_pin2 0032  
                                _PORT_REG 000B                 GPIO_PIN_INITIALIZE@Retval 002D  
                DC_MOTOR_ROTATE_CCW@F3163 0036                  DC_MOTOR_ROTATE_CCW@F3165 0035  
                                _TRIS_REG 0015                                 copy_data0 1368  
               GPIO_PIN_WRITE_LOGIC@LOGIC 0024                                  __Hrparam 0000  
                                __Lrparam 0000                      _GPIO_PIN_WRITE_LOGIC 1114  
     GPIO_PIN_DIRECTION_INITIALIZE@Retval 0029                  DC_MOTOR_INITIALIZE@F3147 003A  
                DC_MOTOR_INITIALIZE@F3149 0039                                  isa$xinst 0000  
                DC_MOTOR_INITIALIZE@motor 002E                           LED_TOGGLE@F3163 003E  
                 DC_MOTOR_ROTATE_CW@F3154 0038                   DC_MOTOR_ROTATE_CW@F3156 0037  
                   ?_GPIO_PIN_WRITE_LOGIC 0023                     _Application_intialize 13AC  
                   RELAY_INITIALIZE@F3146 003D  
