

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Sep 28 19:55:10 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Generated 12/10/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F46K20 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     
    60                           	psect	idataCOMRAM
    61   0015A2                     __pidataCOMRAM:
    62                           	callstack 0
    63                           
    64                           ;initializer for _LAT_REG
    65   0015A2  89                 	db	137
    66   0015A3  0F                 	db	15
    67   0015A4  8A                 	db	138
    68   0015A5  0F                 	db	15
    69   0015A6  8B                 	db	139
    70   0015A7  0F                 	db	15
    71   0015A8  8C                 	db	140
    72   0015A9  0F                 	db	15
    73   0015AA  8D                 	db	141
    74   0015AB  0F                 	db	15
    75                           
    76                           ;initializer for _PORT_REG
    77   0015AC  80                 	db	128
    78   0015AD  0F                 	db	15
    79   0015AE  81                 	db	129
    80   0015AF  0F                 	db	15
    81   0015B0  82                 	db	130
    82   0015B1  0F                 	db	15
    83   0015B2  83                 	db	131
    84   0015B3  0F                 	db	15
    85   0015B4  84                 	db	132
    86   0015B5  0F                 	db	15
    87                           
    88                           ;initializer for _TRIS_REG
    89   0015B6  92                 	db	146
    90   0015B7  0F                 	db	15
    91   0015B8  93                 	db	147
    92   0015B9  0F                 	db	15
    93   0015BA  94                 	db	148
    94   0015BB  0F                 	db	15
    95   0015BC  95                 	db	149
    96   0015BD  0F                 	db	15
    97   0015BE  96                 	db	150
    98   0015BF  0F                 	db	15
    99                           
   100                           ;initializer for _n
   101   0015C0  002D               	dw	45
   102                           
   103                           ;initializer for _seg1
   104   0015C2  02                 	db	2
   105   0015C3  0A                 	db	10
   106   0015C4  12                 	db	18
   107   0015C5  1A                 	db	26
   108   0015C6  01                 	db	1
   109                           
   110                           ;initializer for _seg2_en
   111   0015C7  2A                 	db	42
   112                           
   113                           ;initializer for _seg1_en
   114   0015C8  22                 	db	34
   115                           
   116                           	psect	nvCOMRAM
   117   00003F                     __pnvCOMRAM:
   118                           	callstack 0
   119   00003F                     _Ret:
   120                           	callstack 0
   121   00003F                     	ds	1
   122   000000                     _PORTA	set	3968
   123   000000                     _TRISA	set	3986
   124   000000                     _TRISE	set	3990
   125   000000                     _TRISD	set	3989
   126   000000                     _TRISC	set	3988
   127   000000                     _TRISB	set	3987
   128   000000                     _LATA	set	3977
   129   000000                     _PORTE	set	3972
   130   000000                     _PORTD	set	3971
   131   000000                     _PORTC	set	3970
   132   000000                     _PORTB	set	3969
   133   000000                     _LATE	set	3981
   134   000000                     _LATD	set	3980
   135   000000                     _LATC	set	3979
   136   000000                     _LATB	set	3978
   137                           
   138                           ; #config settings
   139                           
   140                           	psect	cinit
   141   00156C                     __pcinit:
   142                           	callstack 0
   143   00156C                     start_initialization:
   144                           	callstack 0
   145   00156C                     __initialization:
   146                           	callstack 0
   147                           
   148                           ; Initialize objects allocated to COMRAM (39 bytes)
   149                           ; load TBLPTR registers with __pidataCOMRAM
   150   00156C  0EA2               	movlw	low __pidataCOMRAM
   151   00156E  6EF6               	movwf	tblptrl,c
   152   001570  0E15               	movlw	high __pidataCOMRAM
   153   001572  6EF7               	movwf	tblptrh,c
   154   001574  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   155   001576  6EF8               	movwf	tblptru,c
   156   001578  EE00  F001         	lfsr	0,__pdataCOMRAM
   157   00157C  EE10 F027          	lfsr	1,39
   158   001580                     copy_data0:
   159   001580  0009               	tblrd		*+
   160   001582  CFF5 FFEE          	movff	tablat,postinc0
   161   001586  50E5               	movf	postdec1,w,c
   162   001588  50E1               	movf	fsr1l,w,c
   163   00158A  E1FA               	bnz	copy_data0
   164                           
   165                           ; Clear objects allocated to COMRAM (7 bytes)
   166   00158C  EE00  F038         	lfsr	0,__pbssCOMRAM
   167   001590  0E07               	movlw	7
   168   001592                     clear_0:
   169   001592  6AEE               	clrf	postinc0,c
   170   001594  06E8               	decf	wreg,f,c
   171   001596  E1FD               	bnz	clear_0
   172   001598                     end_of_initialization:
   173                           	callstack 0
   174   001598                     __end_of__initialization:
   175                           	callstack 0
   176   001598  0E00               	movlw	low (__Lmediumconst shr (0+16))
   177   00159A  6EF8               	movwf	tblptru,c
   178   00159C  0100               	movlb	0
   179   00159E  EFCC  F009         	goto	_main	;jump to C main() function
   180                           
   181                           	psect	bssCOMRAM
   182   000038                     __pbssCOMRAM:
   183                           	callstack 0
   184   000038                     RELAY_TURN_OFF@F3158:
   185                           	callstack 0
   186   000038                     	ds	1
   187   000039                     RELAY_TURN_ON@F3152:
   188                           	callstack 0
   189   000039                     	ds	1
   190   00003A                     RELAY_INITIALIZE@F3146:
   191                           	callstack 0
   192   00003A                     	ds	1
   193   00003B                     LED_TOGGLE@F3163:
   194                           	callstack 0
   195   00003B                     	ds	1
   196   00003C                     LED_Turn_OFF@F3158:
   197                           	callstack 0
   198   00003C                     	ds	1
   199   00003D                     LED_Turn_ON@F3153:
   200                           	callstack 0
   201   00003D                     	ds	1
   202   00003E                     LED_INITIALIZE@F3148:
   203                           	callstack 0
   204   00003E                     	ds	1
   205                           
   206                           	psect	dataCOMRAM
   207   000001                     __pdataCOMRAM:
   208                           	callstack 0
   209   000001                     _LAT_REG:
   210                           	callstack 0
   211   000001                     	ds	10
   212   00000B                     _PORT_REG:
   213                           	callstack 0
   214   00000B                     	ds	10
   215   000015                     _TRIS_REG:
   216                           	callstack 0
   217   000015                     	ds	10
   218   00001F                     _n:
   219                           	callstack 0
   220   00001F                     	ds	2
   221   000021                     _seg1:
   222                           	callstack 0
   223   000021                     	ds	5
   224   000026                     _seg2_en:
   225                           	callstack 0
   226   000026                     	ds	1
   227   000027                     _seg1_en:
   228                           	callstack 0
   229   000027                     	ds	1
   230                           
   231                           	psect	cstackCOMRAM
   232   000028                     __pcstackCOMRAM:
   233                           	callstack 0
   234   000028                     ?___awdiv:
   235                           	callstack 0
   236   000028                     ?___awmod:
   237                           	callstack 0
   238   000028                     GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG:
   239                           	callstack 0
   240   000028                     GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG:
   241                           	callstack 0
   242   000028                     ___awdiv@dividend:
   243                           	callstack 0
   244   000028                     ___awmod@dividend:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x0
   248   000028                     	ds	1
   249   000029                     ??_GPIO_PIN_DIRECTION_INITIALIZE:
   250   000029                     GPIO_PIN_WRITE_LOGIC@LOGIC:
   251                           	callstack 0
   252                           
   253                           ; 1 bytes @ 0x1
   254   000029                     	ds	1
   255   00002A                     ??_GPIO_PIN_WRITE_LOGIC:
   256   00002A                     ___awdiv@divisor:
   257                           	callstack 0
   258   00002A                     ___awmod@divisor:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0x2
   262   00002A                     	ds	2
   263   00002C                     ___awdiv@counter:
   264                           	callstack 0
   265   00002C                     ___awmod@counter:
   266                           	callstack 0
   267                           
   268                           ; 1 bytes @ 0x4
   269   00002C                     	ds	1
   270   00002D                     ___awdiv@sign:
   271                           	callstack 0
   272   00002D                     ___awmod@sign:
   273                           	callstack 0
   274                           
   275                           ; 1 bytes @ 0x5
   276   00002D                     	ds	1
   277   00002E                     GPIO_PIN_DIRECTION_INITIALIZE@Retval:
   278                           	callstack 0
   279   00002E                     ___awdiv@quotient:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x6
   283   00002E                     	ds	1
   284   00002F                     GPIO_PIN_WRITE_LOGIC@Retval:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0x7
   288   00002F                     	ds	1
   289   000030                     GPIO_PIN_INITIALIZE@_PIN_CONFIG:
   290                           	callstack 0
   291   000030                     SEGMENT_WRITE_NUMBER@seg:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0x8
   295   000030                     	ds	1
   296   000031                     ??_GPIO_PIN_INITIALIZE:
   297   000031                     SEGMENT_WRITE_NUMBER@number:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0x9
   301   000031                     	ds	1
   302   000032                     ??_SEGMENT_WRITE_NUMBER:
   303   000032                     GPIO_PIN_INITIALIZE@Retval:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0xA
   307   000032                     	ds	1
   308   000033                     SEGMENT_INITIALIZE@seg:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0xB
   312   000033                     	ds	1
   313   000034                     SEGMENT_INITIALIZE@Retval:
   314                           	callstack 0
   315   000034                     SEGMENT_WRITE_NUMBER@Retval:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0xC
   319   000034                     	ds	1
   320   000035                     SEGMENT_INITIALIZE@i:
   321                           	callstack 0
   322   000035                     SEGMENT_WRITE_NUMBER@i:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0xD
   326   000035                     	ds	2
   327   000037                     ??_main:
   328                           
   329                           ; 1 bytes @ 0xF
   330   000037                     	ds	1
   331                           
   332 ;;
   333 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   334 ;;
   335 ;; *************** function _main *****************
   336 ;; Defined at:
   337 ;;		line 52 in file "Drivers_Main.c"
   338 ;; Parameters:    Size  Location     Type
   339 ;;		None
   340 ;; Auto vars:     Size  Location     Type
   341 ;;		None
   342 ;; Return value:  Size  Location     Type
   343 ;;                  2  250[None  ] int 
   344 ;; Registers used:
   345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   346 ;; Tracked objects:
   347 ;;		On entry : 0/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   353 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   354 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   355 ;;Total ram usage:        1 bytes
   356 ;; Hardware stack levels required when called: 4
   357 ;; This function calls:
   358 ;;		_Application_intialize
   359 ;;		_GPIO_PIN_WRITE_LOGIC
   360 ;;		_SEGMENT_WRITE_NUMBER
   361 ;;		___awdiv
   362 ;;		___awmod
   363 ;; This function is called by:
   364 ;;		Startup code after reset
   365 ;; This function uses a non-reentrant model
   366 ;;
   367                           
   368                           	psect	text0
   369   001398                     __ptext0:
   370                           	callstack 0
   371   001398                     _main:
   372                           	callstack 27
   373   001398                     
   374                           ;Drivers_Main.c: 53:     Application_intialize();
   375   001398  ECE5  F00A         	call	_Application_intialize	;wreg free
   376   00139C                     l251:
   377                           
   378                           ;Drivers_Main.c: 68:             Ret = GPIO_PIN_WRITE_LOGIC(&seg1_en,GPIO_HIGH);
   379   00139C  0E27               	movlw	low _seg1_en
   380   00139E  6E28               	movwf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,c
   381   0013A0  0E01               	movlw	1
   382   0013A2  6E29               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
   383   0013A4  EC8A  F008         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
   384   0013A8  6E3F               	movwf	_Ret^0,c
   385                           
   386                           ;Drivers_Main.c: 69:             Ret = SEGMENT_WRITE_NUMBER(&seg1 , n%10);
   387   0013AA  0E21               	movlw	low _seg1
   388   0013AC  6E30               	movwf	SEGMENT_WRITE_NUMBER@seg^0,c
   389   0013AE  C01F  F028         	movff	_n,___awmod@dividend
   390   0013B2  C020  F029         	movff	_n+1,___awmod@dividend+1
   391   0013B6  0E00               	movlw	0
   392   0013B8  6E2B               	movwf	(___awmod@divisor+1)^0,c
   393   0013BA  0E0A               	movlw	10
   394   0013BC  6E2A               	movwf	___awmod@divisor^0,c
   395   0013BE  EC74  F009         	call	___awmod	;wreg free
   396   0013C2  5028               	movf	?___awmod^0,w,c
   397   0013C4  6E31               	movwf	SEGMENT_WRITE_NUMBER@number^0,c
   398   0013C6  EC20  F00A         	call	_SEGMENT_WRITE_NUMBER	;wreg free
   399   0013CA  6E3F               	movwf	_Ret^0,c
   400   0013CC                     
   401                           ;Drivers_Main.c: 70:             _delay((unsigned long)((5000)*(8000000UL/4000000.0)));
   402   0013CC  0E0D               	movlw	13
   403   0013CE  6E37               	movwf	??_main^0,c
   404   0013D0  0EFC               	movlw	252
   405   0013D2                     u1197:
   406   0013D2  2EE8               	decfsz	wreg,f,c
   407   0013D4  D7FE               	bra	u1197
   408   0013D6  2E37               	decfsz	??_main^0,f,c
   409   0013D8  D7FC               	bra	u1197
   410   0013DA                     
   411                           ;Drivers_Main.c: 71:             Ret = GPIO_PIN_WRITE_LOGIC(&seg1_en,GPIO_LOW);
   412   0013DA  0E27               	movlw	low _seg1_en
   413   0013DC  6E28               	movwf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,c
   414   0013DE  0E00               	movlw	0
   415   0013E0  6E29               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
   416   0013E2  EC8A  F008         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
   417   0013E6  6E3F               	movwf	_Ret^0,c
   418   0013E8                     
   419                           ;Drivers_Main.c: 72:             Ret = GPIO_PIN_WRITE_LOGIC(&seg2_en,GPIO_HIGH);
   420   0013E8  0E26               	movlw	low _seg2_en
   421   0013EA  6E28               	movwf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,c
   422   0013EC  0E01               	movlw	1
   423   0013EE  6E29               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
   424   0013F0  EC8A  F008         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
   425   0013F4  6E3F               	movwf	_Ret^0,c
   426   0013F6                     
   427                           ;Drivers_Main.c: 73:             Ret = SEGMENT_WRITE_NUMBER(&seg1 , n/10);
   428   0013F6  0E21               	movlw	low _seg1
   429   0013F8  6E30               	movwf	SEGMENT_WRITE_NUMBER@seg^0,c
   430   0013FA  C01F  F028         	movff	_n,___awdiv@dividend
   431   0013FE  C020  F029         	movff	_n+1,___awdiv@dividend+1
   432   001402  0E00               	movlw	0
   433   001404  6E2B               	movwf	(___awdiv@divisor+1)^0,c
   434   001406  0E0A               	movlw	10
   435   001408  6E2A               	movwf	___awdiv@divisor^0,c
   436   00140A  EC12  F009         	call	___awdiv	;wreg free
   437   00140E  5028               	movf	?___awdiv^0,w,c
   438   001410  6E31               	movwf	SEGMENT_WRITE_NUMBER@number^0,c
   439   001412  EC20  F00A         	call	_SEGMENT_WRITE_NUMBER	;wreg free
   440   001416  6E3F               	movwf	_Ret^0,c
   441                           
   442                           ;Drivers_Main.c: 74:             _delay((unsigned long)((5000)*(8000000UL/4000000.0)));
   443   001418  0E0D               	movlw	13
   444   00141A  6E37               	movwf	??_main^0,c
   445   00141C  0EFC               	movlw	252
   446   00141E                     u1207:
   447   00141E  2EE8               	decfsz	wreg,f,c
   448   001420  D7FE               	bra	u1207
   449   001422  2E37               	decfsz	??_main^0,f,c
   450   001424  D7FC               	bra	u1207
   451   001426                     
   452                           ;Drivers_Main.c: 75:             Ret = GPIO_PIN_WRITE_LOGIC(&seg1_en,GPIO_LOW);
   453   001426  0E27               	movlw	low _seg1_en
   454   001428  6E28               	movwf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,c
   455   00142A  0E00               	movlw	0
   456   00142C  6E29               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
   457   00142E  EC8A  F008         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
   458   001432  6E3F               	movwf	_Ret^0,c
   459   001434                     
   460                           ;Drivers_Main.c: 76:             n++;
   461   001434  4A1F               	infsnz	_n^0,f,c
   462   001436  2A20               	incf	(_n+1)^0,f,c
   463   001438  EFCE  F009         	goto	l251
   464   00143C  EF02  F000         	goto	start
   465   001440                     __end_of_main:
   466                           	callstack 0
   467                           
   468 ;; *************** function ___awmod *****************
   469 ;; Defined at:
   470 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;  dividend        2    0[COMRAM] int 
   473 ;;  divisor         2    2[COMRAM] int 
   474 ;; Auto vars:     Size  Location     Type
   475 ;;  sign            1    5[COMRAM] unsigned char 
   476 ;;  counter         1    4[COMRAM] unsigned char 
   477 ;; Return value:  Size  Location     Type
   478 ;;                  2    0[COMRAM] int 
   479 ;; Registers used:
   480 ;;		wreg, status,2, status,0
   481 ;; Tracked objects:
   482 ;;		On entry : 0/0
   483 ;;		On exit  : 0/0
   484 ;;		Unchanged: 0/0
   485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   486 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   487 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   489 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   490 ;;Total ram usage:        6 bytes
   491 ;; Hardware stack levels used: 1
   492 ;; This function calls:
   493 ;;		Nothing
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           	psect	text1
   500   0012E8                     __ptext1:
   501                           	callstack 0
   502   0012E8                     ___awmod:
   503                           	callstack 30
   504   0012E8  0E00               	movlw	0
   505   0012EA  6E2D               	movwf	___awmod@sign^0,c
   506   0012EC  BE29               	btfsc	(___awmod@dividend+1)^0,7,c
   507   0012EE  EF7D  F009         	goto	u960
   508   0012F2  EF7B  F009         	goto	u961
   509   0012F6                     u961:
   510   0012F6  EF83  F009         	goto	l1649
   511   0012FA                     u960:
   512   0012FA  6C28               	negf	___awmod@dividend^0,c
   513   0012FC  1E29               	comf	(___awmod@dividend+1)^0,f,c
   514   0012FE  B0D8               	btfsc	status,0,c
   515   001300  2A29               	incf	(___awmod@dividend+1)^0,f,c
   516   001302  0E01               	movlw	1
   517   001304  6E2D               	movwf	___awmod@sign^0,c
   518   001306                     l1649:
   519   001306  BE2B               	btfsc	(___awmod@divisor+1)^0,7,c
   520   001308  EF8A  F009         	goto	u970
   521   00130C  EF88  F009         	goto	u971
   522   001310                     u971:
   523   001310  EF8E  F009         	goto	l1653
   524   001314                     u970:
   525   001314  6C2A               	negf	___awmod@divisor^0,c
   526   001316  1E2B               	comf	(___awmod@divisor+1)^0,f,c
   527   001318  B0D8               	btfsc	status,0,c
   528   00131A  2A2B               	incf	(___awmod@divisor+1)^0,f,c
   529   00131C                     l1653:
   530   00131C  502A               	movf	___awmod@divisor^0,w,c
   531   00131E  102B               	iorwf	(___awmod@divisor+1)^0,w,c
   532   001320  B4D8               	btfsc	status,2,c
   533   001322  EF95  F009         	goto	u981
   534   001326  EF97  F009         	goto	u980
   535   00132A                     u981:
   536   00132A  EFBB  F009         	goto	l1669
   537   00132E                     u980:
   538   00132E  0E01               	movlw	1
   539   001330  6E2C               	movwf	___awmod@counter^0,c
   540   001332  EF9F  F009         	goto	l1659
   541   001336                     l1657:
   542   001336  90D8               	bcf	status,0,c
   543   001338  362A               	rlcf	___awmod@divisor^0,f,c
   544   00133A  362B               	rlcf	(___awmod@divisor+1)^0,f,c
   545   00133C  2A2C               	incf	___awmod@counter^0,f,c
   546   00133E                     l1659:
   547   00133E  AE2B               	btfss	(___awmod@divisor+1)^0,7,c
   548   001340  EFA4  F009         	goto	u991
   549   001344  EFA6  F009         	goto	u990
   550   001348                     u991:
   551   001348  EF9B  F009         	goto	l1657
   552   00134C                     u990:
   553   00134C                     l1661:
   554   00134C  502A               	movf	___awmod@divisor^0,w,c
   555   00134E  5C28               	subwf	___awmod@dividend^0,w,c
   556   001350  502B               	movf	(___awmod@divisor+1)^0,w,c
   557   001352  5829               	subwfb	(___awmod@dividend+1)^0,w,c
   558   001354  A0D8               	btfss	status,0,c
   559   001356  EFAF  F009         	goto	u1001
   560   00135A  EFB1  F009         	goto	u1000
   561   00135E                     u1001:
   562   00135E  EFB5  F009         	goto	l1665
   563   001362                     u1000:
   564   001362  502A               	movf	___awmod@divisor^0,w,c
   565   001364  5E28               	subwf	___awmod@dividend^0,f,c
   566   001366  502B               	movf	(___awmod@divisor+1)^0,w,c
   567   001368  5A29               	subwfb	(___awmod@dividend+1)^0,f,c
   568   00136A                     l1665:
   569   00136A  90D8               	bcf	status,0,c
   570   00136C  322B               	rrcf	(___awmod@divisor+1)^0,f,c
   571   00136E  322A               	rrcf	___awmod@divisor^0,f,c
   572   001370  2E2C               	decfsz	___awmod@counter^0,f,c
   573   001372  EFA6  F009         	goto	l1661
   574   001376                     l1669:
   575   001376  502D               	movf	___awmod@sign^0,w,c
   576   001378  B4D8               	btfsc	status,2,c
   577   00137A  EFC1  F009         	goto	u1011
   578   00137E  EFC3  F009         	goto	u1010
   579   001382                     u1011:
   580   001382  EFC7  F009         	goto	l1673
   581   001386                     u1010:
   582   001386  6C28               	negf	___awmod@dividend^0,c
   583   001388  1E29               	comf	(___awmod@dividend+1)^0,f,c
   584   00138A  B0D8               	btfsc	status,0,c
   585   00138C  2A29               	incf	(___awmod@dividend+1)^0,f,c
   586   00138E                     l1673:
   587   00138E  C028  F028         	movff	___awmod@dividend,?___awmod
   588   001392  C029  F029         	movff	___awmod@dividend+1,?___awmod+1
   589   001396  0012               	return		;funcret
   590   001398                     __end_of___awmod:
   591                           	callstack 0
   592                           
   593 ;; *************** function ___awdiv *****************
   594 ;; Defined at:
   595 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
   596 ;; Parameters:    Size  Location     Type
   597 ;;  dividend        2    0[COMRAM] int 
   598 ;;  divisor         2    2[COMRAM] int 
   599 ;; Auto vars:     Size  Location     Type
   600 ;;  quotient        2    6[COMRAM] int 
   601 ;;  sign            1    5[COMRAM] unsigned char 
   602 ;;  counter         1    4[COMRAM] unsigned char 
   603 ;; Return value:  Size  Location     Type
   604 ;;                  2    0[COMRAM] int 
   605 ;; Registers used:
   606 ;;		wreg, status,2, status,0
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   612 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   613 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   615 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   616 ;;Total ram usage:        8 bytes
   617 ;; Hardware stack levels used: 1
   618 ;; This function calls:
   619 ;;		Nothing
   620 ;; This function is called by:
   621 ;;		_main
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           	psect	text2
   626   001224                     __ptext2:
   627                           	callstack 0
   628   001224                     ___awdiv:
   629                           	callstack 30
   630   001224  0E00               	movlw	0
   631   001226  6E2D               	movwf	___awdiv@sign^0,c
   632   001228  BE2B               	btfsc	(___awdiv@divisor+1)^0,7,c
   633   00122A  EF1B  F009         	goto	u900
   634   00122E  EF19  F009         	goto	u901
   635   001232                     u901:
   636   001232  EF21  F009         	goto	l1605
   637   001236                     u900:
   638   001236  6C2A               	negf	___awdiv@divisor^0,c
   639   001238  1E2B               	comf	(___awdiv@divisor+1)^0,f,c
   640   00123A  B0D8               	btfsc	status,0,c
   641   00123C  2A2B               	incf	(___awdiv@divisor+1)^0,f,c
   642   00123E  0E01               	movlw	1
   643   001240  6E2D               	movwf	___awdiv@sign^0,c
   644   001242                     l1605:
   645   001242  BE29               	btfsc	(___awdiv@dividend+1)^0,7,c
   646   001244  EF28  F009         	goto	u910
   647   001248  EF26  F009         	goto	u911
   648   00124C                     u911:
   649   00124C  EF2E  F009         	goto	l1611
   650   001250                     u910:
   651   001250  6C28               	negf	___awdiv@dividend^0,c
   652   001252  1E29               	comf	(___awdiv@dividend+1)^0,f,c
   653   001254  B0D8               	btfsc	status,0,c
   654   001256  2A29               	incf	(___awdiv@dividend+1)^0,f,c
   655   001258  0E01               	movlw	1
   656   00125A  1A2D               	xorwf	___awdiv@sign^0,f,c
   657   00125C                     l1611:
   658   00125C  0E00               	movlw	0
   659   00125E  6E2F               	movwf	(___awdiv@quotient+1)^0,c
   660   001260  0E00               	movlw	0
   661   001262  6E2E               	movwf	___awdiv@quotient^0,c
   662   001264  502A               	movf	___awdiv@divisor^0,w,c
   663   001266  102B               	iorwf	(___awdiv@divisor+1)^0,w,c
   664   001268  B4D8               	btfsc	status,2,c
   665   00126A  EF39  F009         	goto	u921
   666   00126E  EF3B  F009         	goto	u920
   667   001272                     u921:
   668   001272  EF63  F009         	goto	l1633
   669   001276                     u920:
   670   001276  0E01               	movlw	1
   671   001278  6E2C               	movwf	___awdiv@counter^0,c
   672   00127A  EF43  F009         	goto	l1619
   673   00127E                     l1617:
   674   00127E  90D8               	bcf	status,0,c
   675   001280  362A               	rlcf	___awdiv@divisor^0,f,c
   676   001282  362B               	rlcf	(___awdiv@divisor+1)^0,f,c
   677   001284  2A2C               	incf	___awdiv@counter^0,f,c
   678   001286                     l1619:
   679   001286  AE2B               	btfss	(___awdiv@divisor+1)^0,7,c
   680   001288  EF48  F009         	goto	u931
   681   00128C  EF4A  F009         	goto	u930
   682   001290                     u931:
   683   001290  EF3F  F009         	goto	l1617
   684   001294                     u930:
   685   001294                     l1621:
   686   001294  90D8               	bcf	status,0,c
   687   001296  362E               	rlcf	___awdiv@quotient^0,f,c
   688   001298  362F               	rlcf	(___awdiv@quotient+1)^0,f,c
   689   00129A  502A               	movf	___awdiv@divisor^0,w,c
   690   00129C  5C28               	subwf	___awdiv@dividend^0,w,c
   691   00129E  502B               	movf	(___awdiv@divisor+1)^0,w,c
   692   0012A0  5829               	subwfb	(___awdiv@dividend+1)^0,w,c
   693   0012A2  A0D8               	btfss	status,0,c
   694   0012A4  EF56  F009         	goto	u941
   695   0012A8  EF58  F009         	goto	u940
   696   0012AC                     u941:
   697   0012AC  EF5D  F009         	goto	l1629
   698   0012B0                     u940:
   699   0012B0  502A               	movf	___awdiv@divisor^0,w,c
   700   0012B2  5E28               	subwf	___awdiv@dividend^0,f,c
   701   0012B4  502B               	movf	(___awdiv@divisor+1)^0,w,c
   702   0012B6  5A29               	subwfb	(___awdiv@dividend+1)^0,f,c
   703   0012B8  802E               	bsf	___awdiv@quotient^0,0,c
   704   0012BA                     l1629:
   705   0012BA  90D8               	bcf	status,0,c
   706   0012BC  322B               	rrcf	(___awdiv@divisor+1)^0,f,c
   707   0012BE  322A               	rrcf	___awdiv@divisor^0,f,c
   708   0012C0  2E2C               	decfsz	___awdiv@counter^0,f,c
   709   0012C2  EF4A  F009         	goto	l1621
   710   0012C6                     l1633:
   711   0012C6  502D               	movf	___awdiv@sign^0,w,c
   712   0012C8  B4D8               	btfsc	status,2,c
   713   0012CA  EF69  F009         	goto	u951
   714   0012CE  EF6B  F009         	goto	u950
   715   0012D2                     u951:
   716   0012D2  EF6F  F009         	goto	l1637
   717   0012D6                     u950:
   718   0012D6  6C2E               	negf	___awdiv@quotient^0,c
   719   0012D8  1E2F               	comf	(___awdiv@quotient+1)^0,f,c
   720   0012DA  B0D8               	btfsc	status,0,c
   721   0012DC  2A2F               	incf	(___awdiv@quotient+1)^0,f,c
   722   0012DE                     l1637:
   723   0012DE  C02E  F028         	movff	___awdiv@quotient,?___awdiv
   724   0012E2  C02F  F029         	movff	___awdiv@quotient+1,?___awdiv+1
   725   0012E6  0012               	return		;funcret
   726   0012E8                     __end_of___awdiv:
   727                           	callstack 0
   728                           
   729 ;; *************** function _SEGMENT_WRITE_NUMBER *****************
   730 ;; Defined at:
   731 ;;		line 33 in file "ECUAL/7_Segments/ECU_7_Segments.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;  seg             1    8[COMRAM] PTR const struct .
   734 ;;		 -> seg1(5), 
   735 ;;  number          1    9[COMRAM] const unsigned char 
   736 ;; Auto vars:     Size  Location     Type
   737 ;;  i               2   13[COMRAM] int 
   738 ;;  Retval          1   12[COMRAM] enum E3063
   739 ;; Return value:  Size  Location     Type
   740 ;;                  1    wreg      enum E3063
   741 ;; Registers used:
   742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   743 ;; Tracked objects:
   744 ;;		On entry : 0/0
   745 ;;		On exit  : 0/0
   746 ;;		Unchanged: 0/0
   747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   749 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   750 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   751 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   752 ;;Total ram usage:        7 bytes
   753 ;; Hardware stack levels used: 1
   754 ;; Hardware stack levels required when called: 1
   755 ;; This function calls:
   756 ;;		_GPIO_PIN_WRITE_LOGIC
   757 ;; This function is called by:
   758 ;;		_main
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           	psect	text3
   763   001440                     __ptext3:
   764                           	callstack 0
   765   001440                     _SEGMENT_WRITE_NUMBER:
   766                           	callstack 29
   767   001440                     
   768                           ;ECUAL/7_Segments/ECU_7_Segments.c: 35:     if(((void*)0) == seg || number > 9){
   769   001440  5030               	movf	SEGMENT_WRITE_NUMBER@seg^0,w,c
   770   001442  B4D8               	btfsc	status,2,c
   771   001444  EF26  F00A         	goto	u861
   772   001448  EF28  F00A         	goto	u860
   773   00144C                     u861:
   774   00144C  EF30  F00A         	goto	l1579
   775   001450                     u860:
   776   001450  0E09               	movlw	9
   777   001452  6431               	cpfsgt	SEGMENT_WRITE_NUMBER@number^0,c
   778   001454  EF2E  F00A         	goto	u871
   779   001458  EF30  F00A         	goto	u870
   780   00145C                     u871:
   781   00145C  EF34  F00A         	goto	l1581
   782   001460                     u870:
   783   001460                     l1579:
   784                           
   785                           ;ECUAL/7_Segments/ECU_7_Segments.c: 36:         Retval = E_NOT_OK;
   786   001460  0E00               	movlw	0
   787   001462  6E34               	movwf	SEGMENT_WRITE_NUMBER@Retval^0,c
   788                           
   789                           ;ECUAL/7_Segments/ECU_7_Segments.c: 37:     }
   790   001464  EF5D  F00A         	goto	l1593
   791   001468                     l1581:
   792                           
   793                           ;ECUAL/7_Segments/ECU_7_Segments.c: 39:         for(int i = 0;i < 4 ; i++){
   794   001468  0E00               	movlw	0
   795   00146A  6E36               	movwf	(SEGMENT_WRITE_NUMBER@i+1)^0,c
   796   00146C  0E00               	movlw	0
   797   00146E  6E35               	movwf	SEGMENT_WRITE_NUMBER@i^0,c
   798   001470                     l1587:
   799                           
   800                           ;ECUAL/7_Segments/ECU_7_Segments.c: 40:             Retval = GPIO_PIN_WRITE_LOGIC(&(seg-
      +                          >SEGMENT_PIN[i]) , ((number >> i) & 0x01));
   801   001470  5030               	movf	SEGMENT_WRITE_NUMBER@seg^0,w,c
   802   001472  2435               	addwf	SEGMENT_WRITE_NUMBER@i^0,w,c
   803   001474  6E28               	movwf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,c
   804   001476  C035  F032         	movff	SEGMENT_WRITE_NUMBER@i,??_SEGMENT_WRITE_NUMBER
   805   00147A  C031  F033         	movff	SEGMENT_WRITE_NUMBER@number,??_SEGMENT_WRITE_NUMBER+1
   806   00147E  2A32               	incf	??_SEGMENT_WRITE_NUMBER^0,f,c
   807   001480  EF44  F00A         	goto	u884
   808   001484                     u885:
   809   001484  90D8               	bcf	status,0,c
   810   001486  3233               	rrcf	(??_SEGMENT_WRITE_NUMBER+1)^0,f,c
   811   001488                     u884:
   812   001488  2E32               	decfsz	??_SEGMENT_WRITE_NUMBER^0,f,c
   813   00148A  EF42  F00A         	goto	u885
   814   00148E  5033               	movf	(??_SEGMENT_WRITE_NUMBER+1)^0,w,c
   815   001490  0B01               	andlw	1
   816   001492  6E29               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
   817   001494  EC8A  F008         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
   818   001498  6E34               	movwf	SEGMENT_WRITE_NUMBER@Retval^0,c
   819   00149A                     
   820                           ;ECUAL/7_Segments/ECU_7_Segments.c: 41:         }
   821   00149A  4A35               	infsnz	SEGMENT_WRITE_NUMBER@i^0,f,c
   822   00149C  2A36               	incf	(SEGMENT_WRITE_NUMBER@i+1)^0,f,c
   823   00149E  BE36               	btfsc	(SEGMENT_WRITE_NUMBER@i+1)^0,7,c
   824   0014A0  EF5B  F00A         	goto	u891
   825   0014A4  5036               	movf	(SEGMENT_WRITE_NUMBER@i+1)^0,w,c
   826   0014A6  E109               	bnz	u890
   827   0014A8  0E04               	movlw	4
   828   0014AA  5C35               	subwf	SEGMENT_WRITE_NUMBER@i^0,w,c
   829   0014AC  A0D8               	btfss	status,0,c
   830   0014AE  EF5B  F00A         	goto	u891
   831   0014B2  EF5D  F00A         	goto	u890
   832   0014B6                     u891:
   833   0014B6  EF38  F00A         	goto	l1587
   834   0014BA                     u890:
   835   0014BA                     l1593:
   836                           
   837                           ;ECUAL/7_Segments/ECU_7_Segments.c: 43:     return Retval;
   838   0014BA  5034               	movf	SEGMENT_WRITE_NUMBER@Retval^0,w,c
   839   0014BC  0012               	return		;funcret
   840   0014BE                     __end_of_SEGMENT_WRITE_NUMBER:
   841                           	callstack 0
   842                           
   843 ;; *************** function _Application_intialize *****************
   844 ;; Defined at:
   845 ;;		line 81 in file "Drivers_Main.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;Total ram usage:        0 bytes
   864 ;; Hardware stack levels used: 1
   865 ;; Hardware stack levels required when called: 3
   866 ;; This function calls:
   867 ;;		_GPIO_PIN_INITIALIZE
   868 ;;		_SEGMENT_INITIALIZE
   869 ;; This function is called by:
   870 ;;		_main
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text4
   875   0015CA                     __ptext4:
   876                           	callstack 0
   877   0015CA                     _Application_intialize:
   878                           	callstack 27
   879   0015CA                     
   880                           ;Drivers_Main.c: 82:     Ret = SEGMENT_INITIALIZE(&seg1);
   881   0015CA  0E21               	movlw	low _seg1
   882   0015CC  6E33               	movwf	SEGMENT_INITIALIZE@seg^0,c
   883   0015CE  EC8E  F00A         	call	_SEGMENT_INITIALIZE	;wreg free
   884   0015D2  6E3F               	movwf	_Ret^0,c
   885                           
   886                           ;Drivers_Main.c: 83:     Ret = GPIO_PIN_INITIALIZE(&seg1_en);
   887   0015D4  0E27               	movlw	low _seg1_en
   888   0015D6  6E30               	movwf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,c
   889   0015D8  EC5F  F00A         	call	_GPIO_PIN_INITIALIZE	;wreg free
   890   0015DC  6E3F               	movwf	_Ret^0,c
   891                           
   892                           ;Drivers_Main.c: 84:     Ret = GPIO_PIN_INITIALIZE(&seg2_en);
   893   0015DE  0E26               	movlw	low _seg2_en
   894   0015E0  6E30               	movwf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,c
   895   0015E2  EC5F  F00A         	call	_GPIO_PIN_INITIALIZE	;wreg free
   896   0015E6  6E3F               	movwf	_Ret^0,c
   897   0015E8  0012               	return		;funcret
   898   0015EA                     __end_of_Application_intialize:
   899                           	callstack 0
   900                           
   901 ;; *************** function _SEGMENT_INITIALIZE *****************
   902 ;; Defined at:
   903 ;;		line 15 in file "ECUAL/7_Segments/ECU_7_Segments.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;  seg             1   11[COMRAM] PTR const struct .
   906 ;;		 -> seg1(5), 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  i               2   13[COMRAM] int 
   909 ;;  Retval          1   12[COMRAM] enum E3063
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      enum E3063
   912 ;; Registers used:
   913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   919 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   920 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   923 ;;Total ram usage:        4 bytes
   924 ;; Hardware stack levels used: 1
   925 ;; Hardware stack levels required when called: 2
   926 ;; This function calls:
   927 ;;		_GPIO_PIN_INITIALIZE
   928 ;; This function is called by:
   929 ;;		_Application_intialize
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text5
   934   00151C                     __ptext5:
   935                           	callstack 0
   936   00151C                     _SEGMENT_INITIALIZE:
   937                           	callstack 27
   938   00151C                     
   939                           ;ECUAL/7_Segments/ECU_7_Segments.c: 17:     if(((void*)0) == seg){
   940   00151C  5033               	movf	SEGMENT_INITIALIZE@seg^0,w,c
   941   00151E  A4D8               	btfss	status,2,c
   942   001520  EF94  F00A         	goto	u841
   943   001524  EF96  F00A         	goto	u840
   944   001528                     u841:
   945   001528  EF9A  F00A         	goto	l1557
   946   00152C                     u840:
   947   00152C                     
   948                           ;ECUAL/7_Segments/ECU_7_Segments.c: 18:         Retval = E_NOT_OK;
   949   00152C  0E00               	movlw	0
   950   00152E  6E34               	movwf	SEGMENT_INITIALIZE@Retval^0,c
   951                           
   952                           ;ECUAL/7_Segments/ECU_7_Segments.c: 19:     }
   953   001530  EFB4  F00A         	goto	l1569
   954   001534                     l1557:
   955                           
   956                           ;ECUAL/7_Segments/ECU_7_Segments.c: 21:         for(int i = 0;i < 4 ; i++){
   957   001534  0E00               	movlw	0
   958   001536  6E36               	movwf	(SEGMENT_INITIALIZE@i+1)^0,c
   959   001538  0E00               	movlw	0
   960   00153A  6E35               	movwf	SEGMENT_INITIALIZE@i^0,c
   961   00153C                     l1563:
   962                           
   963                           ;ECUAL/7_Segments/ECU_7_Segments.c: 22:             Retval = GPIO_PIN_INITIALIZE(&(seg->
      +                          SEGMENT_PIN[i]));
   964   00153C  5033               	movf	SEGMENT_INITIALIZE@seg^0,w,c
   965   00153E  2435               	addwf	SEGMENT_INITIALIZE@i^0,w,c
   966   001540  6E30               	movwf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,c
   967   001542  EC5F  F00A         	call	_GPIO_PIN_INITIALIZE	;wreg free
   968   001546  6E34               	movwf	SEGMENT_INITIALIZE@Retval^0,c
   969   001548                     
   970                           ;ECUAL/7_Segments/ECU_7_Segments.c: 23:         }
   971   001548  4A35               	infsnz	SEGMENT_INITIALIZE@i^0,f,c
   972   00154A  2A36               	incf	(SEGMENT_INITIALIZE@i+1)^0,f,c
   973   00154C  BE36               	btfsc	(SEGMENT_INITIALIZE@i+1)^0,7,c
   974   00154E  EFB2  F00A         	goto	u851
   975   001552  5036               	movf	(SEGMENT_INITIALIZE@i+1)^0,w,c
   976   001554  E109               	bnz	u850
   977   001556  0E04               	movlw	4
   978   001558  5C35               	subwf	SEGMENT_INITIALIZE@i^0,w,c
   979   00155A  A0D8               	btfss	status,0,c
   980   00155C  EFB2  F00A         	goto	u851
   981   001560  EFB4  F00A         	goto	u850
   982   001564                     u851:
   983   001564  EF9E  F00A         	goto	l1563
   984   001568                     u850:
   985   001568                     l1569:
   986                           
   987                           ;ECUAL/7_Segments/ECU_7_Segments.c: 25:     return Retval;
   988   001568  5034               	movf	SEGMENT_INITIALIZE@Retval^0,w,c
   989   00156A  0012               	return		;funcret
   990   00156C                     __end_of_SEGMENT_INITIALIZE:
   991                           	callstack 0
   992                           
   993 ;; *************** function _GPIO_PIN_INITIALIZE *****************
   994 ;; Defined at:
   995 ;;		line 156 in file "MCAL/GPIO/HAL_GPIO.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;  _PIN_CONFIG     1    8[COMRAM] PTR const struct .
   998 ;;		 -> seg2_en(1), seg1_en(1), seg1$SEGMENT_PIN(4), seg1(5), 
   999 ;;		 -> RELAY_INITIALIZE@pin(1), LED_INITIALIZE@PIN_OBJ(1), 
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  Retval          1   10[COMRAM] enum E3063
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      enum E3063
  1004 ;; Registers used:
  1005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1011 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1013 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1014 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;Total ram usage:        3 bytes
  1016 ;; Hardware stack levels used: 1
  1017 ;; Hardware stack levels required when called: 1
  1018 ;; This function calls:
  1019 ;;		_GPIO_PIN_DIRECTION_INITIALIZE
  1020 ;;		_GPIO_PIN_WRITE_LOGIC
  1021 ;; This function is called by:
  1022 ;;		_Application_intialize
  1023 ;;		_SEGMENT_INITIALIZE
  1024 ;;		_DC_MOTOR_INITIALIZE
  1025 ;;		_LED_INITIALIZE
  1026 ;;		_RELAY_INITIALIZE
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           	psect	text6
  1031   0014BE                     __ptext6:
  1032                           	callstack 0
  1033   0014BE                     _GPIO_PIN_INITIALIZE:
  1034                           	callstack 27
  1035   0014BE                     
  1036                           ;MCAL/GPIO/HAL_GPIO.c: 158:     if(((void*)0) == _PIN_CONFIG || _PIN_CONFIG->PIN >= 8){
  1037   0014BE  5030               	movf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,w,c
  1038   0014C0  B4D8               	btfsc	status,2,c
  1039   0014C2  EF65  F00A         	goto	u821
  1040   0014C6  EF67  F00A         	goto	u820
  1041   0014CA                     u821:
  1042   0014CA  EF77  F00A         	goto	l1543
  1043   0014CE                     u820:
  1044   0014CE  5030               	movf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,w,c
  1045   0014D0  6ED9               	movwf	fsr2l,c
  1046   0014D2  6ADA               	clrf	fsr2h,c
  1047   0014D4  30DF               	rrcf	223,w,c
  1048   0014D6  32E8               	rrcf	wreg,f,c
  1049   0014D8  32E8               	rrcf	wreg,f,c
  1050   0014DA  0B07               	andlw	7
  1051   0014DC  6E31               	movwf	??_GPIO_PIN_INITIALIZE^0,c
  1052   0014DE  0E07               	movlw	7
  1053   0014E0  6431               	cpfsgt	??_GPIO_PIN_INITIALIZE^0,c
  1054   0014E2  EF75  F00A         	goto	u831
  1055   0014E6  EF77  F00A         	goto	u830
  1056   0014EA                     u831:
  1057   0014EA  EF7B  F00A         	goto	l1545
  1058   0014EE                     u830:
  1059   0014EE                     l1543:
  1060                           
  1061                           ;MCAL/GPIO/HAL_GPIO.c: 159:         Retval = E_NOT_OK;
  1062   0014EE  0E00               	movlw	0
  1063   0014F0  6E32               	movwf	GPIO_PIN_INITIALIZE@Retval^0,c
  1064                           
  1065                           ;MCAL/GPIO/HAL_GPIO.c: 160:     }
  1066   0014F2  EF8C  F00A         	goto	l1549
  1067   0014F6                     l1545:
  1068                           
  1069                           ;MCAL/GPIO/HAL_GPIO.c: 162:         GPIO_PIN_DIRECTION_INITIALIZE(_PIN_CONFIG);
  1070   0014F6  C030  F028         	movff	GPIO_PIN_INITIALIZE@_PIN_CONFIG,GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG
  1071   0014FA  EC01  F008         	call	_GPIO_PIN_DIRECTION_INITIALIZE	;wreg free
  1072                           
  1073                           ;MCAL/GPIO/HAL_GPIO.c: 163:         GPIO_PIN_WRITE_LOGIC(_PIN_CONFIG,_PIN_CONFIG->LOGIC)
      +                          ;
  1074   0014FE  C030  F028         	movff	GPIO_PIN_INITIALIZE@_PIN_CONFIG,GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG
  1075   001502  5030               	movf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,w,c
  1076   001504  6ED9               	movwf	fsr2l,c
  1077   001506  6ADA               	clrf	fsr2h,c
  1078   001508  0E00               	movlw	0
  1079   00150A  BEDF               	btfsc	indf2,7,c
  1080   00150C  0E01               	movlw	1
  1081   00150E  6E29               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  1082   001510  EC8A  F008         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  1083   001514                     
  1084                           ;MCAL/GPIO/HAL_GPIO.c: 164:         Retval = E_OK;
  1085   001514  0E01               	movlw	1
  1086   001516  6E32               	movwf	GPIO_PIN_INITIALIZE@Retval^0,c
  1087   001518                     l1549:
  1088                           
  1089                           ;MCAL/GPIO/HAL_GPIO.c: 166:     return Retval;
  1090   001518  5032               	movf	GPIO_PIN_INITIALIZE@Retval^0,w,c
  1091   00151A  0012               	return		;funcret
  1092   00151C                     __end_of_GPIO_PIN_INITIALIZE:
  1093                           	callstack 0
  1094                           
  1095 ;; *************** function _GPIO_PIN_WRITE_LOGIC *****************
  1096 ;; Defined at:
  1097 ;;		line 84 in file "MCAL/GPIO/HAL_GPIO.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  _PIN_CONFIG     1    0[COMRAM] PTR const struct .
  1100 ;;		 -> seg2_en(1), seg1_en(1), seg1$SEGMENT_PIN(4), seg1(5), 
  1101 ;;		 -> RELAY_TURN_OFF@pin(1), RELAY_TURN_ON@pin(1), RELAY_INITIALIZE@pin(1), LED_Turn_OFF@PIN_OBJ(1), 
  1102 ;;		 -> LED_Turn_ON@PIN_OBJ(1), LED_INITIALIZE@PIN_OBJ(1), 
  1103 ;;  LOGIC           1    1[COMRAM] enum E3067
  1104 ;; Auto vars:     Size  Location     Type
  1105 ;;  Retval          1    7[COMRAM] enum E3063
  1106 ;; Return value:  Size  Location     Type
  1107 ;;                  1    wreg      enum E3063
  1108 ;; Registers used:
  1109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1115 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1116 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1117 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1118 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1119 ;;Total ram usage:        8 bytes
  1120 ;; Hardware stack levels used: 1
  1121 ;; This function calls:
  1122 ;;		Nothing
  1123 ;; This function is called by:
  1124 ;;		_GPIO_PIN_INITIALIZE
  1125 ;;		_main
  1126 ;;		_SEGMENT_WRITE_NUMBER
  1127 ;;		_DC_MOTOR_ROTATE_CW
  1128 ;;		_DC_MOTOR_ROTATE_CCW
  1129 ;;		_DC_MOTOR_STOP
  1130 ;;		_LED_Turn_ON
  1131 ;;		_LED_Turn_OFF
  1132 ;;		_RELAY_TURN_ON
  1133 ;;		_RELAY_TURN_OFF
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text7
  1138   001114                     __ptext7:
  1139                           	callstack 0
  1140   001114                     _GPIO_PIN_WRITE_LOGIC:
  1141                           	callstack 29
  1142   001114                     
  1143                           ;MCAL/GPIO/HAL_GPIO.c: 86:     if(((void*)0) == _PIN_CONFIG || _PIN_CONFIG->PIN >= 8){
  1144   001114  5028               	movf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,w,c
  1145   001116  B4D8               	btfsc	status,2,c
  1146   001118  EF90  F008         	goto	u781
  1147   00111C  EF92  F008         	goto	u780
  1148   001120                     u781:
  1149   001120  EFA2  F008         	goto	l1515
  1150   001124                     u780:
  1151   001124  5028               	movf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,w,c
  1152   001126  6ED9               	movwf	fsr2l,c
  1153   001128  6ADA               	clrf	fsr2h,c
  1154   00112A  30DF               	rrcf	223,w,c
  1155   00112C  32E8               	rrcf	wreg,f,c
  1156   00112E  32E8               	rrcf	wreg,f,c
  1157   001130  0B07               	andlw	7
  1158   001132  6E2A               	movwf	??_GPIO_PIN_WRITE_LOGIC^0,c
  1159   001134  0E07               	movlw	7
  1160   001136  642A               	cpfsgt	??_GPIO_PIN_WRITE_LOGIC^0,c
  1161   001138  EFA0  F008         	goto	u791
  1162   00113C  EFA2  F008         	goto	u790
  1163   001140                     u791:
  1164   001140  EFFB  F008         	goto	l1529
  1165   001144                     u790:
  1166   001144                     l1515:
  1167                           
  1168                           ;MCAL/GPIO/HAL_GPIO.c: 87:         Retval= E_NOT_OK;
  1169   001144  0E00               	movlw	0
  1170   001146  6E2F               	movwf	GPIO_PIN_WRITE_LOGIC@Retval^0,c
  1171                           
  1172                           ;MCAL/GPIO/HAL_GPIO.c: 88:     }
  1173   001148  EF10  F009         	goto	l1531
  1174   00114C                     l1517:
  1175                           
  1176                           ;MCAL/GPIO/HAL_GPIO.c: 92:                 (*LAT_REG[_PIN_CONFIG->PORT] &= ~(((uint8)0x0
      +                          1) << _PIN_CONFIG->PIN));
  1177   00114C  5028               	movf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,w,c
  1178   00114E  6ED9               	movwf	fsr2l,c
  1179   001150  6ADA               	clrf	fsr2h,c
  1180   001152  30DF               	rrcf	223,w,c
  1181   001154  32E8               	rrcf	wreg,f,c
  1182   001156  32E8               	rrcf	wreg,f,c
  1183   001158  0B07               	andlw	7
  1184   00115A  6E2A               	movwf	??_GPIO_PIN_WRITE_LOGIC^0,c
  1185   00115C  0E01               	movlw	1
  1186   00115E  6E2B               	movwf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,c
  1187   001160  2A2A               	incf	??_GPIO_PIN_WRITE_LOGIC^0,f,c
  1188   001162  EFB5  F008         	goto	u804
  1189   001166                     u805:
  1190   001166  90D8               	bcf	status,0,c
  1191   001168  362B               	rlcf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,f,c
  1192   00116A                     u804:
  1193   00116A  2E2A               	decfsz	??_GPIO_PIN_WRITE_LOGIC^0,f,c
  1194   00116C  EFB3  F008         	goto	u805
  1195   001170  502B               	movf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,w,c
  1196   001172  0AFF               	xorlw	255
  1197   001174  6E2C               	movwf	(??_GPIO_PIN_WRITE_LOGIC+2)^0,c
  1198   001176  5028               	movf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,w,c
  1199   001178  6ED9               	movwf	fsr2l,c
  1200   00117A  6ADA               	clrf	fsr2h,c
  1201   00117C  50DF               	movf	223,w,c
  1202   00117E  0B07               	andlw	7
  1203   001180  0D02               	mullw	2
  1204   001182  50F3               	movf	243,w,c
  1205   001184  0F01               	addlw	low _LAT_REG
  1206   001186  6ED9               	movwf	fsr2l,c
  1207   001188  6ADA               	clrf	fsr2h,c
  1208   00118A  CFDE F02D          	movff	postinc2,??_GPIO_PIN_WRITE_LOGIC+3
  1209   00118E  CFDD F02E          	movff	postdec2,??_GPIO_PIN_WRITE_LOGIC+4
  1210   001192  C02D  FFD9         	movff	??_GPIO_PIN_WRITE_LOGIC+3,fsr2l
  1211   001196  C02E  FFDA         	movff	??_GPIO_PIN_WRITE_LOGIC+4,fsr2h
  1212   00119A  502C               	movf	(??_GPIO_PIN_WRITE_LOGIC+2)^0,w,c
  1213   00119C  16DF               	andwf	indf2,f,c
  1214   00119E                     l1519:
  1215                           
  1216                           ;MCAL/GPIO/HAL_GPIO.c: 93:                 Retval = E_OK;
  1217   00119E  0E01               	movlw	1
  1218   0011A0  6E2F               	movwf	GPIO_PIN_WRITE_LOGIC@Retval^0,c
  1219                           
  1220                           ;MCAL/GPIO/HAL_GPIO.c: 94:                 break;
  1221   0011A2  EF10  F009         	goto	l1531
  1222   0011A6                     l1521:
  1223                           
  1224                           ;MCAL/GPIO/HAL_GPIO.c: 96:                 (*LAT_REG[_PIN_CONFIG->PORT] |= (((uint8)0x01
      +                          ) << _PIN_CONFIG->PIN));
  1225   0011A6  5028               	movf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,w,c
  1226   0011A8  6ED9               	movwf	fsr2l,c
  1227   0011AA  6ADA               	clrf	fsr2h,c
  1228   0011AC  30DF               	rrcf	223,w,c
  1229   0011AE  32E8               	rrcf	wreg,f,c
  1230   0011B0  32E8               	rrcf	wreg,f,c
  1231   0011B2  0B07               	andlw	7
  1232   0011B4  6E2A               	movwf	??_GPIO_PIN_WRITE_LOGIC^0,c
  1233   0011B6  0E01               	movlw	1
  1234   0011B8  6E2B               	movwf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,c
  1235   0011BA  2A2A               	incf	??_GPIO_PIN_WRITE_LOGIC^0,f,c
  1236   0011BC  EFE2  F008         	goto	u814
  1237   0011C0                     u815:
  1238   0011C0  90D8               	bcf	status,0,c
  1239   0011C2  362B               	rlcf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,f,c
  1240   0011C4                     u814:
  1241   0011C4  2E2A               	decfsz	??_GPIO_PIN_WRITE_LOGIC^0,f,c
  1242   0011C6  EFE0  F008         	goto	u815
  1243   0011CA  5028               	movf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,w,c
  1244   0011CC  6ED9               	movwf	fsr2l,c
  1245   0011CE  6ADA               	clrf	fsr2h,c
  1246   0011D0  50DF               	movf	223,w,c
  1247   0011D2  0B07               	andlw	7
  1248   0011D4  0D02               	mullw	2
  1249   0011D6  50F3               	movf	243,w,c
  1250   0011D8  0F01               	addlw	low _LAT_REG
  1251   0011DA  6ED9               	movwf	fsr2l,c
  1252   0011DC  6ADA               	clrf	fsr2h,c
  1253   0011DE  CFDE F02C          	movff	postinc2,??_GPIO_PIN_WRITE_LOGIC+2
  1254   0011E2  CFDD F02D          	movff	postdec2,??_GPIO_PIN_WRITE_LOGIC+3
  1255   0011E6  C02C  FFD9         	movff	??_GPIO_PIN_WRITE_LOGIC+2,fsr2l
  1256   0011EA  C02D  FFDA         	movff	??_GPIO_PIN_WRITE_LOGIC+3,fsr2h
  1257   0011EE  502B               	movf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,w,c
  1258   0011F0  12DF               	iorwf	indf2,f,c
  1259   0011F2  EFCF  F008         	goto	l1519
  1260   0011F6                     l1529:
  1261   0011F6  5029               	movf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,w,c
  1262   0011F8  6E2A               	movwf	??_GPIO_PIN_WRITE_LOGIC^0,c
  1263   0011FA  6A2B               	clrf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,c
  1264                           
  1265                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1266                           ; Switch size 1, requested type "simple"
  1267                           ; Number of cases is 1, Range of values is 0 to 0
  1268                           ; switch strategies available:
  1269                           ; Name         Instructions Cycles
  1270                           ; simple_byte            4     3 (average)
  1271                           ;	Chosen strategy is simple_byte
  1272   0011FC  502B               	movf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,w,c
  1273   0011FE  0A00               	xorlw	0	; case 0
  1274   001200  B4D8               	btfsc	status,2,c
  1275   001202  EF05  F009         	goto	l1865
  1276   001206  EFA2  F008         	goto	l1515
  1277   00120A                     l1865:
  1278                           
  1279                           ; Switch size 1, requested type "simple"
  1280                           ; Number of cases is 2, Range of values is 0 to 1
  1281                           ; switch strategies available:
  1282                           ; Name         Instructions Cycles
  1283                           ; simple_byte            7     4 (average)
  1284                           ;	Chosen strategy is simple_byte
  1285   00120A  502A               	movf	??_GPIO_PIN_WRITE_LOGIC^0,w,c
  1286   00120C  0A00               	xorlw	0	; case 0
  1287   00120E  B4D8               	btfsc	status,2,c
  1288   001210  EFA6  F008         	goto	l1517
  1289   001214  0A01               	xorlw	1	; case 1
  1290   001216  B4D8               	btfsc	status,2,c
  1291   001218  EFD3  F008         	goto	l1521
  1292   00121C  EFA2  F008         	goto	l1515
  1293   001220                     l1531:
  1294                           
  1295                           ;MCAL/GPIO/HAL_GPIO.c: 104:     return Retval;
  1296   001220  502F               	movf	GPIO_PIN_WRITE_LOGIC@Retval^0,w,c
  1297   001222  0012               	return		;funcret
  1298   001224                     __end_of_GPIO_PIN_WRITE_LOGIC:
  1299                           	callstack 0
  1300                           
  1301 ;; *************** function _GPIO_PIN_DIRECTION_INITIALIZE *****************
  1302 ;; Defined at:
  1303 ;;		line 29 in file "MCAL/GPIO/HAL_GPIO.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;  _PIN_CONFIG     1    0[COMRAM] PTR const struct .
  1306 ;;		 -> seg2_en(1), seg1_en(1), seg1$SEGMENT_PIN(4), seg1(5), 
  1307 ;;		 -> RELAY_INITIALIZE@pin(1), LED_INITIALIZE@PIN_OBJ(1), 
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;  Retval          1    6[COMRAM] enum E3063
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      enum E3063
  1312 ;; Registers used:
  1313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1319 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;Total ram usage:        7 bytes
  1324 ;; Hardware stack levels used: 1
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_GPIO_PIN_INITIALIZE
  1329 ;;		_BUTTON_INITIALIZE
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           	psect	text8
  1334   001002                     __ptext8:
  1335                           	callstack 0
  1336   001002                     _GPIO_PIN_DIRECTION_INITIALIZE:
  1337                           	callstack 27
  1338   001002                     
  1339                           ;MCAL/GPIO/HAL_GPIO.c: 31:     if(((void*)0) == _PIN_CONFIG || _PIN_CONFIG->PIN >= 8){
  1340   001002  5028               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
  1341   001004  B4D8               	btfsc	status,2,c
  1342   001006  EF07  F008         	goto	u731
  1343   00100A  EF09  F008         	goto	u730
  1344   00100E                     u731:
  1345   00100E  EF19  F008         	goto	l1491
  1346   001012                     u730:
  1347   001012  5028               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
  1348   001014  6ED9               	movwf	fsr2l,c
  1349   001016  6ADA               	clrf	fsr2h,c
  1350   001018  30DF               	rrcf	223,w,c
  1351   00101A  32E8               	rrcf	wreg,f,c
  1352   00101C  32E8               	rrcf	wreg,f,c
  1353   00101E  0B07               	andlw	7
  1354   001020  6E29               	movwf	??_GPIO_PIN_DIRECTION_INITIALIZE^0,c
  1355   001022  0E07               	movlw	7
  1356   001024  6429               	cpfsgt	??_GPIO_PIN_DIRECTION_INITIALIZE^0,c
  1357   001026  EF17  F008         	goto	u741
  1358   00102A  EF19  F008         	goto	u740
  1359   00102E                     u741:
  1360   00102E  EF72  F008         	goto	l1505
  1361   001032                     u740:
  1362   001032                     l1491:
  1363                           
  1364                           ;MCAL/GPIO/HAL_GPIO.c: 32:         Retval = E_NOT_OK;
  1365   001032  0E00               	movlw	0
  1366   001034  6E2E               	movwf	GPIO_PIN_DIRECTION_INITIALIZE@Retval^0,c
  1367                           
  1368                           ;MCAL/GPIO/HAL_GPIO.c: 33:     }
  1369   001036  EF88  F008         	goto	l1507
  1370   00103A                     l1493:
  1371                           
  1372                           ;MCAL/GPIO/HAL_GPIO.c: 37:                 (*TRIS_REG[_PIN_CONFIG->PORT] &= ~(((uint8)0x
      +                          01) << _PIN_CONFIG->PIN));
  1373   00103A  5028               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
  1374   00103C  6ED9               	movwf	fsr2l,c
  1375   00103E  6ADA               	clrf	fsr2h,c
  1376   001040  30DF               	rrcf	223,w,c
  1377   001042  32E8               	rrcf	wreg,f,c
  1378   001044  32E8               	rrcf	wreg,f,c
  1379   001046  0B07               	andlw	7
  1380   001048  6E29               	movwf	??_GPIO_PIN_DIRECTION_INITIALIZE^0,c
  1381   00104A  0E01               	movlw	1
  1382   00104C  6E2A               	movwf	(??_GPIO_PIN_DIRECTION_INITIALIZE+1)^0,c
  1383   00104E  2A29               	incf	??_GPIO_PIN_DIRECTION_INITIALIZE^0,f,c
  1384   001050  EF2C  F008         	goto	u754
  1385   001054                     u755:
  1386   001054  90D8               	bcf	status,0,c
  1387   001056  362A               	rlcf	(??_GPIO_PIN_DIRECTION_INITIALIZE+1)^0,f,c
  1388   001058                     u754:
  1389   001058  2E29               	decfsz	??_GPIO_PIN_DIRECTION_INITIALIZE^0,f,c
  1390   00105A  EF2A  F008         	goto	u755
  1391   00105E  502A               	movf	(??_GPIO_PIN_DIRECTION_INITIALIZE+1)^0,w,c
  1392   001060  0AFF               	xorlw	255
  1393   001062  6E2B               	movwf	(??_GPIO_PIN_DIRECTION_INITIALIZE+2)^0,c
  1394   001064  5028               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
  1395   001066  6ED9               	movwf	fsr2l,c
  1396   001068  6ADA               	clrf	fsr2h,c
  1397   00106A  50DF               	movf	223,w,c
  1398   00106C  0B07               	andlw	7
  1399   00106E  0D02               	mullw	2
  1400   001070  50F3               	movf	243,w,c
  1401   001072  0F15               	addlw	low _TRIS_REG
  1402   001074  6ED9               	movwf	fsr2l,c
  1403   001076  6ADA               	clrf	fsr2h,c
  1404   001078  CFDE F02C          	movff	postinc2,??_GPIO_PIN_DIRECTION_INITIALIZE+3
  1405   00107C  CFDD F02D          	movff	postdec2,??_GPIO_PIN_DIRECTION_INITIALIZE+4
  1406   001080  C02C  FFD9         	movff	??_GPIO_PIN_DIRECTION_INITIALIZE+3,fsr2l
  1407   001084  C02D  FFDA         	movff	??_GPIO_PIN_DIRECTION_INITIALIZE+4,fsr2h
  1408   001088  502B               	movf	(??_GPIO_PIN_DIRECTION_INITIALIZE+2)^0,w,c
  1409   00108A  16DF               	andwf	indf2,f,c
  1410   00108C                     l1495:
  1411                           
  1412                           ;MCAL/GPIO/HAL_GPIO.c: 38:                 Retval = E_OK;
  1413   00108C  0E01               	movlw	1
  1414   00108E  6E2E               	movwf	GPIO_PIN_DIRECTION_INITIALIZE@Retval^0,c
  1415                           
  1416                           ;MCAL/GPIO/HAL_GPIO.c: 39:                 break;
  1417   001090  EF88  F008         	goto	l1507
  1418   001094                     l1497:
  1419                           
  1420                           ;MCAL/GPIO/HAL_GPIO.c: 41:                 (*TRIS_REG[_PIN_CONFIG->PORT] |= (((uint8)0x0
      +                          1) << _PIN_CONFIG->PIN));
  1421   001094  5028               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
  1422   001096  6ED9               	movwf	fsr2l,c
  1423   001098  6ADA               	clrf	fsr2h,c
  1424   00109A  30DF               	rrcf	223,w,c
  1425   00109C  32E8               	rrcf	wreg,f,c
  1426   00109E  32E8               	rrcf	wreg,f,c
  1427   0010A0  0B07               	andlw	7
  1428   0010A2  6E29               	movwf	??_GPIO_PIN_DIRECTION_INITIALIZE^0,c
  1429   0010A4  0E01               	movlw	1
  1430   0010A6  6E2A               	movwf	(??_GPIO_PIN_DIRECTION_INITIALIZE+1)^0,c
  1431   0010A8  2A29               	incf	??_GPIO_PIN_DIRECTION_INITIALIZE^0,f,c
  1432   0010AA  EF59  F008         	goto	u764
  1433   0010AE                     u765:
  1434   0010AE  90D8               	bcf	status,0,c
  1435   0010B0  362A               	rlcf	(??_GPIO_PIN_DIRECTION_INITIALIZE+1)^0,f,c
  1436   0010B2                     u764:
  1437   0010B2  2E29               	decfsz	??_GPIO_PIN_DIRECTION_INITIALIZE^0,f,c
  1438   0010B4  EF57  F008         	goto	u765
  1439   0010B8  5028               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
  1440   0010BA  6ED9               	movwf	fsr2l,c
  1441   0010BC  6ADA               	clrf	fsr2h,c
  1442   0010BE  50DF               	movf	223,w,c
  1443   0010C0  0B07               	andlw	7
  1444   0010C2  0D02               	mullw	2
  1445   0010C4  50F3               	movf	243,w,c
  1446   0010C6  0F15               	addlw	low _TRIS_REG
  1447   0010C8  6ED9               	movwf	fsr2l,c
  1448   0010CA  6ADA               	clrf	fsr2h,c
  1449   0010CC  CFDE F02B          	movff	postinc2,??_GPIO_PIN_DIRECTION_INITIALIZE+2
  1450   0010D0  CFDD F02C          	movff	postdec2,??_GPIO_PIN_DIRECTION_INITIALIZE+3
  1451   0010D4  C02B  FFD9         	movff	??_GPIO_PIN_DIRECTION_INITIALIZE+2,fsr2l
  1452   0010D8  C02C  FFDA         	movff	??_GPIO_PIN_DIRECTION_INITIALIZE+3,fsr2h
  1453   0010DC  502A               	movf	(??_GPIO_PIN_DIRECTION_INITIALIZE+1)^0,w,c
  1454   0010DE  12DF               	iorwf	indf2,f,c
  1455   0010E0  EF46  F008         	goto	l1495
  1456   0010E4                     l1505:
  1457   0010E4  5028               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
  1458   0010E6  6ED9               	movwf	fsr2l,c
  1459   0010E8  6ADA               	clrf	fsr2h,c
  1460   0010EA  BCDF               	btfsc	indf2,6,c
  1461   0010EC  EF7A  F008         	goto	u771
  1462   0010F0  EF7D  F008         	goto	u770
  1463   0010F4                     u771:
  1464   0010F4  0E01               	movlw	1
  1465   0010F6  EF7E  F008         	goto	u776
  1466   0010FA                     u770:
  1467   0010FA  0E00               	movlw	0
  1468   0010FC                     u776:
  1469                           
  1470                           ; Switch size 1, requested type "simple"
  1471                           ; Number of cases is 2, Range of values is 0 to 1
  1472                           ; switch strategies available:
  1473                           ; Name         Instructions Cycles
  1474                           ; simple_byte            7     4 (average)
  1475                           ;	Chosen strategy is simple_byte
  1476   0010FC  0A00               	xorlw	0	; case 0
  1477   0010FE  B4D8               	btfsc	status,2,c
  1478   001100  EF1D  F008         	goto	l1493
  1479   001104  0A01               	xorlw	1	; case 1
  1480   001106  B4D8               	btfsc	status,2,c
  1481   001108  EF4A  F008         	goto	l1497
  1482   00110C  EF19  F008         	goto	l1491
  1483   001110                     l1507:
  1484                           
  1485                           ;MCAL/GPIO/HAL_GPIO.c: 49:     return Retval;
  1486   001110  502E               	movf	GPIO_PIN_DIRECTION_INITIALIZE@Retval^0,w,c
  1487   001112  0012               	return		;funcret
  1488   001114                     __end_of_GPIO_PIN_DIRECTION_INITIALIZE:
  1489                           	callstack 0
  1490                           
  1491                           	psect	smallconst
  1492   001000                     __psmallconst:
  1493                           	callstack 0
  1494   001000  00                 	db	0
  1495   001001  00                 	db	0	; dummy byte at the end
  1496   000000                     
  1497                           	psect	rparam
  1498   000000                     
  1499                           	psect	config
  1500                           
  1501                           ; Padding undefined space
  1502   300000                     	org	3145728
  1503   300000  FF                 	db	255
  1504                           
  1505                           ;Config register CONFIG1H @ 0x300001
  1506                           ;	Oscillator Selection bits
  1507                           ;	FOSC = HS, HS oscillator
  1508                           ;	Fail-Safe Clock Monitor Enable bit
  1509                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1510                           ;	Internal/External Oscillator Switchover bit
  1511                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1512   300001                     	org	3145729
  1513   300001  02                 	db	2
  1514                           
  1515                           ;Config register CONFIG2L @ 0x300002
  1516                           ;	Power-up Timer Enable bit
  1517                           ;	PWRTEN = OFF, PWRT disabled
  1518                           ;	Brown-out Reset Enable bits
  1519                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1520                           ;	Brown Out Reset Voltage bits
  1521                           ;	BORV = 18, VBOR set to 1.8 V nominal
  1522   300002                     	org	3145730
  1523   300002  19                 	db	25
  1524                           
  1525                           ;Config register CONFIG2H @ 0x300003
  1526                           ;	Watchdog Timer Enable bit
  1527                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  1528                           ;	Watchdog Timer Postscale Select bits
  1529                           ;	WDTPS = 32768, 1:32768
  1530   300003                     	org	3145731
  1531   300003  1E                 	db	30
  1532                           
  1533                           ; Padding undefined space
  1534   300004                     	org	3145732
  1535   300004  FF                 	db	255
  1536                           
  1537                           ;Config register CONFIG3H @ 0x300005
  1538                           ;	CCP2 MUX bit
  1539                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1540                           ;	PORTB A/D Enable bit
  1541                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1542                           ;	Low-Power Timer1 Oscillator Enable bit
  1543                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1544                           ;	HFINTOSC Fast Start-up
  1545                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  1546                           ;	MCLR Pin Enable bit
  1547                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1548   300005                     	org	3145733
  1549   300005  89                 	db	137
  1550                           
  1551                           ;Config register CONFIG4L @ 0x300006
  1552                           ;	Stack Full/Underflow Reset Enable bit
  1553                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1554                           ;	Single-Supply ICSP Enable bit
  1555                           ;	LVP = OFF, Single-Supply ICSP disabled
  1556                           ;	Extended Instruction Set Enable bit
  1557                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1558                           ;	Background Debugger Enable bit
  1559                           ;	DEBUG = 0x1, unprogrammed default
  1560   300006                     	org	3145734
  1561   300006  81                 	db	129
  1562                           
  1563                           ; Padding undefined space
  1564   300007                     	org	3145735
  1565   300007  FF                 	db	255
  1566                           
  1567                           ;Config register CONFIG5L @ 0x300008
  1568                           ;	Code Protection Block 0
  1569                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1570                           ;	Code Protection Block 1
  1571                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1572                           ;	Code Protection Block 2
  1573                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1574                           ;	Code Protection Block 3
  1575                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1576   300008                     	org	3145736
  1577   300008  0F                 	db	15
  1578                           
  1579                           ;Config register CONFIG5H @ 0x300009
  1580                           ;	Boot Block Code Protection bit
  1581                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1582                           ;	Data EEPROM Code Protection bit
  1583                           ;	CPD = OFF, Data EEPROM not code-protected
  1584   300009                     	org	3145737
  1585   300009  C0                 	db	192
  1586                           
  1587                           ;Config register CONFIG6L @ 0x30000A
  1588                           ;	Write Protection Block 0
  1589                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1590                           ;	Write Protection Block 1
  1591                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1592                           ;	Write Protection Block 2
  1593                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1594                           ;	Write Protection Block 3
  1595                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  1596   30000A                     	org	3145738
  1597   30000A  0F                 	db	15
  1598                           
  1599                           ;Config register CONFIG6H @ 0x30000B
  1600                           ;	Configuration Register Write Protection bit
  1601                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1602                           ;	Boot Block Write Protection bit
  1603                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1604                           ;	Data EEPROM Write Protection bit
  1605                           ;	WRTD = OFF, Data EEPROM not write-protected
  1606   30000B                     	org	3145739
  1607   30000B  E0                 	db	224
  1608                           
  1609                           ;Config register CONFIG7L @ 0x30000C
  1610                           ;	Table Read Protection Block 0
  1611                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1612                           ;	Table Read Protection Block 1
  1613                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1614                           ;	Table Read Protection Block 2
  1615                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1616                           ;	Table Read Protection Block 3
  1617                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1618   30000C                     	org	3145740
  1619   30000C  0F                 	db	15
  1620                           
  1621                           ;Config register CONFIG7H @ 0x30000D
  1622                           ;	Boot Block Table Read Protection bit
  1623                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1624   30000D                     	org	3145741
  1625   30000D  40                 	db	64
  1626                           tosu	equ	0xFFF
  1627                           tosh	equ	0xFFE
  1628                           tosl	equ	0xFFD
  1629                           stkptr	equ	0xFFC
  1630                           pclatu	equ	0xFFB
  1631                           pclath	equ	0xFFA
  1632                           pcl	equ	0xFF9
  1633                           tblptru	equ	0xFF8
  1634                           tblptrh	equ	0xFF7
  1635                           tblptrl	equ	0xFF6
  1636                           tablat	equ	0xFF5
  1637                           prodh	equ	0xFF4
  1638                           prodl	equ	0xFF3
  1639                           indf0	equ	0xFEF
  1640                           postinc0	equ	0xFEE
  1641                           postdec0	equ	0xFED
  1642                           preinc0	equ	0xFEC
  1643                           plusw0	equ	0xFEB
  1644                           fsr0h	equ	0xFEA
  1645                           fsr0l	equ	0xFE9
  1646                           wreg	equ	0xFE8
  1647                           indf1	equ	0xFE7
  1648                           postinc1	equ	0xFE6
  1649                           postdec1	equ	0xFE5
  1650                           preinc1	equ	0xFE4
  1651                           plusw1	equ	0xFE3
  1652                           fsr1h	equ	0xFE2
  1653                           fsr1l	equ	0xFE1
  1654                           bsr	equ	0xFE0
  1655                           indf2	equ	0xFDF
  1656                           postinc2	equ	0xFDE
  1657                           postdec2	equ	0xFDD
  1658                           preinc2	equ	0xFDC
  1659                           plusw2	equ	0xFDB
  1660                           fsr2h	equ	0xFDA
  1661                           fsr2l	equ	0xFD9
  1662                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        39
    BSS         7
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      63
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG	PTR const struct . size(1) Largest target is 5
		 -> LED_INITIALIZE@PIN_OBJ(COMRAM[1]), RELAY_INITIALIZE@pin(COMRAM[1]), seg1(COMRAM[5]), seg1$SEGMENT_PIN(COMRAM[4]), 
		 -> seg1_en(COMRAM[1]), seg2_en(COMRAM[1]), 

    GPIO_PIN_INITIALIZE@_PIN_CONFIG	PTR const struct . size(1) Largest target is 5
		 -> LED_INITIALIZE@PIN_OBJ(COMRAM[1]), RELAY_INITIALIZE@pin(COMRAM[1]), seg1(COMRAM[5]), seg1$SEGMENT_PIN(COMRAM[4]), 
		 -> seg1_en(COMRAM[1]), seg2_en(COMRAM[1]), 

    GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG	PTR const struct . size(1) Largest target is 5
		 -> LED_INITIALIZE@PIN_OBJ(COMRAM[1]), LED_Turn_OFF@PIN_OBJ(COMRAM[1]), LED_Turn_ON@PIN_OBJ(COMRAM[1]), RELAY_INITIALIZE@pin(COMRAM[1]), 
		 -> RELAY_TURN_OFF@pin(COMRAM[1]), RELAY_TURN_ON@pin(COMRAM[1]), seg1(COMRAM[5]), seg1$SEGMENT_PIN(COMRAM[4]), 
		 -> seg1_en(COMRAM[1]), seg2_en(COMRAM[1]), 

    LAT_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlhl[1]), LATB(BITBIGSFRlhh[1]), LATC(BITBIGSFRlhh[1]), LATD(BITBIGSFRlhh[1]), 
		 -> LATE(BITBIGSFRlhh[1]), 

    PORT_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRlhl[1]), PORTC(BITBIGSFRlhl[1]), PORTD(BITBIGSFRlhl[1]), 
		 -> PORTE(BITBIGSFRlhl[1]), 

    SEGMENT_INITIALIZE@seg	PTR const struct . size(1) Largest target is 5
		 -> seg1(COMRAM[5]), 

    SEGMENT_WRITE_NUMBER@seg	PTR const struct . size(1) Largest target is 5
		 -> seg1(COMRAM[5]), 

    TRIS_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_SEGMENT_WRITE_NUMBER
    _SEGMENT_WRITE_NUMBER->_GPIO_PIN_WRITE_LOGIC
    _SEGMENT_WRITE_NUMBER->___awdiv
    _Application_intialize->_SEGMENT_INITIALIZE
    _SEGMENT_INITIALIZE->_GPIO_PIN_INITIALIZE
    _GPIO_PIN_INITIALIZE->_GPIO_PIN_WRITE_LOGIC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   14072
                                             15 COMRAM     1     1      0
              _Application_intialize
               _GPIO_PIN_WRITE_LOGIC
               _SEGMENT_WRITE_NUMBER
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SEGMENT_WRITE_NUMBER                                 7     5      2    3120
                                              8 COMRAM     7     5      2
               _GPIO_PIN_WRITE_LOGIC
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Application_intialize                                0     0      0    7439
                _GPIO_PIN_INITIALIZE
                 _SEGMENT_INITIALIZE
 ---------------------------------------------------------------------------------
 (2) _SEGMENT_INITIALIZE                                   4     3      1    3826
                                             11 COMRAM     4     3      1
                _GPIO_PIN_INITIALIZE
 ---------------------------------------------------------------------------------
 (3) _GPIO_PIN_INITIALIZE                                  3     2      1    3613
                                              8 COMRAM     3     2      1
      _GPIO_PIN_DIRECTION_INITIALIZE
               _GPIO_PIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (2) _GPIO_PIN_WRITE_LOGIC                                 8     6      2    2613
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _GPIO_PIN_DIRECTION_INITIALIZE                        7     6      1     333
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Application_intialize
     _GPIO_PIN_INITIALIZE
       _GPIO_PIN_DIRECTION_INITIALIZE
       _GPIO_PIN_WRITE_LOGIC
     _SEGMENT_INITIALIZE
       _GPIO_PIN_INITIALIZE
   _GPIO_PIN_WRITE_LOGIC
   _SEGMENT_WRITE_NUMBER
     _GPIO_PIN_WRITE_LOGIC
     ___awdiv (ARG)
     ___awmod (ARG)
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRh          69      0       0      36        0.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      3F       1       66.3%
BITBIGSFRll         20      0       0      39        0.0%
BITBIGSFRlhh         4      0       0      37        0.0%
BITBIGSFRlhl         4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3F      40        0.0%
DATA                 0      0      3F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Sep 28 19:55:10 2024

                                       _n 001F                              ___awdiv@sign 002D  
                  ??_GPIO_PIN_WRITE_LOGIC 002A                                       l155 1112  
                                     l251 139C                                       l174 1222  
                                     l511 12E6                                       l257 15E8  
                                     l195 151A                                       l268 156A  
                                     l524 1396                                       l277 14BC  
                                     u730 1012                                       u731 100E  
                                     u740 1032                                       u804 116A  
                                     u820 14CE                                       u900 1236  
                                     u741 102E                                       u805 1166  
                                     u821 14CA                                       u901 1232  
                                     u814 11C4                                       u830 14EE  
                                     u910 1250                                       u815 11C0  
                                     u831 14EA                                       u911 124C  
                                     u840 152C                                       u920 1276  
                                     u841 1528                                       u921 1272  
                                     u770 10FA                                       u754 1058  
                                     u850 1568                                       u930 1294  
                                     u771 10F4                                       u755 1054  
                                     u851 1564                                       u931 1290  
                                     u764 10B2                                       u780 1124  
                                     u860 1450                                       u940 12B0  
                                     u765 10AE                                       u781 1120  
                                     u861 144C                                       u941 12AC  
                                     u790 1144                                       u870 1460  
                                     u950 12D6                                       u791 1140  
                                     u871 145C                                       u951 12D2  
                                     u776 10FC                                       u960 12FA  
                                     u961 12F6                                       u890 14BA  
                                     u970 1314                                       u891 14B6  
                                     u971 1310                                       u884 1488  
                                     u980 132E                                       u885 1484  
                                     u981 132A                                       u990 134C  
                                     u991 1348                                       _Ret 003F  
                            ___awmod@sign 002D                                       wreg 0FE8  
                                    l1511 1114                                      l1505 10E4  
                                    l1521 11A6                                      l1513 1124  
                                    l1601 1236                                      l1507 1110  
                                    l1531 1220                                      l1515 1144  
                                    l1611 125C                                      l1603 123E  
                                    l1517 114C                                      l1541 14CE  
                                    l1621 1294                                      l1613 1264  
                                    l1605 1242                                      l1519 119E  
                                    l1543 14EE                                      l1631 12C0  
                                    l1623 129A                                      l1615 1276  
                                    l1607 1250                                      l1529 11F6  
                                    l1545 14F6                                      l1553 151C  
                                    l1625 12B0                                      l1617 127E  
                                    l1633 12C6                                      l1609 1258  
                                    l1641 12E8                                      l1491 1032  
                                    l1547 1514                                      l1539 14BE  
                                    l1563 153C                                      l1555 152C  
                                    l1635 12D6                                      l1627 12B8  
                                    l1619 1286                                      l1651 1314  
                                    l1643 12EC                                      l1493 103A  
                                    l1549 1518                                      l1565 1548  
                                    l1557 1534                                      l1573 15CA  
                                    l1581 1468                                      l1637 12DE  
                                    l1629 12BA                                      l1661 134C  
                                    l1653 131C                                      l1645 12FA  
                                    l1495 108C                                      l1487 1002  
                                    l1567 154C                                      l1591 149E  
                                    l1575 1440                                      l1671 1386  
                                    l1663 1362                                      l1655 132E  
                                    l1647 1302                                      l1497 1094  
                                    l1489 1012                                      l1569 1568  
                                    l1593 14BA                                      l1577 1450  
                                    l1673 138E                                      l1665 136A  
                                    l1657 1336                                      l1649 1306  
                                    l1587 1470                                      l1579 1460  
                                    l1667 1370                                      l1659 133E  
                                    l1851 13DA                                      l1589 149A  
                                    l1597 1224                                      l1669 1376  
                                    l1853 13E8                                      l1599 1228  
                                    l1855 13F6                                      l1847 1398  
                                    l1865 120A                                      l1857 1426  
                                    l1849 13CC                                      l1859 1434  
                                    u1000 1362                                      u1001 135E  
                                    u1010 1386                                      u1011 1382  
                                    u1207 141E                                      _LATA 0F89  
                                    _LATB 0F8A                                      _LATC 0F8B  
                                    _LATD 0F8C                                      _LATE 0F8D  
                                    u1197 13D2                       LED_INITIALIZE@F3148 003E  
                                    _seg1 0021                                      _main 1398  
                                    fsr2h 0FDA                                      indf2 0FDF  
                                    fsr1l 0FE1                                      fsr2l 0FD9  
                                    prodl 0FF3                                      start 0004  
                 SEGMENT_WRITE_NUMBER@seg 0030                              ___param_bank 0000  
                                   ?_main 0028                           __end_of___awdiv 12E8  
                         __end_of___awmod 1398                           ___awdiv@divisor 002A  
                         ___awdiv@counter 002C                                     _PORTA 0F80  
                                   _PORTB 0F81                                     _PORTC 0F82  
                                   _PORTD 0F83                                     _PORTE 0F84  
                                   _TRISA 0F92                                     _TRISB 0F93  
                                   _TRISC 0F94                                     _TRISD 0F95  
                                   _TRISE 0F96                    ?_Application_intialize 0028  
            __end_of_SEGMENT_WRITE_NUMBER 14BE                                     tablat 0FF5  
                                   status 0FD8                           __initialization 156C  
                            __end_of_main 1440                                    ??_main 0037  
                           __activetblptr 0002                          ___awdiv@dividend 0028  
                               ??___awdiv 002C                                 ??___awmod 002C  
                                  clear_0 1592                          ___awdiv@quotient 002E  
                         ___awmod@divisor 002A                                    isa$std 0001  
                         ___awmod@counter 002C                          LED_Turn_ON@F3153 003D  
                            __pdataCOMRAM 0001                              __mediumconst 0000  
                                  tblptrh 0FF7                                    tblptrl 0FF6  
                                  tblptru 0FF8                                __accesstop 0060  
                 __end_of__initialization 1598                             ___rparam_used 0001  
                   SEGMENT_WRITE_NUMBER@i 0035                            __pcstackCOMRAM 0028  
                     _GPIO_PIN_INITIALIZE 14BE            ?_GPIO_PIN_DIRECTION_INITIALIZE 0028  
                    _SEGMENT_WRITE_NUMBER 1440                      ?_GPIO_PIN_INITIALIZE 0030  
                              __pnvCOMRAM 003F                     ?_SEGMENT_WRITE_NUMBER 0030  
                                 _LAT_REG 0001                   ??_Application_intialize 0037  
                   ??_GPIO_PIN_INITIALIZE 0031                       RELAY_TURN_OFF@F3158 0038  
                                 __Hparam 0000                                   __Lparam 0000  
                                 ___awdiv 1224                                   ___awmod 12E8  
                            __psmallconst 1000                                   __pcinit 156C  
                                 __ramtop 1000                                   __ptext0 1398  
                                 __ptext1 12E8                                   __ptext2 1224  
                                 __ptext3 1440                                   __ptext4 15CA  
                                 __ptext5 151C                                   __ptext6 14BE  
                                 __ptext7 1114                                   __ptext8 1002  
                                 _seg1_en 0027                                   _seg2_en 0026  
                        ___awmod@dividend 0028                         LED_Turn_OFF@F3158 003C  
                    end_of_initialization 1598                             __Lmediumconst 0000  
                                 postdec1 0FE5                                   postdec2 0FDD  
                                 postinc0 0FEE                                   postinc2 0FDE  
                  ??_SEGMENT_WRITE_NUMBER 0032            GPIO_PIN_INITIALIZE@_PIN_CONFIG 0030  
                           __pidataCOMRAM 15A2                       start_initialization 156C  
         ??_GPIO_PIN_DIRECTION_INITIALIZE 0029                GPIO_PIN_WRITE_LOGIC@Retval 002F  
                             __pbssCOMRAM 0038                __end_of_SEGMENT_INITIALIZE 156C  
           __end_of_Application_intialize 15EA                SEGMENT_WRITE_NUMBER@Retval 0034  
            __end_of_GPIO_PIN_WRITE_LOGIC 1224                SEGMENT_WRITE_NUMBER@number 0031  
                                ?___awdiv 0028                                  ?___awmod 0028  
GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG 0028               __end_of_GPIO_PIN_INITIALIZE 151C  
                             __smallconst 1000                        RELAY_TURN_ON@F3152 0039  
         GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG 0028     __end_of_GPIO_PIN_DIRECTION_INITIALIZE 1114  
           _GPIO_PIN_DIRECTION_INITIALIZE 1002                                  _PORT_REG 000B  
               GPIO_PIN_INITIALIZE@Retval 0032                                  _TRIS_REG 0015  
                               copy_data0 1580                 GPIO_PIN_WRITE_LOGIC@LOGIC 0029  
                                __Hrparam 0000                                  __Lrparam 0000  
                    _GPIO_PIN_WRITE_LOGIC 1114       GPIO_PIN_DIRECTION_INITIALIZE@Retval 002E  
                                isa$xinst 0000                           LED_TOGGLE@F3163 003B  
                   ?_GPIO_PIN_WRITE_LOGIC 0028                        _SEGMENT_INITIALIZE 151C  
                     ?_SEGMENT_INITIALIZE 0033                  SEGMENT_INITIALIZE@Retval 0034  
                    ??_SEGMENT_INITIALIZE 0034                     _Application_intialize 15CA  
                   SEGMENT_INITIALIZE@seg 0033                       SEGMENT_INITIALIZE@i 0035  
                   RELAY_INITIALIZE@F3146 003A  
