

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Oct 08 00:04:54 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Generated 12/10/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F46K20 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     
    70                           	psect	idataCOMRAM
    71   001A36                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _LAT_REG
    75   001A36  89                 	db	137
    76   001A37  0F                 	db	15
    77   001A38  8A                 	db	138
    78   001A39  0F                 	db	15
    79   001A3A  8B                 	db	139
    80   001A3B  0F                 	db	15
    81   001A3C  8C                 	db	140
    82   001A3D  0F                 	db	15
    83   001A3E  8D                 	db	141
    84   001A3F  0F                 	db	15
    85                           
    86                           ;initializer for _PORT_REG
    87   001A40  80                 	db	128
    88   001A41  0F                 	db	15
    89   001A42  81                 	db	129
    90   001A43  0F                 	db	15
    91   001A44  82                 	db	130
    92   001A45  0F                 	db	15
    93   001A46  83                 	db	131
    94   001A47  0F                 	db	15
    95   001A48  84                 	db	132
    96   001A49  0F                 	db	15
    97                           
    98                           ;initializer for _TRIS_REG
    99   001A4A  92                 	db	146
   100   001A4B  0F                 	db	15
   101   001A4C  93                 	db	147
   102   001A4D  0F                 	db	15
   103   001A4E  94                 	db	148
   104   001A4F  0F                 	db	15
   105   001A50  95                 	db	149
   106   001A51  0F                 	db	15
   107   001A52  96                 	db	150
   108   001A53  0F                 	db	15
   109                           
   110                           ;initializer for _lcd2
   111   001A54  32                 	db	50
   112   001A55  3A                 	db	58
   113   001A56  03                 	db	3
   114   001A57  0B                 	db	11
   115   001A58  13                 	db	19
   116   001A59  1B                 	db	27
   117   001A5A  23                 	db	35
   118   001A5B  2B                 	db	43
   119   001A5C  33                 	db	51
   120   001A5D  3B                 	db	59
   121                           
   122                           ;initializer for _lcd1
   123   001A5E  02                 	db	2
   124   001A5F  0A                 	db	10
   125   001A60  12                 	db	18
   126   001A61  1A                 	db	26
   127   001A62  22                 	db	34
   128   001A63  2A                 	db	42
   129                           
   130                           	psect	idataBANK0
   131   001936                     __pidataBANK0:
   132                           	callstack 0
   133                           
   134                           ;initializer for _completed_heart
   135   001936  00                 	db	0
   136   001937  00                 	db	0
   137   001938  0A                 	db	10
   138   001939  1F                 	db	31
   139   00193A  0E                 	db	14
   140   00193B  04                 	db	4
   141   00193C  00                 	db	0
   142   00193D  00                 	db	0
   143                           
   144                           ;initializer for _right_half
   145   00193E  00                 	db	0
   146   00193F  00                 	db	0
   147   001940  08                 	db	8
   148   001941  1C                 	db	28
   149   001942  18                 	db	24
   150   001943  10                 	db	16
   151   001944  00                 	db	0
   152   001945  00                 	db	0
   153                           
   154                           ;initializer for _left_half
   155   001946  00                 	db	0
   156   001947  00                 	db	0
   157   001948  02                 	db	2
   158   001949  07                 	db	7
   159   00194A  03                 	db	3
   160   00194B  01                 	db	1
   161   00194C  00                 	db	0
   162   00194D  00                 	db	0
   163                           
   164                           ;initializer for _low_battery_100
   165   00194E  0E                 	db	14
   166   00194F  1F                 	db	31
   167   001950  1F                 	db	31
   168   001951  1F                 	db	31
   169   001952  1F                 	db	31
   170   001953  1F                 	db	31
   171   001954  1F                 	db	31
   172   001955  1F                 	db	31
   173                           
   174                           ;initializer for _low_battery_80
   175   001956  0E                 	db	14
   176   001957  1F                 	db	31
   177   001958  11                 	db	17
   178   001959  1F                 	db	31
   179   00195A  1F                 	db	31
   180   00195B  1F                 	db	31
   181   00195C  1F                 	db	31
   182   00195D  1F                 	db	31
   183                           
   184                           ;initializer for _low_battery_60
   185   00195E  0E                 	db	14
   186   00195F  1F                 	db	31
   187   001960  11                 	db	17
   188   001961  11                 	db	17
   189   001962  1F                 	db	31
   190   001963  1F                 	db	31
   191   001964  1F                 	db	31
   192   001965  1F                 	db	31
   193                           
   194                           ;initializer for _low_battery_40
   195   001966  0E                 	db	14
   196   001967  1F                 	db	31
   197   001968  11                 	db	17
   198   001969  11                 	db	17
   199   00196A  11                 	db	17
   200   00196B  1F                 	db	31
   201   00196C  1F                 	db	31
   202   00196D  1F                 	db	31
   203                           
   204                           ;initializer for _low_battery_20
   205   00196E  0E                 	db	14
   206   00196F  1F                 	db	31
   207   001970  11                 	db	17
   208   001971  11                 	db	17
   209   001972  11                 	db	17
   210   001973  11                 	db	17
   211   001974  1F                 	db	31
   212   001975  1F                 	db	31
   213                           
   214                           ;initializer for _low_battery_00
   215   001976  0E                 	db	14
   216   001977  1F                 	db	31
   217   001978  11                 	db	17
   218   001979  11                 	db	17
   219   00197A  11                 	db	17
   220   00197B  11                 	db	17
   221   00197C  1F                 	db	31
   222   00197D  1F                 	db	31
   223                           
   224                           	psect	smallconst
   225   001000                     __psmallconst:
   226                           	callstack 0
   227   001000  00                 	db	0
   228   001001                     _KEYPAD_VALUES:
   229                           	callstack 0
   230   001001  37                 	db	55
   231   001002  38                 	db	56
   232   001003  39                 	db	57
   233   001004  2F                 	db	47
   234   001005  34                 	db	52
   235   001006  35                 	db	53
   236   001007  36                 	db	54
   237   001008  2A                 	db	42
   238   001009  31                 	db	49
   239   00100A  32                 	db	50
   240   00100B  33                 	db	51
   241   00100C  2D                 	db	45
   242   00100D  43                 	db	67
   243   00100E  30                 	db	48
   244   00100F  3D                 	db	61
   245   001010  2B                 	db	43
   246   001011                     __end_of_KEYPAD_VALUES:
   247                           	callstack 0
   248   001011                     STR_2:
   249   001011  20                 	db	32
   250   001012  20                 	db	32
   251   001013  20                 	db	32
   252   001014  20                 	db	32
   253   001015  20                 	db	32
   254   001016  20                 	db	32
   255   001017  20                 	db	32
   256   001018  20                 	db	32
   257   001019  20                 	db	32
   258   00101A  20                 	db	32
   259   00101B  20                 	db	32
   260   00101C  20                 	db	32
   261   00101D  20                 	db	32
   262   00101E  20                 	db	32
   263   00101F  20                 	db	32
   264   001020  20                 	db	32
   265   001021  20                 	db	32
   266   001022  20                 	db	32
   267   001023  20                 	db	32
   268   001024  20                 	db	32
   269   001025  00                 	db	0
   270   001026  45                 	db	69	;'E'
   271   001027  6D                 	db	109	;'m'
   272   001028  62                 	db	98	;'b'
   273   001029  65                 	db	101	;'e'
   274   00102A  64                 	db	100	;'d'
   275   00102B  64                 	db	100	;'d'
   276   00102C  65                 	db	101	;'e'
   277   00102D  64                 	db	100	;'d'
   278   00102E  5F                 	db	95	;'_'
   279   00102F  44                 	db	68	;'D'
   280   001030  69                 	db	105	;'i'
   281   001031  70                 	db	112	;'p'
   282   001032  6C                 	db	108	;'l'
   283   001033  6F                 	db	111	;'o'
   284   001034  6D                 	db	109	;'m'
   285   001035  61                 	db	97	;'a'
   286   001036  00                 	db	0
   287   001037                     STR_1:
   288   001037  48                 	db	72	;'H'
   289   001038  45                 	db	69	;'E'
   290   001039  4C                 	db	76	;'L'
   291   00103A  4C                 	db	76	;'L'
   292   00103B  4F                 	db	79	;'O'
   293   00103C  5F                 	db	95	;'_'
   294   00103D  41                 	db	65	;'A'
   295   00103E  4C                 	db	76	;'L'
   296   00103F  4C                 	db	76	;'L'
   297   001040  00                 	db	0
   298   001041  4C                 	db	76	;'L'
   299   001042  6F                 	db	111	;'o'
   300   001043  61                 	db	97	;'a'
   301   001044  64                 	db	100	;'d'
   302   001045  69                 	db	105	;'i'
   303   001046  6E                 	db	110	;'n'
   304   001047  67                 	db	103	;'g'
   305   001048  00                 	db	0
   306   001049                     STR_8:
   307   001049  25                 	db	37
   308   00104A  69                 	db	105	;'i'
   309   00104B  00                 	db	0
   310   00104C  00                 	db	0	; dummy byte at the end
   311   000000                     
   312                           	psect	nvCOMRAM
   313   000059                     __pnvCOMRAM:
   314                           	callstack 0
   315   000059                     _Ret:
   316                           	callstack 0
   317   000059                     	ds	1
   318   000000                     _PORTA	set	3968
   319   000000                     _TRISA	set	3986
   320   000000                     _TRISE	set	3990
   321   000000                     _TRISD	set	3989
   322   000000                     _TRISC	set	3988
   323   000000                     _TRISB	set	3987
   324   000000                     _LATA	set	3977
   325   000000                     _PORTE	set	3972
   326   000000                     _PORTD	set	3971
   327   000000                     _PORTC	set	3970
   328   000000                     _PORTB	set	3969
   329   000000                     _LATE	set	3981
   330   000000                     _LATD	set	3980
   331   000000                     _LATC	set	3979
   332   000000                     _LATB	set	3978
   333                           
   334                           ; #config settings
   335                           
   336                           	psect	cinit
   337   0018E0                     __pcinit:
   338                           	callstack 0
   339   0018E0                     start_initialization:
   340                           	callstack 0
   341   0018E0                     __initialization:
   342                           	callstack 0
   343                           
   344                           ; Initialize objects allocated to BANK0 (72 bytes)
   345                           ; load TBLPTR registers with __pidataBANK0
   346   0018E0  0E36               	movlw	low __pidataBANK0
   347   0018E2  6EF6               	movwf	tblptrl,c
   348   0018E4  0E19               	movlw	high __pidataBANK0
   349   0018E6  6EF7               	movwf	tblptrh,c
   350   0018E8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   351   0018EA  6EF8               	movwf	tblptru,c
   352   0018EC  EE00  F060         	lfsr	0,__pdataBANK0
   353   0018F0  EE10 F048          	lfsr	1,72
   354   0018F4                     copy_data0:
   355   0018F4  0009               	tblrd		*+
   356   0018F6  CFF5 FFEE          	movff	tablat,postinc0
   357   0018FA  50E5               	movf	postdec1,w,c
   358   0018FC  50E1               	movf	fsr1l,w,c
   359   0018FE  E1FA               	bnz	copy_data0
   360                           
   361                           ; Initialize objects allocated to COMRAM (46 bytes)
   362                           ; load TBLPTR registers with __pidataCOMRAM
   363   001900  0E36               	movlw	low __pidataCOMRAM
   364   001902  6EF6               	movwf	tblptrl,c
   365   001904  0E1A               	movlw	high __pidataCOMRAM
   366   001906  6EF7               	movwf	tblptrh,c
   367   001908  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   368   00190A  6EF8               	movwf	tblptru,c
   369   00190C  EE00  F001         	lfsr	0,__pdataCOMRAM
   370   001910  EE10 F02E          	lfsr	1,46
   371   001914                     copy_data1:
   372   001914  0009               	tblrd		*+
   373   001916  CFF5 FFEE          	movff	tablat,postinc0
   374   00191A  50E5               	movf	postdec1,w,c
   375   00191C  50E1               	movf	fsr1l,w,c
   376   00191E  E1FA               	bnz	copy_data1
   377                           
   378                           ; Clear objects allocated to COMRAM (7 bytes)
   379   001920  EE00  F052         	lfsr	0,__pbssCOMRAM
   380   001924  0E07               	movlw	7
   381   001926                     clear_0:
   382   001926  6AEE               	clrf	postinc0,c
   383   001928  06E8               	decf	wreg,f,c
   384   00192A  E1FD               	bnz	clear_0
   385   00192C                     end_of_initialization:
   386                           	callstack 0
   387   00192C                     __end_of__initialization:
   388                           	callstack 0
   389   00192C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   390   00192E  6EF8               	movwf	tblptru,c
   391   001930  0100               	movlb	0
   392   001932  EF27  F008         	goto	_main	;jump to C main() function
   393                           
   394                           	psect	bssCOMRAM
   395   000052                     __pbssCOMRAM:
   396                           	callstack 0
   397   000052                     RELAY_TURN_OFF@F3749:
   398                           	callstack 0
   399   000052                     	ds	1
   400   000053                     RELAY_TURN_ON@F3743:
   401                           	callstack 0
   402   000053                     	ds	1
   403   000054                     RELAY_INITIALIZE@F3737:
   404                           	callstack 0
   405   000054                     	ds	1
   406   000055                     LED_TOGGLE@F3754:
   407                           	callstack 0
   408   000055                     	ds	1
   409   000056                     LED_Turn_OFF@F3749:
   410                           	callstack 0
   411   000056                     	ds	1
   412   000057                     LED_Turn_ON@F3744:
   413                           	callstack 0
   414   000057                     	ds	1
   415   000058                     LED_INITIALIZE@F3739:
   416                           	callstack 0
   417   000058                     	ds	1
   418                           
   419                           	psect	dataCOMRAM
   420   000001                     __pdataCOMRAM:
   421                           	callstack 0
   422   000001                     _LAT_REG:
   423                           	callstack 0
   424   000001                     	ds	10
   425   00000B                     _PORT_REG:
   426                           	callstack 0
   427   00000B                     	ds	10
   428   000015                     _TRIS_REG:
   429                           	callstack 0
   430   000015                     	ds	10
   431   00001F                     _lcd2:
   432                           	callstack 0
   433   00001F                     	ds	10
   434   000029                     _lcd1:
   435                           	callstack 0
   436   000029                     	ds	6
   437                           
   438                           	psect	dataBANK0
   439   000060                     __pdataBANK0:
   440                           	callstack 0
   441   000060                     _completed_heart:
   442                           	callstack 0
   443   000060                     	ds	8
   444   000068                     _right_half:
   445                           	callstack 0
   446   000068                     	ds	8
   447   000070                     _left_half:
   448                           	callstack 0
   449   000070                     	ds	8
   450   000078                     _low_battery_100:
   451                           	callstack 0
   452   000078                     	ds	8
   453   000080                     _low_battery_80:
   454                           	callstack 0
   455   000080                     	ds	8
   456   000088                     _low_battery_60:
   457                           	callstack 0
   458   000088                     	ds	8
   459   000090                     _low_battery_40:
   460                           	callstack 0
   461   000090                     	ds	8
   462   000098                     _low_battery_20:
   463                           	callstack 0
   464   000098                     	ds	8
   465   0000A0                     _low_battery_00:
   466                           	callstack 0
   467   0000A0                     	ds	8
   468                           
   469                           	psect	cstackCOMRAM
   470   00002F                     __pcstackCOMRAM:
   471                           	callstack 0
   472   00002F                     GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG:
   473                           	callstack 0
   474   00002F                     GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x0
   478   00002F                     	ds	1
   479   000030                     ??_GPIO_PIN_DIRECTION_INITIALIZE:
   480   000030                     GPIO_PIN_WRITE_LOGIC@LOGIC:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0x1
   484   000030                     	ds	1
   485   000031                     ??_GPIO_PIN_WRITE_LOGIC:
   486                           
   487                           ; 1 bytes @ 0x2
   488   000031                     	ds	4
   489   000035                     GPIO_PIN_DIRECTION_INITIALIZE@Retval:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0x6
   493   000035                     	ds	1
   494   000036                     GPIO_PIN_WRITE_LOGIC@Retval:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0x7
   498   000036                     	ds	1
   499   000037                     GPIO_PIN_INITIALIZE@_PIN_CONFIG:
   500                           	callstack 0
   501   000037                     lcd_send_4bits@lcd:
   502                           	callstack 0
   503   000037                     lcd_4bit_send_enable_signal@lcd:
   504                           	callstack 0
   505   000037                     lcd_8bit_send_enable_signal@lcd:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0x8
   509   000037                     	ds	1
   510   000038                     ??_GPIO_PIN_INITIALIZE:
   511   000038                     lcd_send_4bits@_data_command:
   512                           	callstack 0
   513   000038                     lcd_4bit_send_enable_signal@Retval:
   514                           	callstack 0
   515   000038                     lcd_8bit_send_enable_signal@Retval:
   516                           	callstack 0
   517                           
   518                           ; 1 bytes @ 0x9
   519   000038                     	ds	1
   520   000039                     ??_lcd_send_4bits:
   521   000039                     GPIO_PIN_INITIALIZE@Retval:
   522                           	callstack 0
   523   000039                     LCD_8BIT_SEND_COMMAND@lcd:
   524                           	callstack 0
   525   000039                     LCD_8BIT_SEND_CHARACTER_DATA@lcd:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0xA
   529   000039                     	ds	1
   530   00003A                     LCD_8BIT_SEND_COMMAND@command:
   531                           	callstack 0
   532   00003A                     LCD_8BIT_SEND_CHARACTER_DATA@data:
   533                           	callstack 0
   534                           
   535                           ; 1 bytes @ 0xB
   536   00003A                     	ds	1
   537   00003B                     ??_LCD_8BIT_SEND_COMMAND:
   538   00003B                     ??_LCD_8BIT_SEND_CHARACTER_DATA:
   539   00003B                     lcd_send_4bits@Retval:
   540                           	callstack 0
   541                           
   542                           ; 1 bytes @ 0xC
   543   00003B                     	ds	1
   544   00003C                     lcd_send_4bits@i:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0xD
   548   00003C                     	ds	1
   549   00003D                     LCD_8BIT_SEND_COMMAND@Retval:
   550                           	callstack 0
   551   00003D                     LCD_8BIT_SEND_CHARACTER_DATA@Retval:
   552                           	callstack 0
   553                           
   554                           ; 1 bytes @ 0xE
   555   00003D                     	ds	1
   556   00003E                     LCD_4BIT_SEND_COMMAND@lcd:
   557                           	callstack 0
   558   00003E                     LCD_8BIT_SEND_COMMAND@i:
   559                           	callstack 0
   560   00003E                     LCD_8BIT_SEND_CHARACTER_DATA@i:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0xF
   564   00003E                     	ds	1
   565   00003F                     LCD_4BIT_SEND_COMMAND@command:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x10
   569   00003F                     	ds	1
   570   000040                     lcd_8bit_set_cursor@lcd:
   571                           	callstack 0
   572   000040                     LCD_4BIT_SEND_COMMAND@Retval:
   573                           	callstack 0
   574   000040                     LCD_8BIT_INITIALIZE@lcd:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x11
   578   000040                     	ds	1
   579   000041                     ??_LCD_8BIT_INITIALIZE:
   580   000041                     lcd_8bit_set_cursor@row:
   581                           	callstack 0
   582   000041                     LCD_4BIT_INITIALIZE@lcd:
   583                           	callstack 0
   584                           
   585                           ; 1 bytes @ 0x12
   586   000041                     	ds	1
   587   000042                     ??_LCD_4BIT_INITIALIZE:
   588   000042                     lcd_8bit_set_cursor@column:
   589                           	callstack 0
   590   000042                     LCD_8BIT_INITIALIZE@i:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x13
   594   000042                     	ds	1
   595   000043                     lcd_8bit_set_cursor@Retval:
   596                           	callstack 0
   597   000043                     LCD_4BIT_INITIALIZE@i:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x14
   601   000043                     	ds	1
   602   000044                     LCD_8BIT_INITIALIZE@Retval:
   603                           	callstack 0
   604   000044                     LCD_8BIT_SEND_CHARACTER_DATA_POS@lcd:
   605                           	callstack 0
   606                           
   607                           ; 1 bytes @ 0x15
   608   000044                     	ds	1
   609   000045                     LCD_4BIT_INITIALIZE@Retval:
   610                           	callstack 0
   611   000045                     LCD_8BIT_SEND_CHARACTER_DATA_POS@row:
   612                           	callstack 0
   613                           
   614                           ; 1 bytes @ 0x16
   615   000045                     	ds	1
   616   000046                     LCD_8BIT_SEND_CHARACTER_DATA_POS@column:
   617                           	callstack 0
   618                           
   619                           ; 1 bytes @ 0x17
   620   000046                     	ds	1
   621   000047                     LCD_8BIT_SEND_CHARACTER_DATA_POS@data:
   622                           	callstack 0
   623                           
   624                           ; 1 bytes @ 0x18
   625   000047                     	ds	1
   626   000048                     LCD_8BIT_SEND_CHARACTER_DATA_POS@Retval:
   627                           	callstack 0
   628                           
   629                           ; 1 bytes @ 0x19
   630   000048                     	ds	1
   631   000049                     LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd:
   632                           	callstack 0
   633                           
   634                           ; 1 bytes @ 0x1A
   635   000049                     	ds	1
   636   00004A                     LCD_8BIT_SEND_CUSTOM_CHARACTER@row:
   637                           	callstack 0
   638                           
   639                           ; 1 bytes @ 0x1B
   640   00004A                     	ds	1
   641   00004B                     LCD_8BIT_SEND_CUSTOM_CHARACTER@column:
   642                           	callstack 0
   643                           
   644                           ; 1 bytes @ 0x1C
   645   00004B                     	ds	1
   646   00004C                     LCD_8BIT_SEND_CUSTOM_CHARACTER@chr:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0x1D
   650   00004C                     	ds	1
   651   00004D                     LCD_8BIT_SEND_CUSTOM_CHARACTER@mem_pos:
   652                           	callstack 0
   653                           
   654                           ; 1 bytes @ 0x1E
   655   00004D                     	ds	1
   656   00004E                     LCD_8BIT_SEND_CUSTOM_CHARACTER@Retval:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x1F
   660   00004E                     	ds	1
   661   00004F                     LCD_8BIT_SEND_CUSTOM_CHARACTER@i:
   662                           	callstack 0
   663                           
   664                           ; 1 bytes @ 0x20
   665   00004F                     	ds	1
   666   000050                     ??_main:
   667                           
   668                           ; 1 bytes @ 0x21
   669   000050                     	ds	2
   670                           
   671 ;;
   672 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   673 ;;
   674 ;; *************** function _main *****************
   675 ;; Defined at:
   676 ;;		line 27 in file "Drivers_Main.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;		None
   681 ;; Return value:  Size  Location     Type
   682 ;;                  2  335[None  ] int 
   683 ;; Registers used:
   684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   692 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   693 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;Total ram usage:        2 bytes
   695 ;; Hardware stack levels required when called: 6
   696 ;; This function calls:
   697 ;;		_Application_intialize
   698 ;;		_LCD_8BIT_SEND_CUSTOM_CHARACTER
   699 ;; This function is called by:
   700 ;;		Startup code after reset
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           	psect	text0
   705   00104E                     __ptext0:
   706                           	callstack 0
   707   00104E                     _main:
   708                           	callstack 25
   709   00104E                     
   710                           ;Drivers_Main.c: 28:     Application_intialize();
   711   00104E  EC3B  F00D         	call	_Application_intialize	;wreg free
   712   001052                     l336:
   713                           
   714                           ;Drivers_Main.c: 38:         Ret = LCD_8BIT_SEND_CUSTOM_CHARACTER(&lcd2 , 1 , 1 , low_ba
      +                          ttery_00 , 0x00 );
   715   001052  0E1F               	movlw	low _lcd2
   716   001054  6E49               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd^0,c
   717   001056  0E01               	movlw	1
   718   001058  6E4A               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@row^0,c
   719   00105A  0E01               	movlw	1
   720   00105C  6E4B               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@column^0,c
   721   00105E  0EA0               	movlw	low _low_battery_00
   722   001060  6E4C               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@chr^0,c
   723   001062  0E00               	movlw	0
   724   001064  6E4D               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@mem_pos^0,c
   725   001066  ECDC  F00B         	call	_LCD_8BIT_SEND_CUSTOM_CHARACTER	;wreg free
   726   00106A  6E59               	movwf	_Ret^0,c
   727   00106C                     
   728                           ;Drivers_Main.c: 39:         _delay((unsigned long)((500)*(8000000UL/4000.0)));
   729   00106C  0E06               	movlw	6
   730   00106E  6E51               	movwf	(??_main+1)^0,c
   731   001070  0E13               	movlw	19
   732   001072  6E50               	movwf	??_main^0,c
   733   001074  0EAE               	movlw	174
   734   001076                     u2007:
   735   001076  2EE8               	decfsz	wreg,f,c
   736   001078  D7FE               	bra	u2007
   737   00107A  2E50               	decfsz	??_main^0,f,c
   738   00107C  D7FC               	bra	u2007
   739   00107E  2E51               	decfsz	(??_main+1)^0,f,c
   740   001080  D7FA               	bra	u2007
   741   001082                     
   742                           ;Drivers_Main.c: 40:         Ret = LCD_8BIT_SEND_CUSTOM_CHARACTER(&lcd2 , 1 , 1 , low_ba
      +                          ttery_20 , 0x01 );
   743   001082  0E1F               	movlw	low _lcd2
   744   001084  6E49               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd^0,c
   745   001086  0E01               	movlw	1
   746   001088  6E4A               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@row^0,c
   747   00108A  0E01               	movlw	1
   748   00108C  6E4B               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@column^0,c
   749   00108E  0E98               	movlw	low _low_battery_20
   750   001090  6E4C               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@chr^0,c
   751   001092  0E01               	movlw	1
   752   001094  6E4D               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@mem_pos^0,c
   753   001096  ECDC  F00B         	call	_LCD_8BIT_SEND_CUSTOM_CHARACTER	;wreg free
   754   00109A  6E59               	movwf	_Ret^0,c
   755                           
   756                           ;Drivers_Main.c: 41:         _delay((unsigned long)((500)*(8000000UL/4000.0)));
   757   00109C  0E06               	movlw	6
   758   00109E  6E51               	movwf	(??_main+1)^0,c
   759   0010A0  0E13               	movlw	19
   760   0010A2  6E50               	movwf	??_main^0,c
   761   0010A4  0EAE               	movlw	174
   762   0010A6                     u2017:
   763   0010A6  2EE8               	decfsz	wreg,f,c
   764   0010A8  D7FE               	bra	u2017
   765   0010AA  2E50               	decfsz	??_main^0,f,c
   766   0010AC  D7FC               	bra	u2017
   767   0010AE  2E51               	decfsz	(??_main+1)^0,f,c
   768   0010B0  D7FA               	bra	u2017
   769   0010B2                     
   770                           ;Drivers_Main.c: 42:         Ret = LCD_8BIT_SEND_CUSTOM_CHARACTER(&lcd2 , 1 , 1 , low_ba
      +                          ttery_40 , 0x02 );
   771   0010B2  0E1F               	movlw	low _lcd2
   772   0010B4  6E49               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd^0,c
   773   0010B6  0E01               	movlw	1
   774   0010B8  6E4A               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@row^0,c
   775   0010BA  0E01               	movlw	1
   776   0010BC  6E4B               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@column^0,c
   777   0010BE  0E90               	movlw	low _low_battery_40
   778   0010C0  6E4C               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@chr^0,c
   779   0010C2  0E02               	movlw	2
   780   0010C4  6E4D               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@mem_pos^0,c
   781   0010C6  ECDC  F00B         	call	_LCD_8BIT_SEND_CUSTOM_CHARACTER	;wreg free
   782   0010CA  6E59               	movwf	_Ret^0,c
   783   0010CC                     
   784                           ;Drivers_Main.c: 43:         _delay((unsigned long)((500)*(8000000UL/4000.0)));
   785   0010CC  0E06               	movlw	6
   786   0010CE  6E51               	movwf	(??_main+1)^0,c
   787   0010D0  0E13               	movlw	19
   788   0010D2  6E50               	movwf	??_main^0,c
   789   0010D4  0EAE               	movlw	174
   790   0010D6                     u2027:
   791   0010D6  2EE8               	decfsz	wreg,f,c
   792   0010D8  D7FE               	bra	u2027
   793   0010DA  2E50               	decfsz	??_main^0,f,c
   794   0010DC  D7FC               	bra	u2027
   795   0010DE  2E51               	decfsz	(??_main+1)^0,f,c
   796   0010E0  D7FA               	bra	u2027
   797                           
   798                           ;Drivers_Main.c: 44:         Ret = LCD_8BIT_SEND_CUSTOM_CHARACTER(&lcd2 , 1 , 1 , low_ba
      +                          ttery_60 , 0x03 );
   799   0010E2  0E1F               	movlw	low _lcd2
   800   0010E4  6E49               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd^0,c
   801   0010E6  0E01               	movlw	1
   802   0010E8  6E4A               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@row^0,c
   803   0010EA  0E01               	movlw	1
   804   0010EC  6E4B               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@column^0,c
   805   0010EE  0E88               	movlw	low _low_battery_60
   806   0010F0  6E4C               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@chr^0,c
   807   0010F2  0E03               	movlw	3
   808   0010F4  6E4D               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@mem_pos^0,c
   809   0010F6  ECDC  F00B         	call	_LCD_8BIT_SEND_CUSTOM_CHARACTER	;wreg free
   810   0010FA  6E59               	movwf	_Ret^0,c
   811   0010FC                     
   812                           ;Drivers_Main.c: 45:         _delay((unsigned long)((500)*(8000000UL/4000.0)));
   813   0010FC  0E06               	movlw	6
   814   0010FE  6E51               	movwf	(??_main+1)^0,c
   815   001100  0E13               	movlw	19
   816   001102  6E50               	movwf	??_main^0,c
   817   001104  0EAE               	movlw	174
   818   001106                     u2037:
   819   001106  2EE8               	decfsz	wreg,f,c
   820   001108  D7FE               	bra	u2037
   821   00110A  2E50               	decfsz	??_main^0,f,c
   822   00110C  D7FC               	bra	u2037
   823   00110E  2E51               	decfsz	(??_main+1)^0,f,c
   824   001110  D7FA               	bra	u2037
   825   001112                     
   826                           ;Drivers_Main.c: 46:         Ret = LCD_8BIT_SEND_CUSTOM_CHARACTER(&lcd2 , 1 , 1 , low_ba
      +                          ttery_80 , 0x04 );
   827   001112  0E1F               	movlw	low _lcd2
   828   001114  6E49               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd^0,c
   829   001116  0E01               	movlw	1
   830   001118  6E4A               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@row^0,c
   831   00111A  0E01               	movlw	1
   832   00111C  6E4B               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@column^0,c
   833   00111E  0E80               	movlw	low _low_battery_80
   834   001120  6E4C               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@chr^0,c
   835   001122  0E04               	movlw	4
   836   001124  6E4D               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@mem_pos^0,c
   837   001126  ECDC  F00B         	call	_LCD_8BIT_SEND_CUSTOM_CHARACTER	;wreg free
   838   00112A  6E59               	movwf	_Ret^0,c
   839                           
   840                           ;Drivers_Main.c: 47:         _delay((unsigned long)((500)*(8000000UL/4000.0)));
   841   00112C  0E06               	movlw	6
   842   00112E  6E51               	movwf	(??_main+1)^0,c
   843   001130  0E13               	movlw	19
   844   001132  6E50               	movwf	??_main^0,c
   845   001134  0EAE               	movlw	174
   846   001136                     u2047:
   847   001136  2EE8               	decfsz	wreg,f,c
   848   001138  D7FE               	bra	u2047
   849   00113A  2E50               	decfsz	??_main^0,f,c
   850   00113C  D7FC               	bra	u2047
   851   00113E  2E51               	decfsz	(??_main+1)^0,f,c
   852   001140  D7FA               	bra	u2047
   853   001142                     
   854                           ;Drivers_Main.c: 48:         Ret = LCD_8BIT_SEND_CUSTOM_CHARACTER(&lcd2 , 1 , 1 , low_ba
      +                          ttery_100 , 0x05 );
   855   001142  0E1F               	movlw	low _lcd2
   856   001144  6E49               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd^0,c
   857   001146  0E01               	movlw	1
   858   001148  6E4A               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@row^0,c
   859   00114A  0E01               	movlw	1
   860   00114C  6E4B               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@column^0,c
   861   00114E  0E78               	movlw	low _low_battery_100
   862   001150  6E4C               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@chr^0,c
   863   001152  0E05               	movlw	5
   864   001154  6E4D               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@mem_pos^0,c
   865   001156  ECDC  F00B         	call	_LCD_8BIT_SEND_CUSTOM_CHARACTER	;wreg free
   866   00115A  6E59               	movwf	_Ret^0,c
   867   00115C                     
   868                           ;Drivers_Main.c: 49:         _delay((unsigned long)((500)*(8000000UL/4000.0)));
   869   00115C  0E06               	movlw	6
   870   00115E  6E51               	movwf	(??_main+1)^0,c
   871   001160  0E13               	movlw	19
   872   001162  6E50               	movwf	??_main^0,c
   873   001164  0EAE               	movlw	174
   874   001166                     u2057:
   875   001166  2EE8               	decfsz	wreg,f,c
   876   001168  D7FE               	bra	u2057
   877   00116A  2E50               	decfsz	??_main^0,f,c
   878   00116C  D7FC               	bra	u2057
   879   00116E  2E51               	decfsz	(??_main+1)^0,f,c
   880   001170  D7FA               	bra	u2057
   881   001172  EF29  F008         	goto	l336
   882   001176  EF02  F000         	goto	start
   883   00117A                     __end_of_main:
   884                           	callstack 0
   885                           
   886 ;; *************** function _LCD_8BIT_SEND_CUSTOM_CHARACTER *****************
   887 ;; Defined at:
   888 ;;		line 326 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;  lcd             1   26[COMRAM] PTR const struct .
   891 ;;		 -> lcd2(10), 
   892 ;;  row             1   27[COMRAM] unsigned char 
   893 ;;  column          1   28[COMRAM] unsigned char 
   894 ;;  chr             1   29[COMRAM] PTR unsigned char 
   895 ;;		 -> low_battery_100(8), low_battery_80(8), low_battery_60(8), low_battery_40(8), 
   896 ;;		 -> low_battery_20(8), low_battery_00(8), 
   897 ;;  mem_pos         1   30[COMRAM] unsigned char 
   898 ;; Auto vars:     Size  Location     Type
   899 ;;  i               1   32[COMRAM] unsigned char 
   900 ;;  Retval          1   31[COMRAM] enum E3654
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      enum E3654
   903 ;; Registers used:
   904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   910 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   911 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   913 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   914 ;;Total ram usage:        7 bytes
   915 ;; Hardware stack levels used: 1
   916 ;; Hardware stack levels required when called: 5
   917 ;; This function calls:
   918 ;;		_LCD_8BIT_SEND_CHARACTER_DATA
   919 ;;		_LCD_8BIT_SEND_CHARACTER_DATA_POS
   920 ;;		_LCD_8BIT_SEND_COMMAND
   921 ;; This function is called by:
   922 ;;		_main
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text1
   927   0017B8                     __ptext1:
   928                           	callstack 0
   929   0017B8                     _LCD_8BIT_SEND_CUSTOM_CHARACTER:
   930                           	callstack 25
   931   0017B8                     
   932                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 328:     if(((void*)0) == lcd){
   933   0017B8  5049               	movf	LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd^0,w,c
   934   0017BA  A4D8               	btfss	status,2,c
   935   0017BC  EFE2  F00B         	goto	u1461
   936   0017C0  EFE4  F00B         	goto	u1460
   937   0017C4                     u1461:
   938   0017C4  EFE8  F00B         	goto	l2569
   939   0017C8                     u1460:
   940   0017C8                     
   941                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 329:         Retval = E_NOT_OK;
   942   0017C8  0E00               	movlw	0
   943   0017CA  6E4E               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@Retval^0,c
   944                           
   945                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 330:     }
   946   0017CC  EF11  F00C         	goto	l2585
   947   0017D0                     l2569:
   948   0017D0  C049  F039         	movff	LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd,LCD_8BIT_SEND_COMMAND@lcd
   949   0017D4  504D               	movf	LCD_8BIT_SEND_CUSTOM_CHARACTER@mem_pos^0,w,c
   950   0017D6  0D08               	mullw	8
   951   0017D8  50F3               	movf	243,w,c
   952   0017DA  0F40               	addlw	64
   953   0017DC  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
   954   0017DE  EC62  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
   955   0017E2                     
   956                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 333:         for(uint8 i = 0 ; i < 8 ; i++){
   957   0017E2  0E00               	movlw	0
   958   0017E4  6E4F               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@i^0,c
   959   0017E6                     l2577:
   960   0017E6  C049  F039         	movff	LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd,LCD_8BIT_SEND_CHARACTER_DATA@lcd
   961   0017EA  504C               	movf	LCD_8BIT_SEND_CUSTOM_CHARACTER@chr^0,w,c
   962   0017EC  244F               	addwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@i^0,w,c
   963   0017EE  6ED9               	movwf	fsr2l,c
   964   0017F0  6ADA               	clrf	fsr2h,c
   965   0017F2  50DF               	movf	indf2,w,c
   966   0017F4  6E3A               	movwf	LCD_8BIT_SEND_CHARACTER_DATA@data^0,c
   967   0017F6  EC20  F00B         	call	_LCD_8BIT_SEND_CHARACTER_DATA	;wreg free
   968   0017FA                     
   969                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 335:         }
   970   0017FA  2A4F               	incf	LCD_8BIT_SEND_CUSTOM_CHARACTER@i^0,f,c
   971   0017FC  0E07               	movlw	7
   972   0017FE  644F               	cpfsgt	LCD_8BIT_SEND_CUSTOM_CHARACTER@i^0,c
   973   001800  EF04  F00C         	goto	u1471
   974   001804  EF06  F00C         	goto	u1470
   975   001808                     u1471:
   976   001808  EFF3  F00B         	goto	l2577
   977   00180C                     u1470:
   978   00180C                     
   979                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 336:         Retval = LCD_8BIT_SEND_CHARACTER_DATA_POS(lcd
      +                           , row , column , mem_pos);
   980   00180C  C049  F044         	movff	LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd,LCD_8BIT_SEND_CHARACTER_DATA_POS@lcd
   981   001810  C04A  F045         	movff	LCD_8BIT_SEND_CUSTOM_CHARACTER@row,LCD_8BIT_SEND_CHARACTER_DATA_POS@row
   982   001814  C04B  F046         	movff	LCD_8BIT_SEND_CUSTOM_CHARACTER@column,LCD_8BIT_SEND_CHARACTER_DATA_POS@column
   983   001818  C04D  F047         	movff	LCD_8BIT_SEND_CUSTOM_CHARACTER@mem_pos,LCD_8BIT_SEND_CHARACTER_DATA_POS@data
   984   00181C  ECFD  F00C         	call	_LCD_8BIT_SEND_CHARACTER_DATA_POS	;wreg free
   985   001820  6E4E               	movwf	LCD_8BIT_SEND_CUSTOM_CHARACTER@Retval^0,c
   986   001822                     l2585:
   987                           
   988                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 338:     return Retval;
   989   001822  504E               	movf	LCD_8BIT_SEND_CUSTOM_CHARACTER@Retval^0,w,c
   990   001824  0012               	return		;funcret
   991   001826                     __end_of_LCD_8BIT_SEND_CUSTOM_CHARACTER:
   992                           	callstack 0
   993                           
   994 ;; *************** function _LCD_8BIT_SEND_CHARACTER_DATA_POS *****************
   995 ;; Defined at:
   996 ;;		line 286 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;  lcd             1   21[COMRAM] PTR const struct .
   999 ;;		 -> lcd2(10), 
  1000 ;;  row             1   22[COMRAM] unsigned char 
  1001 ;;  column          1   23[COMRAM] unsigned char 
  1002 ;;  data            1   24[COMRAM] unsigned char 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;  Retval          1   25[COMRAM] enum E3654
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      enum E3654
  1007 ;; Registers used:
  1008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1014 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;Total ram usage:        5 bytes
  1019 ;; Hardware stack levels used: 1
  1020 ;; Hardware stack levels required when called: 4
  1021 ;; This function calls:
  1022 ;;		_LCD_8BIT_SEND_CHARACTER_DATA
  1023 ;;		_lcd_8bit_set_cursor
  1024 ;; This function is called by:
  1025 ;;		_LCD_8BIT_SEND_CUSTOM_CHARACTER
  1026 ;;		_Loading_Screen
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           	psect	text2
  1031   0019FA                     __ptext2:
  1032                           	callstack 0
  1033   0019FA                     _LCD_8BIT_SEND_CHARACTER_DATA_POS:
  1034                           	callstack 25
  1035   0019FA                     
  1036                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 288:     if(((void*)0) == lcd){
  1037   0019FA  5044               	movf	LCD_8BIT_SEND_CHARACTER_DATA_POS@lcd^0,w,c
  1038   0019FC  A4D8               	btfss	status,2,c
  1039   0019FE  EF03  F00D         	goto	u1431
  1040   001A02  EF05  F00D         	goto	u1430
  1041   001A06                     u1431:
  1042   001A06  EF09  F00D         	goto	l2521
  1043   001A0A                     u1430:
  1044   001A0A                     
  1045                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 289:         Retval = E_NOT_OK;
  1046   001A0A  0E00               	movlw	0
  1047   001A0C  6E48               	movwf	LCD_8BIT_SEND_CHARACTER_DATA_POS@Retval^0,c
  1048                           
  1049                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 290:     }
  1050   001A0E  EF19  F00D         	goto	l2523
  1051   001A12                     l2521:
  1052                           
  1053                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 292:         Retval = lcd_8bit_set_cursor(lcd , row , colu
      +                          mn);
  1054   001A12  C044  F040         	movff	LCD_8BIT_SEND_CHARACTER_DATA_POS@lcd,lcd_8bit_set_cursor@lcd
  1055   001A16  C045  F041         	movff	LCD_8BIT_SEND_CHARACTER_DATA_POS@row,lcd_8bit_set_cursor@row
  1056   001A1A  C046  F042         	movff	LCD_8BIT_SEND_CHARACTER_DATA_POS@column,lcd_8bit_set_cursor@column
  1057   001A1E  ECCE  F00A         	call	_lcd_8bit_set_cursor	;wreg free
  1058   001A22  6E48               	movwf	LCD_8BIT_SEND_CHARACTER_DATA_POS@Retval^0,c
  1059                           
  1060                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 293:         Retval = LCD_8BIT_SEND_CHARACTER_DATA(lcd , d
      +                          ata);
  1061   001A24  C044  F039         	movff	LCD_8BIT_SEND_CHARACTER_DATA_POS@lcd,LCD_8BIT_SEND_CHARACTER_DATA@lcd
  1062   001A28  C047  F03A         	movff	LCD_8BIT_SEND_CHARACTER_DATA_POS@data,LCD_8BIT_SEND_CHARACTER_DATA@data
  1063   001A2C  EC20  F00B         	call	_LCD_8BIT_SEND_CHARACTER_DATA	;wreg free
  1064   001A30  6E48               	movwf	LCD_8BIT_SEND_CHARACTER_DATA_POS@Retval^0,c
  1065   001A32                     l2523:
  1066                           
  1067                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 295:     return Retval;
  1068   001A32  5048               	movf	LCD_8BIT_SEND_CHARACTER_DATA_POS@Retval^0,w,c
  1069   001A34  0012               	return		;funcret
  1070   001A36                     __end_of_LCD_8BIT_SEND_CHARACTER_DATA_POS:
  1071                           	callstack 0
  1072                           
  1073 ;; *************** function _lcd_8bit_set_cursor *****************
  1074 ;; Defined at:
  1075 ;;		line 78 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  lcd             1   17[COMRAM] PTR const struct .
  1078 ;;		 -> lcd2(10), 
  1079 ;;  row             1   18[COMRAM] unsigned char 
  1080 ;;  column          1   19[COMRAM] unsigned char 
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;  Retval          1   20[COMRAM] enum E3654
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      enum E3654
  1085 ;; Registers used:
  1086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1092 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;Total ram usage:        4 bytes
  1097 ;; Hardware stack levels used: 1
  1098 ;; Hardware stack levels required when called: 3
  1099 ;; This function calls:
  1100 ;;		_GPIO_PIN_WRITE_LOGIC
  1101 ;;		_LCD_8BIT_SEND_COMMAND
  1102 ;; This function is called by:
  1103 ;;		_LCD_8BIT_SEND_CHARACTER_DATA_POS
  1104 ;;		_LCD_8BIT_SEND_STRING_POS
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           	psect	text3
  1109   00159C                     __ptext3:
  1110                           	callstack 0
  1111   00159C                     _lcd_8bit_set_cursor:
  1112                           	callstack 25
  1113   00159C                     
  1114                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 80:     if(((void*)0) == lcd){
  1115   00159C  5040               	movf	lcd_8bit_set_cursor@lcd^0,w,c
  1116   00159E  A4D8               	btfss	status,2,c
  1117   0015A0  EFD4  F00A         	goto	u1391
  1118   0015A4  EFD6  F00A         	goto	u1390
  1119   0015A8                     u1391:
  1120   0015A8  EFDA  F00A         	goto	l2465
  1121   0015AC                     u1390:
  1122   0015AC                     l2463:
  1123                           
  1124                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 81:         Retval = E_NOT_OK;
  1125   0015AC  0E00               	movlw	0
  1126   0015AE  6E43               	movwf	lcd_8bit_set_cursor@Retval^0,c
  1127                           
  1128                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 82:     }
  1129   0015B0  EF1E  F00B         	goto	l2483
  1130   0015B4                     l2465:
  1131   0015B4  C040  F02F         	movff	lcd_8bit_set_cursor@lcd,GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG
  1132   0015B8  0E00               	movlw	0
  1133   0015BA  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  1134   0015BC  EC46  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  1135   0015C0                     
  1136                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 85:         column--;
  1137   0015C0  0642               	decf	lcd_8bit_set_cursor@column^0,f,c
  1138                           
  1139                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 86:         switch(row){
  1140   0015C2  EF0B  F00B         	goto	l2481
  1141   0015C6                     l2469:
  1142                           
  1143                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 88:                 Retval = LCD_8BIT_SEND_COMMAND((lcd) ,
      +                           (0x80 + column));
  1144   0015C6  C040  F039         	movff	lcd_8bit_set_cursor@lcd,LCD_8BIT_SEND_COMMAND@lcd
  1145   0015CA  5042               	movf	lcd_8bit_set_cursor@column^0,w,c
  1146   0015CC  0F80               	addlw	128
  1147   0015CE  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  1148   0015D0  EC62  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  1149   0015D4  6E43               	movwf	lcd_8bit_set_cursor@Retval^0,c
  1150                           
  1151                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 89:                 break;
  1152   0015D6  EF1E  F00B         	goto	l2483
  1153   0015DA                     l2471:
  1154                           
  1155                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 91:                 Retval = LCD_8BIT_SEND_COMMAND((lcd) ,
      +                           (0xC0 + column));
  1156   0015DA  C040  F039         	movff	lcd_8bit_set_cursor@lcd,LCD_8BIT_SEND_COMMAND@lcd
  1157   0015DE  5042               	movf	lcd_8bit_set_cursor@column^0,w,c
  1158   0015E0  0FC0               	addlw	192
  1159   0015E2  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  1160   0015E4  EC62  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  1161   0015E8  6E43               	movwf	lcd_8bit_set_cursor@Retval^0,c
  1162                           
  1163                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 92:                 break;
  1164   0015EA  EF1E  F00B         	goto	l2483
  1165   0015EE                     l2473:
  1166                           
  1167                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 94:                 Retval = LCD_8BIT_SEND_COMMAND((lcd) ,
      +                           (0x94 + column));
  1168   0015EE  C040  F039         	movff	lcd_8bit_set_cursor@lcd,LCD_8BIT_SEND_COMMAND@lcd
  1169   0015F2  5042               	movf	lcd_8bit_set_cursor@column^0,w,c
  1170   0015F4  0F94               	addlw	148
  1171   0015F6  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  1172   0015F8  EC62  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  1173   0015FC  6E43               	movwf	lcd_8bit_set_cursor@Retval^0,c
  1174                           
  1175                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 95:                 break;
  1176   0015FE  EF1E  F00B         	goto	l2483
  1177   001602                     l2475:
  1178                           
  1179                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 97:                 Retval = LCD_8BIT_SEND_COMMAND((lcd) ,
      +                           (0xD4 + column));
  1180   001602  C040  F039         	movff	lcd_8bit_set_cursor@lcd,LCD_8BIT_SEND_COMMAND@lcd
  1181   001606  5042               	movf	lcd_8bit_set_cursor@column^0,w,c
  1182   001608  0FD4               	addlw	212
  1183   00160A  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  1184   00160C  EC62  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  1185   001610  6E43               	movwf	lcd_8bit_set_cursor@Retval^0,c
  1186                           
  1187                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 98:                 break;
  1188   001612  EF1E  F00B         	goto	l2483
  1189   001616                     l2481:
  1190   001616  5041               	movf	lcd_8bit_set_cursor@row^0,w,c
  1191                           
  1192                           ; Switch size 1, requested type "simple"
  1193                           ; Number of cases is 4, Range of values is 1 to 4
  1194                           ; switch strategies available:
  1195                           ; Name         Instructions Cycles
  1196                           ; simple_byte           13     7 (average)
  1197                           ;	Chosen strategy is simple_byte
  1198   001618  0A01               	xorlw	1	; case 1
  1199   00161A  B4D8               	btfsc	status,2,c
  1200   00161C  EFE3  F00A         	goto	l2469
  1201   001620  0A03               	xorlw	3	; case 2
  1202   001622  B4D8               	btfsc	status,2,c
  1203   001624  EFED  F00A         	goto	l2471
  1204   001628  0A01               	xorlw	1	; case 3
  1205   00162A  B4D8               	btfsc	status,2,c
  1206   00162C  EFF7  F00A         	goto	l2473
  1207   001630  0A07               	xorlw	7	; case 4
  1208   001632  B4D8               	btfsc	status,2,c
  1209   001634  EF01  F00B         	goto	l2475
  1210   001638  EFD6  F00A         	goto	l2463
  1211   00163C                     l2483:
  1212                           
  1213                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 104:     return Retval;
  1214   00163C  5043               	movf	lcd_8bit_set_cursor@Retval^0,w,c
  1215   00163E  0012               	return		;funcret
  1216   001640                     __end_of_lcd_8bit_set_cursor:
  1217                           	callstack 0
  1218                           
  1219 ;; *************** function _LCD_8BIT_SEND_CHARACTER_DATA *****************
  1220 ;; Defined at:
  1221 ;;		line 271 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;  lcd             1   10[COMRAM] PTR const struct .
  1224 ;;		 -> lcd2(10), 
  1225 ;;  data            1   11[COMRAM] unsigned char 
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;  i               2   15[COMRAM] int 
  1228 ;;  Retval          1   14[COMRAM] enum E3654
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      enum E3654
  1231 ;; Registers used:
  1232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1238 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1242 ;;Total ram usage:        7 bytes
  1243 ;; Hardware stack levels used: 1
  1244 ;; Hardware stack levels required when called: 2
  1245 ;; This function calls:
  1246 ;;		_GPIO_PIN_WRITE_LOGIC
  1247 ;;		_lcd_8bit_send_enable_signal
  1248 ;; This function is called by:
  1249 ;;		_LCD_8BIT_SEND_CHARACTER_DATA_POS
  1250 ;;		_LCD_8BIT_SEND_CUSTOM_CHARACTER
  1251 ;;		_LCD_8BIT_SEND_STRING
  1252 ;;		_LCD_8BIT_SEND_STRING_POS
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text4
  1257   001640                     __ptext4:
  1258                           	callstack 0
  1259   001640                     _LCD_8BIT_SEND_CHARACTER_DATA:
  1260                           	callstack 26
  1261   001640                     
  1262                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 273:     if(((void*)0) == lcd){
  1263   001640  5039               	movf	LCD_8BIT_SEND_CHARACTER_DATA@lcd^0,w,c
  1264   001642  A4D8               	btfss	status,2,c
  1265   001644  EF26  F00B         	goto	u1401
  1266   001648  EF28  F00B         	goto	u1400
  1267   00164C                     u1401:
  1268   00164C  EF2C  F00B         	goto	l2491
  1269   001650                     u1400:
  1270   001650                     
  1271                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 274:         Retval = E_NOT_OK;
  1272   001650  0E00               	movlw	0
  1273   001652  6E3D               	movwf	LCD_8BIT_SEND_CHARACTER_DATA@Retval^0,c
  1274                           
  1275                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 275:     }
  1276   001654  EF60  F00B         	goto	l2507
  1277   001658                     l2491:
  1278   001658  C039  F02F         	movff	LCD_8BIT_SEND_CHARACTER_DATA@lcd,GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG
  1279   00165C  0E01               	movlw	1
  1280   00165E  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  1281   001660  EC46  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  1282   001664                     
  1283                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 278:         for(int i = 0 ; i < 8 ; i++){
  1284   001664  0E00               	movlw	0
  1285   001666  6E3F               	movwf	(LCD_8BIT_SEND_CHARACTER_DATA@i+1)^0,c
  1286   001668  0E00               	movlw	0
  1287   00166A  6E3E               	movwf	LCD_8BIT_SEND_CHARACTER_DATA@i^0,c
  1288   00166C                     l2499:
  1289   00166C  5039               	movf	LCD_8BIT_SEND_CHARACTER_DATA@lcd^0,w,c
  1290   00166E  243E               	addwf	LCD_8BIT_SEND_CHARACTER_DATA@i^0,w,c
  1291   001670  0F02               	addlw	2
  1292   001672  6E2F               	movwf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,c
  1293   001674  C03E  F03B         	movff	LCD_8BIT_SEND_CHARACTER_DATA@i,??_LCD_8BIT_SEND_CHARACTER_DATA
  1294   001678  C03A  F03C         	movff	LCD_8BIT_SEND_CHARACTER_DATA@data,??_LCD_8BIT_SEND_CHARACTER_DATA+1
  1295   00167C  2A3B               	incf	??_LCD_8BIT_SEND_CHARACTER_DATA^0,f,c
  1296   00167E  EF43  F00B         	goto	u1414
  1297   001682                     u1415:
  1298   001682  90D8               	bcf	status,0,c
  1299   001684  323C               	rrcf	(??_LCD_8BIT_SEND_CHARACTER_DATA+1)^0,f,c
  1300   001686                     u1414:
  1301   001686  2E3B               	decfsz	??_LCD_8BIT_SEND_CHARACTER_DATA^0,f,c
  1302   001688  EF41  F00B         	goto	u1415
  1303   00168C  503C               	movf	(??_LCD_8BIT_SEND_CHARACTER_DATA+1)^0,w,c
  1304   00168E  0B01               	andlw	1
  1305   001690  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  1306   001692  EC46  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  1307   001696                     
  1308                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 280:         }
  1309   001696  4A3E               	infsnz	LCD_8BIT_SEND_CHARACTER_DATA@i^0,f,c
  1310   001698  2A3F               	incf	(LCD_8BIT_SEND_CHARACTER_DATA@i+1)^0,f,c
  1311   00169A  BE3F               	btfsc	(LCD_8BIT_SEND_CHARACTER_DATA@i+1)^0,7,c
  1312   00169C  EF59  F00B         	goto	u1421
  1313   0016A0  503F               	movf	(LCD_8BIT_SEND_CHARACTER_DATA@i+1)^0,w,c
  1314   0016A2  E109               	bnz	u1420
  1315   0016A4  0E08               	movlw	8
  1316   0016A6  5C3E               	subwf	LCD_8BIT_SEND_CHARACTER_DATA@i^0,w,c
  1317   0016A8  A0D8               	btfss	status,0,c
  1318   0016AA  EF59  F00B         	goto	u1421
  1319   0016AE  EF5B  F00B         	goto	u1420
  1320   0016B2                     u1421:
  1321   0016B2  EF36  F00B         	goto	l2499
  1322   0016B6                     u1420:
  1323   0016B6                     
  1324                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 281:         Retval = lcd_8bit_send_enable_signal(lcd);
  1325   0016B6  C039  F037         	movff	LCD_8BIT_SEND_CHARACTER_DATA@lcd,lcd_8bit_send_enable_signal@lcd
  1326   0016BA  ECBF  F00C         	call	_lcd_8bit_send_enable_signal	;wreg free
  1327   0016BE  6E3D               	movwf	LCD_8BIT_SEND_CHARACTER_DATA@Retval^0,c
  1328   0016C0                     l2507:
  1329                           
  1330                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 283:     return Retval;
  1331   0016C0  503D               	movf	LCD_8BIT_SEND_CHARACTER_DATA@Retval^0,w,c
  1332   0016C2  0012               	return		;funcret
  1333   0016C4                     __end_of_LCD_8BIT_SEND_CHARACTER_DATA:
  1334                           	callstack 0
  1335                           
  1336 ;; *************** function _Application_intialize *****************
  1337 ;; Defined at:
  1338 ;;		line 54 in file "Drivers_Main.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;		None
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;		None
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  1    wreg      void 
  1345 ;; Registers used:
  1346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1356 ;;Total ram usage:        0 bytes
  1357 ;; Hardware stack levels used: 1
  1358 ;; Hardware stack levels required when called: 5
  1359 ;; This function calls:
  1360 ;;		_ECU_LAYER_INITIALIZE
  1361 ;; This function is called by:
  1362 ;;		_main
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           	psect	text5
  1367   001A76                     __ptext5:
  1368                           	callstack 0
  1369   001A76                     _Application_intialize:
  1370                           	callstack 25
  1371   001A76                     
  1372                           ;Drivers_Main.c: 55:     ECU_LAYER_INITIALIZE();
  1373   001A76  EC32  F00D         	call	_ECU_LAYER_INITIALIZE	;wreg free
  1374   001A7A  0012               	return		;funcret
  1375   001A7C                     __end_of_Application_intialize:
  1376                           	callstack 0
  1377                           
  1378 ;; *************** function _ECU_LAYER_INITIALIZE *****************
  1379 ;; Defined at:
  1380 ;;		line 96 in file "ECUAL/ECU_INIT.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;		None
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  Ret             1    0        enum E3654
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;Total ram usage:        0 bytes
  1399 ;; Hardware stack levels used: 1
  1400 ;; Hardware stack levels required when called: 4
  1401 ;; This function calls:
  1402 ;;		_LCD_4BIT_INITIALIZE
  1403 ;;		_LCD_8BIT_INITIALIZE
  1404 ;; This function is called by:
  1405 ;;		_Application_intialize
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	text6
  1410   001A64                     __ptext6:
  1411                           	callstack 0
  1412   001A64                     _ECU_LAYER_INITIALIZE:
  1413                           	callstack 25
  1414   001A64  0E29               	movlw	low _lcd1
  1415   001A66  6E41               	movwf	LCD_4BIT_INITIALIZE@lcd^0,c
  1416   001A68  EC54  F00A         	call	_LCD_4BIT_INITIALIZE	;wreg free
  1417   001A6C  0E1F               	movlw	low _lcd2
  1418   001A6E  6E40               	movwf	LCD_8BIT_INITIALIZE@lcd^0,c
  1419   001A70  ECCE  F009         	call	_LCD_8BIT_INITIALIZE	;wreg free
  1420   001A74  0012               	return		;funcret
  1421   001A76                     __end_of_ECU_LAYER_INITIALIZE:
  1422                           	callstack 0
  1423                           
  1424 ;; *************** function _LCD_8BIT_INITIALIZE *****************
  1425 ;; Defined at:
  1426 ;;		line 227 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  lcd             1   17[COMRAM] PTR const struct .
  1429 ;;		 -> lcd2(10), 
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;  i               2   19[COMRAM] int 
  1432 ;;  Retval          1   21[COMRAM] enum E3654
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      enum E3654
  1435 ;; Registers used:
  1436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1442 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1443 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1444 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1446 ;;Total ram usage:        5 bytes
  1447 ;; Hardware stack levels used: 1
  1448 ;; Hardware stack levels required when called: 3
  1449 ;; This function calls:
  1450 ;;		_GPIO_PIN_INITIALIZE
  1451 ;;		_GPIO_PIN_WRITE_LOGIC
  1452 ;;		_LCD_8BIT_SEND_COMMAND
  1453 ;; This function is called by:
  1454 ;;		_ECU_LAYER_INITIALIZE
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text7
  1459   00139C                     __ptext7:
  1460                           	callstack 0
  1461   00139C                     _LCD_8BIT_INITIALIZE:
  1462                           	callstack 25
  1463   00139C                     
  1464                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 229:     if(((void*)0) == lcd){
  1465   00139C  5040               	movf	LCD_8BIT_INITIALIZE@lcd^0,w,c
  1466   00139E  A4D8               	btfss	status,2,c
  1467   0013A0  EFD4  F009         	goto	u1371
  1468   0013A4  EFD6  F009         	goto	u1370
  1469   0013A8                     u1371:
  1470   0013A8  EFDA  F009         	goto	l2433
  1471   0013AC                     u1370:
  1472   0013AC                     
  1473                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 230:         Retval = E_NOT_OK;
  1474   0013AC  0E00               	movlw	0
  1475   0013AE  6E44               	movwf	LCD_8BIT_INITIALIZE@Retval^0,c
  1476                           
  1477                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 231:     }
  1478   0013B0  EF52  F00A         	goto	l2457
  1479   0013B4                     l2433:
  1480                           
  1481                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 233:         Retval = GPIO_PIN_INITIALIZE(&(lcd->RS_PIN));
  1482   0013B4  C040  F037         	movff	LCD_8BIT_INITIALIZE@lcd,GPIO_PIN_INITIALIZE@_PIN_CONFIG
  1483   0013B8  EC13  F00C         	call	_GPIO_PIN_INITIALIZE	;wreg free
  1484   0013BC  6E44               	movwf	LCD_8BIT_INITIALIZE@Retval^0,c
  1485                           
  1486                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 234:         Retval = GPIO_PIN_INITIALIZE(&(lcd->EN_PIN));
  1487   0013BE  2840               	incf	LCD_8BIT_INITIALIZE@lcd^0,w,c
  1488   0013C0  6E37               	movwf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,c
  1489   0013C2  EC13  F00C         	call	_GPIO_PIN_INITIALIZE	;wreg free
  1490   0013C6  6E44               	movwf	LCD_8BIT_INITIALIZE@Retval^0,c
  1491   0013C8                     
  1492                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 235:         for(int i = 0; i < 8 ; i++){
  1493   0013C8  0E00               	movlw	0
  1494   0013CA  6E43               	movwf	(LCD_8BIT_INITIALIZE@i+1)^0,c
  1495   0013CC  0E00               	movlw	0
  1496   0013CE  6E42               	movwf	LCD_8BIT_INITIALIZE@i^0,c
  1497   0013D0                     l2441:
  1498   0013D0  5040               	movf	LCD_8BIT_INITIALIZE@lcd^0,w,c
  1499   0013D2  2442               	addwf	LCD_8BIT_INITIALIZE@i^0,w,c
  1500   0013D4  0F02               	addlw	2
  1501   0013D6  6E37               	movwf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,c
  1502   0013D8  EC13  F00C         	call	_GPIO_PIN_INITIALIZE	;wreg free
  1503   0013DC                     
  1504                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 237:         }
  1505   0013DC  4A42               	infsnz	LCD_8BIT_INITIALIZE@i^0,f,c
  1506   0013DE  2A43               	incf	(LCD_8BIT_INITIALIZE@i+1)^0,f,c
  1507   0013E0  BE43               	btfsc	(LCD_8BIT_INITIALIZE@i+1)^0,7,c
  1508   0013E2  EFFC  F009         	goto	u1381
  1509   0013E6  5043               	movf	(LCD_8BIT_INITIALIZE@i+1)^0,w,c
  1510   0013E8  E109               	bnz	u1380
  1511   0013EA  0E08               	movlw	8
  1512   0013EC  5C42               	subwf	LCD_8BIT_INITIALIZE@i^0,w,c
  1513   0013EE  A0D8               	btfss	status,0,c
  1514   0013F0  EFFC  F009         	goto	u1381
  1515   0013F4  EFFE  F009         	goto	u1380
  1516   0013F8                     u1381:
  1517   0013F8  EFE8  F009         	goto	l2441
  1518   0013FC                     u1380:
  1519   0013FC                     
  1520                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 238:         _delay((unsigned long)((20)*(8000000UL/4000.0
      +                          )));
  1521   0013FC  0E34               	movlw	52
  1522   0013FE  6E41               	movwf	??_LCD_8BIT_INITIALIZE^0,c
  1523   001400  0EF2               	movlw	242
  1524   001402                     u2067:
  1525   001402  2EE8               	decfsz	wreg,f,c
  1526   001404  D7FE               	bra	u2067
  1527   001406  2E41               	decfsz	??_LCD_8BIT_INITIALIZE^0,f,c
  1528   001408  D7FC               	bra	u2067
  1529   00140A  C040  F02F         	movff	LCD_8BIT_INITIALIZE@lcd,GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG
  1530   00140E  0E00               	movlw	0
  1531   001410  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  1532   001412  EC46  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  1533   001416  C040  F039         	movff	LCD_8BIT_INITIALIZE@lcd,LCD_8BIT_SEND_COMMAND@lcd
  1534   00141A  0E38               	movlw	56
  1535   00141C  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  1536   00141E  EC62  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  1537                           
  1538                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 241:         _delay((unsigned long)((5)*(8000000UL/4000.0)
      +                          ));
  1539   001422  0E0D               	movlw	13
  1540   001424  6E41               	movwf	??_LCD_8BIT_INITIALIZE^0,c
  1541   001426  0EFC               	movlw	252
  1542   001428                     u2077:
  1543   001428  2EE8               	decfsz	wreg,f,c
  1544   00142A  D7FE               	bra	u2077
  1545   00142C  2E41               	decfsz	??_LCD_8BIT_INITIALIZE^0,f,c
  1546   00142E  D7FC               	bra	u2077
  1547   001430  C040  F039         	movff	LCD_8BIT_INITIALIZE@lcd,LCD_8BIT_SEND_COMMAND@lcd
  1548   001434  0E38               	movlw	56
  1549   001436  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  1550   001438  EC62  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  1551   00143C                     
  1552                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 243:         _delay((unsigned long)((150)*(8000000UL/40000
      +                          00.0)));
  1553   00143C  0E64               	movlw	100
  1554   00143E                     u2087:
  1555   00143E  2EE8               	decfsz	wreg,f,c
  1556   001440  D7FE               	bra	u2087
  1557                           
  1558                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 244:         Retval = LCD_8BIT_SEND_COMMAND(lcd , 0x38);
  1559   001442  C040  F039         	movff	LCD_8BIT_INITIALIZE@lcd,LCD_8BIT_SEND_COMMAND@lcd
  1560   001446  0E38               	movlw	56
  1561   001448  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  1562   00144A  EC62  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  1563   00144E  6E44               	movwf	LCD_8BIT_INITIALIZE@Retval^0,c
  1564                           
  1565                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 246:         Retval = LCD_8BIT_SEND_COMMAND(lcd , 0x01);
  1566   001450  C040  F039         	movff	LCD_8BIT_INITIALIZE@lcd,LCD_8BIT_SEND_COMMAND@lcd
  1567   001454  0E01               	movlw	1
  1568   001456  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  1569   001458  EC62  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  1570   00145C  6E44               	movwf	LCD_8BIT_INITIALIZE@Retval^0,c
  1571                           
  1572                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 247:         Retval = LCD_8BIT_SEND_COMMAND(lcd , 0x02);
  1573   00145E  C040  F039         	movff	LCD_8BIT_INITIALIZE@lcd,LCD_8BIT_SEND_COMMAND@lcd
  1574   001462  0E02               	movlw	2
  1575   001464  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  1576   001466  EC62  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  1577   00146A  6E44               	movwf	LCD_8BIT_INITIALIZE@Retval^0,c
  1578                           
  1579                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 248:         Retval = LCD_8BIT_SEND_COMMAND(lcd , 0x06);
  1580   00146C  C040  F039         	movff	LCD_8BIT_INITIALIZE@lcd,LCD_8BIT_SEND_COMMAND@lcd
  1581   001470  0E06               	movlw	6
  1582   001472  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  1583   001474  EC62  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  1584   001478  6E44               	movwf	LCD_8BIT_INITIALIZE@Retval^0,c
  1585                           
  1586                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 249:         Retval = LCD_8BIT_SEND_COMMAND(lcd , 0x0C);
  1587   00147A  C040  F039         	movff	LCD_8BIT_INITIALIZE@lcd,LCD_8BIT_SEND_COMMAND@lcd
  1588   00147E  0E0C               	movlw	12
  1589   001480  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  1590   001482  EC62  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  1591   001486  6E44               	movwf	LCD_8BIT_INITIALIZE@Retval^0,c
  1592                           
  1593                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 250:         Retval = LCD_8BIT_SEND_COMMAND(lcd , 0x38);
  1594   001488  C040  F039         	movff	LCD_8BIT_INITIALIZE@lcd,LCD_8BIT_SEND_COMMAND@lcd
  1595   00148C  0E38               	movlw	56
  1596   00148E  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  1597   001490  EC62  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  1598   001494  6E44               	movwf	LCD_8BIT_INITIALIZE@Retval^0,c
  1599                           
  1600                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 251:         Retval = LCD_8BIT_SEND_COMMAND(lcd , 0x80);
  1601   001496  C040  F039         	movff	LCD_8BIT_INITIALIZE@lcd,LCD_8BIT_SEND_COMMAND@lcd
  1602   00149A  0E80               	movlw	128
  1603   00149C  6E3A               	movwf	LCD_8BIT_SEND_COMMAND@command^0,c
  1604   00149E  EC62  F00B         	call	_LCD_8BIT_SEND_COMMAND	;wreg free
  1605   0014A2  6E44               	movwf	LCD_8BIT_INITIALIZE@Retval^0,c
  1606   0014A4                     l2457:
  1607                           
  1608                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 253:     return Retval;
  1609   0014A4  5044               	movf	LCD_8BIT_INITIALIZE@Retval^0,w,c
  1610   0014A6  0012               	return		;funcret
  1611   0014A8                     __end_of_LCD_8BIT_INITIALIZE:
  1612                           	callstack 0
  1613                           
  1614 ;; *************** function _LCD_8BIT_SEND_COMMAND *****************
  1615 ;; Defined at:
  1616 ;;		line 256 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  lcd             1   10[COMRAM] PTR const struct .
  1619 ;;		 -> lcd2(10), 
  1620 ;;  command         1   11[COMRAM] unsigned char 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  i               2   15[COMRAM] int 
  1623 ;;  Retval          1   14[COMRAM] enum E3654
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      enum E3654
  1626 ;; Registers used:
  1627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1637 ;;Total ram usage:        7 bytes
  1638 ;; Hardware stack levels used: 1
  1639 ;; Hardware stack levels required when called: 2
  1640 ;; This function calls:
  1641 ;;		_GPIO_PIN_WRITE_LOGIC
  1642 ;;		_lcd_8bit_send_enable_signal
  1643 ;; This function is called by:
  1644 ;;		_lcd_8bit_set_cursor
  1645 ;;		_LCD_8BIT_INITIALIZE
  1646 ;;		_LCD_8BIT_SEND_CUSTOM_CHARACTER
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text8
  1651   0016C4                     __ptext8:
  1652                           	callstack 0
  1653   0016C4                     _LCD_8BIT_SEND_COMMAND:
  1654                           	callstack 27
  1655   0016C4                     
  1656                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 258:     if(((void*)0) == lcd){
  1657   0016C4  5039               	movf	LCD_8BIT_SEND_COMMAND@lcd^0,w,c
  1658   0016C6  A4D8               	btfss	status,2,c
  1659   0016C8  EF68  F00B         	goto	u1321
  1660   0016CC  EF6A  F00B         	goto	u1320
  1661   0016D0                     u1321:
  1662   0016D0  EF6E  F00B         	goto	l2365
  1663   0016D4                     u1320:
  1664   0016D4                     
  1665                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 259:         Retval = E_NOT_OK;
  1666   0016D4  0E00               	movlw	0
  1667   0016D6  6E3D               	movwf	LCD_8BIT_SEND_COMMAND@Retval^0,c
  1668                           
  1669                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 260:     }
  1670   0016D8  EFA2  F00B         	goto	l2381
  1671   0016DC                     l2365:
  1672   0016DC  C039  F02F         	movff	LCD_8BIT_SEND_COMMAND@lcd,GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG
  1673   0016E0  0E00               	movlw	0
  1674   0016E2  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  1675   0016E4  EC46  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  1676   0016E8                     
  1677                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 263:         for(int i = 0 ; i < 8 ; i++){
  1678   0016E8  0E00               	movlw	0
  1679   0016EA  6E3F               	movwf	(LCD_8BIT_SEND_COMMAND@i+1)^0,c
  1680   0016EC  0E00               	movlw	0
  1681   0016EE  6E3E               	movwf	LCD_8BIT_SEND_COMMAND@i^0,c
  1682   0016F0                     l2373:
  1683   0016F0  5039               	movf	LCD_8BIT_SEND_COMMAND@lcd^0,w,c
  1684   0016F2  243E               	addwf	LCD_8BIT_SEND_COMMAND@i^0,w,c
  1685   0016F4  0F02               	addlw	2
  1686   0016F6  6E2F               	movwf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,c
  1687   0016F8  C03E  F03B         	movff	LCD_8BIT_SEND_COMMAND@i,??_LCD_8BIT_SEND_COMMAND
  1688   0016FC  C03A  F03C         	movff	LCD_8BIT_SEND_COMMAND@command,??_LCD_8BIT_SEND_COMMAND+1
  1689   001700  2A3B               	incf	??_LCD_8BIT_SEND_COMMAND^0,f,c
  1690   001702  EF85  F00B         	goto	u1334
  1691   001706                     u1335:
  1692   001706  90D8               	bcf	status,0,c
  1693   001708  323C               	rrcf	(??_LCD_8BIT_SEND_COMMAND+1)^0,f,c
  1694   00170A                     u1334:
  1695   00170A  2E3B               	decfsz	??_LCD_8BIT_SEND_COMMAND^0,f,c
  1696   00170C  EF83  F00B         	goto	u1335
  1697   001710  503C               	movf	(??_LCD_8BIT_SEND_COMMAND+1)^0,w,c
  1698   001712  0B01               	andlw	1
  1699   001714  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  1700   001716  EC46  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  1701   00171A                     
  1702                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 265:         }
  1703   00171A  4A3E               	infsnz	LCD_8BIT_SEND_COMMAND@i^0,f,c
  1704   00171C  2A3F               	incf	(LCD_8BIT_SEND_COMMAND@i+1)^0,f,c
  1705   00171E  BE3F               	btfsc	(LCD_8BIT_SEND_COMMAND@i+1)^0,7,c
  1706   001720  EF9B  F00B         	goto	u1341
  1707   001724  503F               	movf	(LCD_8BIT_SEND_COMMAND@i+1)^0,w,c
  1708   001726  E109               	bnz	u1340
  1709   001728  0E08               	movlw	8
  1710   00172A  5C3E               	subwf	LCD_8BIT_SEND_COMMAND@i^0,w,c
  1711   00172C  A0D8               	btfss	status,0,c
  1712   00172E  EF9B  F00B         	goto	u1341
  1713   001732  EF9D  F00B         	goto	u1340
  1714   001736                     u1341:
  1715   001736  EF78  F00B         	goto	l2373
  1716   00173A                     u1340:
  1717   00173A                     
  1718                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 266:         Retval = lcd_8bit_send_enable_signal(lcd);
  1719   00173A  C039  F037         	movff	LCD_8BIT_SEND_COMMAND@lcd,lcd_8bit_send_enable_signal@lcd
  1720   00173E  ECBF  F00C         	call	_lcd_8bit_send_enable_signal	;wreg free
  1721   001742  6E3D               	movwf	LCD_8BIT_SEND_COMMAND@Retval^0,c
  1722   001744                     l2381:
  1723                           
  1724                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 268:     return Retval;
  1725   001744  503D               	movf	LCD_8BIT_SEND_COMMAND@Retval^0,w,c
  1726   001746  0012               	return		;funcret
  1727   001748                     __end_of_LCD_8BIT_SEND_COMMAND:
  1728                           	callstack 0
  1729                           
  1730 ;; *************** function _lcd_8bit_send_enable_signal *****************
  1731 ;; Defined at:
  1732 ;;		line 38 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  lcd             1    8[COMRAM] PTR const struct .
  1735 ;;		 -> lcd2(10), 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  Retval          1    9[COMRAM] enum E3654
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      enum E3654
  1740 ;; Registers used:
  1741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1747 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1748 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1750 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1751 ;;Total ram usage:        2 bytes
  1752 ;; Hardware stack levels used: 1
  1753 ;; Hardware stack levels required when called: 1
  1754 ;; This function calls:
  1755 ;;		_GPIO_PIN_WRITE_LOGIC
  1756 ;; This function is called by:
  1757 ;;		_LCD_8BIT_SEND_COMMAND
  1758 ;;		_LCD_8BIT_SEND_CHARACTER_DATA
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text9
  1763   00197E                     __ptext9:
  1764                           	callstack 0
  1765   00197E                     _lcd_8bit_send_enable_signal:
  1766                           	callstack 27
  1767   00197E                     
  1768                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 40:     if(((void*)0) == lcd){
  1769   00197E  5037               	movf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1770   001980  A4D8               	btfss	status,2,c
  1771   001982  EFC5  F00C         	goto	u1281
  1772   001986  EFC7  F00C         	goto	u1280
  1773   00198A                     u1281:
  1774   00198A  EFCB  F00C         	goto	l2327
  1775   00198E                     u1280:
  1776   00198E                     
  1777                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 41:         Retval = E_NOT_OK;
  1778   00198E  0E00               	movlw	0
  1779   001990  6E38               	movwf	lcd_8bit_send_enable_signal@Retval^0,c
  1780                           
  1781                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 42:     }
  1782   001992  EFDC  F00C         	goto	l2333
  1783   001996                     l2327:
  1784   001996  2837               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1785   001998  6E2F               	movwf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,c
  1786   00199A  0E01               	movlw	1
  1787   00199C  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  1788   00199E  EC46  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  1789   0019A2                     
  1790                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 45:         _delay((unsigned long)((5)*(8000000UL/4000000.
      +                          0)));
  1791   0019A2  0E03               	movlw	3
  1792   0019A4                     u2097:
  1793   0019A4  2EE8               	decfsz	wreg,f,c
  1794   0019A6  D7FE               	bra	u2097
  1795   0019A8  0000               	nop	
  1796   0019AA                     
  1797                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 46:         Retval = GPIO_PIN_WRITE_LOGIC(&(lcd->EN_PIN) ,
      +                           GPIO_LOW);
  1798   0019AA  2837               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1799   0019AC  6E2F               	movwf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,c
  1800   0019AE  0E00               	movlw	0
  1801   0019B0  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  1802   0019B2  EC46  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  1803   0019B6  6E38               	movwf	lcd_8bit_send_enable_signal@Retval^0,c
  1804   0019B8                     l2333:
  1805                           
  1806                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 48:     return Retval;
  1807   0019B8  5038               	movf	lcd_8bit_send_enable_signal@Retval^0,w,c
  1808   0019BA  0012               	return		;funcret
  1809   0019BC                     __end_of_lcd_8bit_send_enable_signal:
  1810                           	callstack 0
  1811                           
  1812 ;; *************** function _LCD_4BIT_INITIALIZE *****************
  1813 ;; Defined at:
  1814 ;;		line 111 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;  lcd             1   18[COMRAM] PTR const struct .
  1817 ;;		 -> lcd1(6), 
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;  i               2   20[COMRAM] int 
  1820 ;;  Retval          1   22[COMRAM] enum E3654
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  1    wreg      enum E3654
  1823 ;; Registers used:
  1824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1830 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1833 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1834 ;;Total ram usage:        5 bytes
  1835 ;; Hardware stack levels used: 1
  1836 ;; Hardware stack levels required when called: 3
  1837 ;; This function calls:
  1838 ;;		_GPIO_PIN_INITIALIZE
  1839 ;;		_LCD_4BIT_SEND_COMMAND
  1840 ;; This function is called by:
  1841 ;;		_ECU_LAYER_INITIALIZE
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           	psect	text10
  1846   0014A8                     __ptext10:
  1847                           	callstack 0
  1848   0014A8                     _LCD_4BIT_INITIALIZE:
  1849                           	callstack 25
  1850   0014A8                     
  1851                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 113:     if(((void*)0) == lcd){
  1852   0014A8  5041               	movf	LCD_4BIT_INITIALIZE@lcd^0,w,c
  1853   0014AA  A4D8               	btfss	status,2,c
  1854   0014AC  EF5A  F00A         	goto	u1351
  1855   0014B0  EF5C  F00A         	goto	u1350
  1856   0014B4                     u1351:
  1857   0014B4  EF60  F00A         	goto	l2389
  1858   0014B8                     u1350:
  1859   0014B8                     
  1860                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 114:         Retval = E_NOT_OK;
  1861   0014B8  0E00               	movlw	0
  1862   0014BA  6E45               	movwf	LCD_4BIT_INITIALIZE@Retval^0,c
  1863                           
  1864                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 115:     }
  1865   0014BC  EFCC  F00A         	goto	l2425
  1866   0014C0                     l2389:
  1867                           
  1868                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 117:         Retval = GPIO_PIN_INITIALIZE(&(lcd->RS_PIN));
  1869   0014C0  C041  F037         	movff	LCD_4BIT_INITIALIZE@lcd,GPIO_PIN_INITIALIZE@_PIN_CONFIG
  1870   0014C4  EC13  F00C         	call	_GPIO_PIN_INITIALIZE	;wreg free
  1871   0014C8  6E45               	movwf	LCD_4BIT_INITIALIZE@Retval^0,c
  1872                           
  1873                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 118:         Retval = GPIO_PIN_INITIALIZE(&(lcd->EN_PIN));
  1874   0014CA  2841               	incf	LCD_4BIT_INITIALIZE@lcd^0,w,c
  1875   0014CC  6E37               	movwf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,c
  1876   0014CE  EC13  F00C         	call	_GPIO_PIN_INITIALIZE	;wreg free
  1877   0014D2  6E45               	movwf	LCD_4BIT_INITIALIZE@Retval^0,c
  1878   0014D4                     
  1879                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 119:         for(int i = 0 ; i < 4 ; i++){
  1880   0014D4  0E00               	movlw	0
  1881   0014D6  6E44               	movwf	(LCD_4BIT_INITIALIZE@i+1)^0,c
  1882   0014D8  0E00               	movlw	0
  1883   0014DA  6E43               	movwf	LCD_4BIT_INITIALIZE@i^0,c
  1884   0014DC                     l2397:
  1885   0014DC  5041               	movf	LCD_4BIT_INITIALIZE@lcd^0,w,c
  1886   0014DE  2443               	addwf	LCD_4BIT_INITIALIZE@i^0,w,c
  1887   0014E0  0F02               	addlw	2
  1888   0014E2  6E37               	movwf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,c
  1889   0014E4  EC13  F00C         	call	_GPIO_PIN_INITIALIZE	;wreg free
  1890   0014E8                     
  1891                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 121:         }
  1892   0014E8  4A43               	infsnz	LCD_4BIT_INITIALIZE@i^0,f,c
  1893   0014EA  2A44               	incf	(LCD_4BIT_INITIALIZE@i+1)^0,f,c
  1894   0014EC  BE44               	btfsc	(LCD_4BIT_INITIALIZE@i+1)^0,7,c
  1895   0014EE  EF82  F00A         	goto	u1361
  1896   0014F2  5044               	movf	(LCD_4BIT_INITIALIZE@i+1)^0,w,c
  1897   0014F4  E109               	bnz	u1360
  1898   0014F6  0E04               	movlw	4
  1899   0014F8  5C43               	subwf	LCD_4BIT_INITIALIZE@i^0,w,c
  1900   0014FA  A0D8               	btfss	status,0,c
  1901   0014FC  EF82  F00A         	goto	u1361
  1902   001500  EF84  F00A         	goto	u1360
  1903   001504                     u1361:
  1904   001504  EF6E  F00A         	goto	l2397
  1905   001508                     u1360:
  1906   001508                     
  1907                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 122:         _delay((unsigned long)((20)*(8000000UL/4000.0
      +                          )));
  1908   001508  0E34               	movlw	52
  1909   00150A  6E42               	movwf	??_LCD_4BIT_INITIALIZE^0,c
  1910   00150C  0EF2               	movlw	242
  1911   00150E                     u2107:
  1912   00150E  2EE8               	decfsz	wreg,f,c
  1913   001510  D7FE               	bra	u2107
  1914   001512  2E42               	decfsz	??_LCD_4BIT_INITIALIZE^0,f,c
  1915   001514  D7FC               	bra	u2107
  1916   001516  C041  F03E         	movff	LCD_4BIT_INITIALIZE@lcd,LCD_4BIT_SEND_COMMAND@lcd
  1917   00151A  0E38               	movlw	56
  1918   00151C  6E3F               	movwf	LCD_4BIT_SEND_COMMAND@command^0,c
  1919   00151E  EC42  F00C         	call	_LCD_4BIT_SEND_COMMAND	;wreg free
  1920   001522                     
  1921                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 124:         _delay((unsigned long)((5)*(8000000UL/4000.0)
      +                          ));
  1922   001522  0E0D               	movlw	13
  1923   001524  6E42               	movwf	??_LCD_4BIT_INITIALIZE^0,c
  1924   001526  0EFC               	movlw	252
  1925   001528                     u2117:
  1926   001528  2EE8               	decfsz	wreg,f,c
  1927   00152A  D7FE               	bra	u2117
  1928   00152C  2E42               	decfsz	??_LCD_4BIT_INITIALIZE^0,f,c
  1929   00152E  D7FC               	bra	u2117
  1930   001530  C041  F03E         	movff	LCD_4BIT_INITIALIZE@lcd,LCD_4BIT_SEND_COMMAND@lcd
  1931   001534  0E38               	movlw	56
  1932   001536  6E3F               	movwf	LCD_4BIT_SEND_COMMAND@command^0,c
  1933   001538  EC42  F00C         	call	_LCD_4BIT_SEND_COMMAND	;wreg free
  1934   00153C                     
  1935                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 126:         _delay((unsigned long)((150)*(8000000UL/40000
      +                          00.0)));
  1936   00153C  0E64               	movlw	100
  1937   00153E                     u2127:
  1938   00153E  2EE8               	decfsz	wreg,f,c
  1939   001540  D7FE               	bra	u2127
  1940   001542  C041  F03E         	movff	LCD_4BIT_INITIALIZE@lcd,LCD_4BIT_SEND_COMMAND@lcd
  1941   001546  0E38               	movlw	56
  1942   001548  6E3F               	movwf	LCD_4BIT_SEND_COMMAND@command^0,c
  1943   00154A  EC42  F00C         	call	_LCD_4BIT_SEND_COMMAND	;wreg free
  1944   00154E  C041  F03E         	movff	LCD_4BIT_INITIALIZE@lcd,LCD_4BIT_SEND_COMMAND@lcd
  1945   001552  0E01               	movlw	1
  1946   001554  6E3F               	movwf	LCD_4BIT_SEND_COMMAND@command^0,c
  1947   001556  EC42  F00C         	call	_LCD_4BIT_SEND_COMMAND	;wreg free
  1948   00155A  C041  F03E         	movff	LCD_4BIT_INITIALIZE@lcd,LCD_4BIT_SEND_COMMAND@lcd
  1949   00155E  0E02               	movlw	2
  1950   001560  6E3F               	movwf	LCD_4BIT_SEND_COMMAND@command^0,c
  1951   001562  EC42  F00C         	call	_LCD_4BIT_SEND_COMMAND	;wreg free
  1952   001566  C041  F03E         	movff	LCD_4BIT_INITIALIZE@lcd,LCD_4BIT_SEND_COMMAND@lcd
  1953   00156A  0E06               	movlw	6
  1954   00156C  6E3F               	movwf	LCD_4BIT_SEND_COMMAND@command^0,c
  1955   00156E  EC42  F00C         	call	_LCD_4BIT_SEND_COMMAND	;wreg free
  1956   001572  C041  F03E         	movff	LCD_4BIT_INITIALIZE@lcd,LCD_4BIT_SEND_COMMAND@lcd
  1957   001576  0E0C               	movlw	12
  1958   001578  6E3F               	movwf	LCD_4BIT_SEND_COMMAND@command^0,c
  1959   00157A  EC42  F00C         	call	_LCD_4BIT_SEND_COMMAND	;wreg free
  1960   00157E  C041  F03E         	movff	LCD_4BIT_INITIALIZE@lcd,LCD_4BIT_SEND_COMMAND@lcd
  1961   001582  0E28               	movlw	40
  1962   001584  6E3F               	movwf	LCD_4BIT_SEND_COMMAND@command^0,c
  1963   001586  EC42  F00C         	call	_LCD_4BIT_SEND_COMMAND	;wreg free
  1964   00158A                     
  1965                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 134:         Retval = LCD_4BIT_SEND_COMMAND(lcd , 0x80);
  1966   00158A  C041  F03E         	movff	LCD_4BIT_INITIALIZE@lcd,LCD_4BIT_SEND_COMMAND@lcd
  1967   00158E  0E80               	movlw	128
  1968   001590  6E3F               	movwf	LCD_4BIT_SEND_COMMAND@command^0,c
  1969   001592  EC42  F00C         	call	_LCD_4BIT_SEND_COMMAND	;wreg free
  1970   001596  6E45               	movwf	LCD_4BIT_INITIALIZE@Retval^0,c
  1971   001598                     l2425:
  1972                           
  1973                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 136:     return Retval;
  1974   001598  5045               	movf	LCD_4BIT_INITIALIZE@Retval^0,w,c
  1975   00159A  0012               	return		;funcret
  1976   00159C                     __end_of_LCD_4BIT_INITIALIZE:
  1977                           	callstack 0
  1978                           
  1979 ;; *************** function _LCD_4BIT_SEND_COMMAND *****************
  1980 ;; Defined at:
  1981 ;;		line 139 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;  lcd             1   15[COMRAM] PTR const struct .
  1984 ;;		 -> lcd1(6), 
  1985 ;;  command         1   16[COMRAM] unsigned char 
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;  Retval          1   17[COMRAM] enum E3654
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      enum E3654
  1990 ;; Registers used:
  1991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2000 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2001 ;;Total ram usage:        3 bytes
  2002 ;; Hardware stack levels used: 1
  2003 ;; Hardware stack levels required when called: 2
  2004 ;; This function calls:
  2005 ;;		_GPIO_PIN_WRITE_LOGIC
  2006 ;;		_lcd_4bit_send_enable_signal
  2007 ;;		_lcd_send_4bits
  2008 ;; This function is called by:
  2009 ;;		_LCD_4BIT_INITIALIZE
  2010 ;;		_welcome_message
  2011 ;;		_lcd_4bit_set_cursor
  2012 ;;		_LCD_4BIT_SEND_CUSTOM_CHARACTER
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           	psect	text11
  2017   001884                     __ptext11:
  2018                           	callstack 0
  2019   001884                     _LCD_4BIT_SEND_COMMAND:
  2020                           	callstack 25
  2021   001884                     
  2022                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 141:     if(((void*)0) == lcd){
  2023   001884  503E               	movf	LCD_4BIT_SEND_COMMAND@lcd^0,w,c
  2024   001886  A4D8               	btfss	status,2,c
  2025   001888  EF48  F00C         	goto	u1311
  2026   00188C  EF4A  F00C         	goto	u1310
  2027   001890                     u1311:
  2028   001890  EF4E  F00C         	goto	l2355
  2029   001894                     u1310:
  2030   001894                     
  2031                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 142:         Retval = E_NOT_OK;
  2032   001894  0E00               	movlw	0
  2033   001896  6E40               	movwf	LCD_4BIT_SEND_COMMAND@Retval^0,c
  2034                           
  2035                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 143:     }
  2036   001898  EF6E  F00C         	goto	l2357
  2037   00189C                     l2355:
  2038                           
  2039                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 145:         Retval = GPIO_PIN_WRITE_LOGIC(&(lcd->RS_PIN) 
      +                          , GPIO_LOW);
  2040   00189C  C03E  F02F         	movff	LCD_4BIT_SEND_COMMAND@lcd,GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG
  2041   0018A0  0E00               	movlw	0
  2042   0018A2  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  2043   0018A4  EC46  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  2044   0018A8  6E40               	movwf	LCD_4BIT_SEND_COMMAND@Retval^0,c
  2045                           
  2046                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 146:         Retval = lcd_send_4bits(lcd , (command >> 4))
      +                          ;
  2047   0018AA  C03E  F037         	movff	LCD_4BIT_SEND_COMMAND@lcd,lcd_send_4bits@lcd
  2048   0018AE  383F               	swapf	LCD_4BIT_SEND_COMMAND@command^0,w,c
  2049   0018B0  0B0F               	andlw	15
  2050   0018B2  6E38               	movwf	lcd_send_4bits@_data_command^0,c
  2051   0018B4  ECA4  F00B         	call	_lcd_send_4bits	;wreg free
  2052   0018B8  6E40               	movwf	LCD_4BIT_SEND_COMMAND@Retval^0,c
  2053                           
  2054                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 147:         Retval = lcd_4bit_send_enable_signal(lcd);
  2055   0018BA  C03E  F037         	movff	LCD_4BIT_SEND_COMMAND@lcd,lcd_4bit_send_enable_signal@lcd
  2056   0018BE  ECDE  F00C         	call	_lcd_4bit_send_enable_signal	;wreg free
  2057   0018C2  6E40               	movwf	LCD_4BIT_SEND_COMMAND@Retval^0,c
  2058                           
  2059                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 148:         Retval = lcd_send_4bits(lcd , (command));
  2060   0018C4  C03E  F037         	movff	LCD_4BIT_SEND_COMMAND@lcd,lcd_send_4bits@lcd
  2061   0018C8  C03F  F038         	movff	LCD_4BIT_SEND_COMMAND@command,lcd_send_4bits@_data_command
  2062   0018CC  ECA4  F00B         	call	_lcd_send_4bits	;wreg free
  2063   0018D0  6E40               	movwf	LCD_4BIT_SEND_COMMAND@Retval^0,c
  2064                           
  2065                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 149:         Retval = lcd_4bit_send_enable_signal(lcd);
  2066   0018D2  C03E  F037         	movff	LCD_4BIT_SEND_COMMAND@lcd,lcd_4bit_send_enable_signal@lcd
  2067   0018D6  ECDE  F00C         	call	_lcd_4bit_send_enable_signal	;wreg free
  2068   0018DA  6E40               	movwf	LCD_4BIT_SEND_COMMAND@Retval^0,c
  2069   0018DC                     l2357:
  2070                           
  2071                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 151:     return Retval;
  2072   0018DC  5040               	movf	LCD_4BIT_SEND_COMMAND@Retval^0,w,c
  2073   0018DE  0012               	return		;funcret
  2074   0018E0                     __end_of_LCD_4BIT_SEND_COMMAND:
  2075                           	callstack 0
  2076                           
  2077 ;; *************** function _lcd_send_4bits *****************
  2078 ;; Defined at:
  2079 ;;		line 14 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;  lcd             1    8[COMRAM] PTR const struct .
  2082 ;;		 -> lcd1(6), 
  2083 ;;  _data_comman    1    9[COMRAM] unsigned char 
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;  i               2   13[COMRAM] int 
  2086 ;;  Retval          1   12[COMRAM] enum E3654
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  1    wreg      enum E3654
  2089 ;; Registers used:
  2090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2096 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2097 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2098 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;Total ram usage:        7 bytes
  2101 ;; Hardware stack levels used: 1
  2102 ;; Hardware stack levels required when called: 1
  2103 ;; This function calls:
  2104 ;;		_GPIO_PIN_WRITE_LOGIC
  2105 ;; This function is called by:
  2106 ;;		_LCD_4BIT_SEND_COMMAND
  2107 ;;		_LCD_4BIT_SEND_CHARACTER_DATA
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text12
  2112   001748                     __ptext12:
  2113                           	callstack 0
  2114   001748                     _lcd_send_4bits:
  2115                           	callstack 25
  2116   001748                     
  2117                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 16:     if(((void*)0) == lcd){
  2118   001748  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2119   00174A  A4D8               	btfss	status,2,c
  2120   00174C  EFAA  F00B         	goto	u1241
  2121   001750  EFAC  F00B         	goto	u1240
  2122   001754                     u1241:
  2123   001754  EFB0  F00B         	goto	l2293
  2124   001758                     u1240:
  2125   001758                     
  2126                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 17:         Retval = E_NOT_OK;
  2127   001758  0E00               	movlw	0
  2128   00175A  6E3B               	movwf	lcd_send_4bits@Retval^0,c
  2129                           
  2130                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 18:     }
  2131   00175C  EFDA  F00B         	goto	l2305
  2132   001760                     l2293:
  2133                           
  2134                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 20:         for(int i = 0 ; i < 4 ; i++){
  2135   001760  0E00               	movlw	0
  2136   001762  6E3D               	movwf	(lcd_send_4bits@i+1)^0,c
  2137   001764  0E00               	movlw	0
  2138   001766  6E3C               	movwf	lcd_send_4bits@i^0,c
  2139   001768                     l2299:
  2140                           
  2141                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 21:             Retval = GPIO_PIN_WRITE_LOGIC(&(lcd->DATA_
      +                          PINS[i]) , (_data_command >> i) & (uint8)0x01);
  2142   001768  5037               	movf	lcd_send_4bits@lcd^0,w,c
  2143   00176A  243C               	addwf	lcd_send_4bits@i^0,w,c
  2144   00176C  0F02               	addlw	2
  2145   00176E  6E2F               	movwf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,c
  2146   001770  C03C  F039         	movff	lcd_send_4bits@i,??_lcd_send_4bits
  2147   001774  C038  F03A         	movff	lcd_send_4bits@_data_command,??_lcd_send_4bits+1
  2148   001778  2A39               	incf	??_lcd_send_4bits^0,f,c
  2149   00177A  EFC1  F00B         	goto	u1254
  2150   00177E                     u1255:
  2151   00177E  90D8               	bcf	status,0,c
  2152   001780  323A               	rrcf	(??_lcd_send_4bits+1)^0,f,c
  2153   001782                     u1254:
  2154   001782  2E39               	decfsz	??_lcd_send_4bits^0,f,c
  2155   001784  EFBF  F00B         	goto	u1255
  2156   001788  503A               	movf	(??_lcd_send_4bits+1)^0,w,c
  2157   00178A  0B01               	andlw	1
  2158   00178C  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  2159   00178E  EC46  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  2160   001792  6E3B               	movwf	lcd_send_4bits@Retval^0,c
  2161   001794                     
  2162                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 22:         }
  2163   001794  4A3C               	infsnz	lcd_send_4bits@i^0,f,c
  2164   001796  2A3D               	incf	(lcd_send_4bits@i+1)^0,f,c
  2165   001798  BE3D               	btfsc	(lcd_send_4bits@i+1)^0,7,c
  2166   00179A  EFD8  F00B         	goto	u1261
  2167   00179E  503D               	movf	(lcd_send_4bits@i+1)^0,w,c
  2168   0017A0  E109               	bnz	u1260
  2169   0017A2  0E04               	movlw	4
  2170   0017A4  5C3C               	subwf	lcd_send_4bits@i^0,w,c
  2171   0017A6  A0D8               	btfss	status,0,c
  2172   0017A8  EFD8  F00B         	goto	u1261
  2173   0017AC  EFDA  F00B         	goto	u1260
  2174   0017B0                     u1261:
  2175   0017B0  EFB4  F00B         	goto	l2299
  2176   0017B4                     u1260:
  2177   0017B4                     l2305:
  2178                           
  2179                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 24:     return Retval;
  2180   0017B4  503B               	movf	lcd_send_4bits@Retval^0,w,c
  2181   0017B6  0012               	return		;funcret
  2182   0017B8                     __end_of_lcd_send_4bits:
  2183                           	callstack 0
  2184                           
  2185 ;; *************** function _lcd_4bit_send_enable_signal *****************
  2186 ;; Defined at:
  2187 ;;		line 26 in file "ECUAL/CHR_LCD/ECU_CHR_LCD.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  lcd             1    8[COMRAM] PTR const struct .
  2190 ;;		 -> lcd1(6), 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;  Retval          1    9[COMRAM] enum E3654
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  1    wreg      enum E3654
  2195 ;; Registers used:
  2196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2202 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2203 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2205 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;Total ram usage:        2 bytes
  2207 ;; Hardware stack levels used: 1
  2208 ;; Hardware stack levels required when called: 1
  2209 ;; This function calls:
  2210 ;;		_GPIO_PIN_WRITE_LOGIC
  2211 ;; This function is called by:
  2212 ;;		_LCD_4BIT_SEND_COMMAND
  2213 ;;		_LCD_4BIT_SEND_CHARACTER_DATA
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text13
  2218   0019BC                     __ptext13:
  2219                           	callstack 0
  2220   0019BC                     _lcd_4bit_send_enable_signal:
  2221                           	callstack 25
  2222   0019BC                     
  2223                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 28:     if(((void*)0) == lcd){
  2224   0019BC  5037               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2225   0019BE  A4D8               	btfss	status,2,c
  2226   0019C0  EFE4  F00C         	goto	u1271
  2227   0019C4  EFE6  F00C         	goto	u1270
  2228   0019C8                     u1271:
  2229   0019C8  EFEA  F00C         	goto	l2313
  2230   0019CC                     u1270:
  2231   0019CC                     
  2232                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 29:         Retval = E_NOT_OK;
  2233   0019CC  0E00               	movlw	0
  2234   0019CE  6E38               	movwf	lcd_4bit_send_enable_signal@Retval^0,c
  2235                           
  2236                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 30:     }
  2237   0019D0  EFFB  F00C         	goto	l2319
  2238   0019D4                     l2313:
  2239   0019D4  2837               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2240   0019D6  6E2F               	movwf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,c
  2241   0019D8  0E01               	movlw	1
  2242   0019DA  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  2243   0019DC  EC46  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  2244   0019E0                     
  2245                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 33:         _delay((unsigned long)((5)*(8000000UL/4000000.
      +                          0)));
  2246   0019E0  0E03               	movlw	3
  2247   0019E2                     u2137:
  2248   0019E2  2EE8               	decfsz	wreg,f,c
  2249   0019E4  D7FE               	bra	u2137
  2250   0019E6  0000               	nop	
  2251   0019E8                     
  2252                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 34:         Retval = GPIO_PIN_WRITE_LOGIC(&(lcd->EN_PIN) ,
      +                           GPIO_LOW);
  2253   0019E8  2837               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  2254   0019EA  6E2F               	movwf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,c
  2255   0019EC  0E00               	movlw	0
  2256   0019EE  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  2257   0019F0  EC46  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  2258   0019F4  6E38               	movwf	lcd_4bit_send_enable_signal@Retval^0,c
  2259   0019F6                     l2319:
  2260                           
  2261                           ;ECUAL/CHR_LCD/ECU_CHR_LCD.c: 36:     return Retval;
  2262   0019F6  5038               	movf	lcd_4bit_send_enable_signal@Retval^0,w,c
  2263   0019F8  0012               	return		;funcret
  2264   0019FA                     __end_of_lcd_4bit_send_enable_signal:
  2265                           	callstack 0
  2266                           
  2267 ;; *************** function _GPIO_PIN_INITIALIZE *****************
  2268 ;; Defined at:
  2269 ;;		line 156 in file "MCAL/GPIO/HAL_GPIO.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;  _PIN_CONFIG     1    8[COMRAM] PTR const struct .
  2272 ;;		 -> lcd2$DATA_PINS(8), lcd2(10), lcd1$DATA_PINS(4), lcd1(6), 
  2273 ;;		 -> RELAY_INITIALIZE@pin(1), LED_INITIALIZE@PIN_OBJ(1), 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;  Retval          1   10[COMRAM] enum E3654
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      enum E3654
  2278 ;; Registers used:
  2279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2285 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2286 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2287 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;Total ram usage:        3 bytes
  2290 ;; Hardware stack levels used: 1
  2291 ;; Hardware stack levels required when called: 1
  2292 ;; This function calls:
  2293 ;;		_GPIO_PIN_DIRECTION_INITIALIZE
  2294 ;;		_GPIO_PIN_WRITE_LOGIC
  2295 ;; This function is called by:
  2296 ;;		_LCD_4BIT_INITIALIZE
  2297 ;;		_LCD_8BIT_INITIALIZE
  2298 ;;		_SEGMENT_INITIALIZE
  2299 ;;		_DC_MOTOR_INITIALIZE
  2300 ;;		_KEYPAD_INITIALIZE
  2301 ;;		_LED_INITIALIZE
  2302 ;;		_RELAY_INITIALIZE
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           	psect	text14
  2307   001826                     __ptext14:
  2308                           	callstack 0
  2309   001826                     _GPIO_PIN_INITIALIZE:
  2310                           	callstack 26
  2311   001826                     
  2312                           ;MCAL/GPIO/HAL_GPIO.c: 158:     if(((void*)0) == _PIN_CONFIG || _PIN_CONFIG->PIN >= 8){
  2313   001826  5037               	movf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,w,c
  2314   001828  B4D8               	btfsc	status,2,c
  2315   00182A  EF19  F00C         	goto	u1291
  2316   00182E  EF1B  F00C         	goto	u1290
  2317   001832                     u1291:
  2318   001832  EF2B  F00C         	goto	l2341
  2319   001836                     u1290:
  2320   001836  5037               	movf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,w,c
  2321   001838  6ED9               	movwf	fsr2l,c
  2322   00183A  6ADA               	clrf	fsr2h,c
  2323   00183C  30DF               	rrcf	223,w,c
  2324   00183E  32E8               	rrcf	wreg,f,c
  2325   001840  32E8               	rrcf	wreg,f,c
  2326   001842  0B07               	andlw	7
  2327   001844  6E38               	movwf	??_GPIO_PIN_INITIALIZE^0,c
  2328   001846  0E07               	movlw	7
  2329   001848  6438               	cpfsgt	??_GPIO_PIN_INITIALIZE^0,c
  2330   00184A  EF29  F00C         	goto	u1301
  2331   00184E  EF2B  F00C         	goto	u1300
  2332   001852                     u1301:
  2333   001852  EF2F  F00C         	goto	l2343
  2334   001856                     u1300:
  2335   001856                     l2341:
  2336                           
  2337                           ;MCAL/GPIO/HAL_GPIO.c: 159:         Retval = E_NOT_OK;
  2338   001856  0E00               	movlw	0
  2339   001858  6E39               	movwf	GPIO_PIN_INITIALIZE@Retval^0,c
  2340                           
  2341                           ;MCAL/GPIO/HAL_GPIO.c: 160:     }
  2342   00185A  EF40  F00C         	goto	l2347
  2343   00185E                     l2343:
  2344                           
  2345                           ;MCAL/GPIO/HAL_GPIO.c: 162:         GPIO_PIN_DIRECTION_INITIALIZE(_PIN_CONFIG);
  2346   00185E  C037  F02F         	movff	GPIO_PIN_INITIALIZE@_PIN_CONFIG,GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG
  2347   001862  ECBD  F008         	call	_GPIO_PIN_DIRECTION_INITIALIZE	;wreg free
  2348                           
  2349                           ;MCAL/GPIO/HAL_GPIO.c: 163:         GPIO_PIN_WRITE_LOGIC(_PIN_CONFIG,_PIN_CONFIG->LOGIC)
      +                          ;
  2350   001866  C037  F02F         	movff	GPIO_PIN_INITIALIZE@_PIN_CONFIG,GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG
  2351   00186A  5037               	movf	GPIO_PIN_INITIALIZE@_PIN_CONFIG^0,w,c
  2352   00186C  6ED9               	movwf	fsr2l,c
  2353   00186E  6ADA               	clrf	fsr2h,c
  2354   001870  0E00               	movlw	0
  2355   001872  BEDF               	btfsc	indf2,7,c
  2356   001874  0E01               	movlw	1
  2357   001876  6E30               	movwf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,c
  2358   001878  EC46  F009         	call	_GPIO_PIN_WRITE_LOGIC	;wreg free
  2359   00187C                     
  2360                           ;MCAL/GPIO/HAL_GPIO.c: 164:         Retval = E_OK;
  2361   00187C  0E01               	movlw	1
  2362   00187E  6E39               	movwf	GPIO_PIN_INITIALIZE@Retval^0,c
  2363   001880                     l2347:
  2364                           
  2365                           ;MCAL/GPIO/HAL_GPIO.c: 166:     return Retval;
  2366   001880  5039               	movf	GPIO_PIN_INITIALIZE@Retval^0,w,c
  2367   001882  0012               	return		;funcret
  2368   001884                     __end_of_GPIO_PIN_INITIALIZE:
  2369                           	callstack 0
  2370                           
  2371 ;; *************** function _GPIO_PIN_WRITE_LOGIC *****************
  2372 ;; Defined at:
  2373 ;;		line 84 in file "MCAL/GPIO/HAL_GPIO.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  _PIN_CONFIG     1    0[COMRAM] PTR const struct .
  2376 ;;		 -> lcd2$DATA_PINS(8), lcd2(10), lcd1$DATA_PINS(4), lcd1(6), 
  2377 ;;		 -> RELAY_TURN_OFF@pin(1), RELAY_TURN_ON@pin(1), RELAY_INITIALIZE@pin(1), LED_Turn_OFF@PIN_OBJ(1), 
  2378 ;;		 -> LED_Turn_ON@PIN_OBJ(1), LED_INITIALIZE@PIN_OBJ(1), 
  2379 ;;  LOGIC           1    1[COMRAM] enum E3658
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;  Retval          1    7[COMRAM] enum E3654
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  1    wreg      enum E3654
  2384 ;; Registers used:
  2385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2392 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2393 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2394 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2395 ;;Total ram usage:        8 bytes
  2396 ;; Hardware stack levels used: 1
  2397 ;; This function calls:
  2398 ;;		Nothing
  2399 ;; This function is called by:
  2400 ;;		_GPIO_PIN_INITIALIZE
  2401 ;;		_lcd_send_4bits
  2402 ;;		_lcd_4bit_send_enable_signal
  2403 ;;		_lcd_8bit_send_enable_signal
  2404 ;;		_lcd_8bit_set_cursor
  2405 ;;		_LCD_4BIT_SEND_COMMAND
  2406 ;;		_LCD_8BIT_INITIALIZE
  2407 ;;		_LCD_8BIT_SEND_COMMAND
  2408 ;;		_LCD_8BIT_SEND_CHARACTER_DATA
  2409 ;;		_SEGMENT_WRITE_NUMBER
  2410 ;;		_DC_MOTOR_ROTATE_CW
  2411 ;;		_DC_MOTOR_ROTATE_CCW
  2412 ;;		_DC_MOTOR_STOP
  2413 ;;		_KEYPAD_GET_VALUE
  2414 ;;		_LED_Turn_ON
  2415 ;;		_LED_Turn_OFF
  2416 ;;		_RELAY_TURN_ON
  2417 ;;		_RELAY_TURN_OFF
  2418 ;;		_lcd_4bit_set_cursor
  2419 ;;		_LCD_4BIT_SEND_CHARACTER_DATA
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text15
  2424   00128C                     __ptext15:
  2425                           	callstack 0
  2426   00128C                     _GPIO_PIN_WRITE_LOGIC:
  2427                           	callstack 27
  2428   00128C                     
  2429                           ;MCAL/GPIO/HAL_GPIO.c: 86:     if(((void*)0) == _PIN_CONFIG || _PIN_CONFIG->PIN >= 8){
  2430   00128C  502F               	movf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,w,c
  2431   00128E  B4D8               	btfsc	status,2,c
  2432   001290  EF4C  F009         	goto	u1151
  2433   001294  EF4E  F009         	goto	u1150
  2434   001298                     u1151:
  2435   001298  EF5E  F009         	goto	l2241
  2436   00129C                     u1150:
  2437   00129C  502F               	movf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,w,c
  2438   00129E  6ED9               	movwf	fsr2l,c
  2439   0012A0  6ADA               	clrf	fsr2h,c
  2440   0012A2  30DF               	rrcf	223,w,c
  2441   0012A4  32E8               	rrcf	wreg,f,c
  2442   0012A6  32E8               	rrcf	wreg,f,c
  2443   0012A8  0B07               	andlw	7
  2444   0012AA  6E31               	movwf	??_GPIO_PIN_WRITE_LOGIC^0,c
  2445   0012AC  0E07               	movlw	7
  2446   0012AE  6431               	cpfsgt	??_GPIO_PIN_WRITE_LOGIC^0,c
  2447   0012B0  EF5C  F009         	goto	u1161
  2448   0012B4  EF5E  F009         	goto	u1160
  2449   0012B8                     u1161:
  2450   0012B8  EFB7  F009         	goto	l2255
  2451   0012BC                     u1160:
  2452   0012BC                     l2241:
  2453                           
  2454                           ;MCAL/GPIO/HAL_GPIO.c: 87:         Retval= E_NOT_OK;
  2455   0012BC  0E00               	movlw	0
  2456   0012BE  6E36               	movwf	GPIO_PIN_WRITE_LOGIC@Retval^0,c
  2457                           
  2458                           ;MCAL/GPIO/HAL_GPIO.c: 88:     }
  2459   0012C0  EFCC  F009         	goto	l2257
  2460   0012C4                     l2243:
  2461                           
  2462                           ;MCAL/GPIO/HAL_GPIO.c: 92:                 (*LAT_REG[_PIN_CONFIG->PORT] &= ~(((uint8)0x0
      +                          1) << _PIN_CONFIG->PIN));
  2463   0012C4  502F               	movf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,w,c
  2464   0012C6  6ED9               	movwf	fsr2l,c
  2465   0012C8  6ADA               	clrf	fsr2h,c
  2466   0012CA  30DF               	rrcf	223,w,c
  2467   0012CC  32E8               	rrcf	wreg,f,c
  2468   0012CE  32E8               	rrcf	wreg,f,c
  2469   0012D0  0B07               	andlw	7
  2470   0012D2  6E31               	movwf	??_GPIO_PIN_WRITE_LOGIC^0,c
  2471   0012D4  0E01               	movlw	1
  2472   0012D6  6E32               	movwf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,c
  2473   0012D8  2A31               	incf	??_GPIO_PIN_WRITE_LOGIC^0,f,c
  2474   0012DA  EF71  F009         	goto	u1174
  2475   0012DE                     u1175:
  2476   0012DE  90D8               	bcf	status,0,c
  2477   0012E0  3632               	rlcf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,f,c
  2478   0012E2                     u1174:
  2479   0012E2  2E31               	decfsz	??_GPIO_PIN_WRITE_LOGIC^0,f,c
  2480   0012E4  EF6F  F009         	goto	u1175
  2481   0012E8  5032               	movf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,w,c
  2482   0012EA  0AFF               	xorlw	255
  2483   0012EC  6E33               	movwf	(??_GPIO_PIN_WRITE_LOGIC+2)^0,c
  2484   0012EE  502F               	movf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,w,c
  2485   0012F0  6ED9               	movwf	fsr2l,c
  2486   0012F2  6ADA               	clrf	fsr2h,c
  2487   0012F4  50DF               	movf	223,w,c
  2488   0012F6  0B07               	andlw	7
  2489   0012F8  0D02               	mullw	2
  2490   0012FA  50F3               	movf	243,w,c
  2491   0012FC  0F01               	addlw	low _LAT_REG
  2492   0012FE  6ED9               	movwf	fsr2l,c
  2493   001300  6ADA               	clrf	fsr2h,c
  2494   001302  CFDE F034          	movff	postinc2,??_GPIO_PIN_WRITE_LOGIC+3
  2495   001306  CFDD F035          	movff	postdec2,??_GPIO_PIN_WRITE_LOGIC+4
  2496   00130A  C034  FFD9         	movff	??_GPIO_PIN_WRITE_LOGIC+3,fsr2l
  2497   00130E  C035  FFDA         	movff	??_GPIO_PIN_WRITE_LOGIC+4,fsr2h
  2498   001312  5033               	movf	(??_GPIO_PIN_WRITE_LOGIC+2)^0,w,c
  2499   001314  16DF               	andwf	indf2,f,c
  2500   001316                     l2245:
  2501                           
  2502                           ;MCAL/GPIO/HAL_GPIO.c: 93:                 Retval = E_OK;
  2503   001316  0E01               	movlw	1
  2504   001318  6E36               	movwf	GPIO_PIN_WRITE_LOGIC@Retval^0,c
  2505                           
  2506                           ;MCAL/GPIO/HAL_GPIO.c: 94:                 break;
  2507   00131A  EFCC  F009         	goto	l2257
  2508   00131E                     l2247:
  2509                           
  2510                           ;MCAL/GPIO/HAL_GPIO.c: 96:                 (*LAT_REG[_PIN_CONFIG->PORT] |= (((uint8)0x01
      +                          ) << _PIN_CONFIG->PIN));
  2511   00131E  502F               	movf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,w,c
  2512   001320  6ED9               	movwf	fsr2l,c
  2513   001322  6ADA               	clrf	fsr2h,c
  2514   001324  30DF               	rrcf	223,w,c
  2515   001326  32E8               	rrcf	wreg,f,c
  2516   001328  32E8               	rrcf	wreg,f,c
  2517   00132A  0B07               	andlw	7
  2518   00132C  6E31               	movwf	??_GPIO_PIN_WRITE_LOGIC^0,c
  2519   00132E  0E01               	movlw	1
  2520   001330  6E32               	movwf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,c
  2521   001332  2A31               	incf	??_GPIO_PIN_WRITE_LOGIC^0,f,c
  2522   001334  EF9E  F009         	goto	u1184
  2523   001338                     u1185:
  2524   001338  90D8               	bcf	status,0,c
  2525   00133A  3632               	rlcf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,f,c
  2526   00133C                     u1184:
  2527   00133C  2E31               	decfsz	??_GPIO_PIN_WRITE_LOGIC^0,f,c
  2528   00133E  EF9C  F009         	goto	u1185
  2529   001342  502F               	movf	GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG^0,w,c
  2530   001344  6ED9               	movwf	fsr2l,c
  2531   001346  6ADA               	clrf	fsr2h,c
  2532   001348  50DF               	movf	223,w,c
  2533   00134A  0B07               	andlw	7
  2534   00134C  0D02               	mullw	2
  2535   00134E  50F3               	movf	243,w,c
  2536   001350  0F01               	addlw	low _LAT_REG
  2537   001352  6ED9               	movwf	fsr2l,c
  2538   001354  6ADA               	clrf	fsr2h,c
  2539   001356  CFDE F033          	movff	postinc2,??_GPIO_PIN_WRITE_LOGIC+2
  2540   00135A  CFDD F034          	movff	postdec2,??_GPIO_PIN_WRITE_LOGIC+3
  2541   00135E  C033  FFD9         	movff	??_GPIO_PIN_WRITE_LOGIC+2,fsr2l
  2542   001362  C034  FFDA         	movff	??_GPIO_PIN_WRITE_LOGIC+3,fsr2h
  2543   001366  5032               	movf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,w,c
  2544   001368  12DF               	iorwf	indf2,f,c
  2545   00136A  EF8B  F009         	goto	l2245
  2546   00136E                     l2255:
  2547   00136E  5030               	movf	GPIO_PIN_WRITE_LOGIC@LOGIC^0,w,c
  2548   001370  6E31               	movwf	??_GPIO_PIN_WRITE_LOGIC^0,c
  2549   001372  6A32               	clrf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,c
  2550                           
  2551                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2552                           ; Switch size 1, requested type "simple"
  2553                           ; Number of cases is 1, Range of values is 0 to 0
  2554                           ; switch strategies available:
  2555                           ; Name         Instructions Cycles
  2556                           ; simple_byte            4     3 (average)
  2557                           ;	Chosen strategy is simple_byte
  2558   001374  5032               	movf	(??_GPIO_PIN_WRITE_LOGIC+1)^0,w,c
  2559   001376  0A00               	xorlw	0	; case 0
  2560   001378  B4D8               	btfsc	status,2,c
  2561   00137A  EFC1  F009         	goto	l3067
  2562   00137E  EF5E  F009         	goto	l2241
  2563   001382                     l3067:
  2564                           
  2565                           ; Switch size 1, requested type "simple"
  2566                           ; Number of cases is 2, Range of values is 0 to 1
  2567                           ; switch strategies available:
  2568                           ; Name         Instructions Cycles
  2569                           ; simple_byte            7     4 (average)
  2570                           ;	Chosen strategy is simple_byte
  2571   001382  5031               	movf	??_GPIO_PIN_WRITE_LOGIC^0,w,c
  2572   001384  0A00               	xorlw	0	; case 0
  2573   001386  B4D8               	btfsc	status,2,c
  2574   001388  EF62  F009         	goto	l2243
  2575   00138C  0A01               	xorlw	1	; case 1
  2576   00138E  B4D8               	btfsc	status,2,c
  2577   001390  EF8F  F009         	goto	l2247
  2578   001394  EF5E  F009         	goto	l2241
  2579   001398                     l2257:
  2580                           
  2581                           ;MCAL/GPIO/HAL_GPIO.c: 104:     return Retval;
  2582   001398  5036               	movf	GPIO_PIN_WRITE_LOGIC@Retval^0,w,c
  2583   00139A  0012               	return		;funcret
  2584   00139C                     __end_of_GPIO_PIN_WRITE_LOGIC:
  2585                           	callstack 0
  2586                           
  2587 ;; *************** function _GPIO_PIN_DIRECTION_INITIALIZE *****************
  2588 ;; Defined at:
  2589 ;;		line 29 in file "MCAL/GPIO/HAL_GPIO.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;  _PIN_CONFIG     1    0[COMRAM] PTR const struct .
  2592 ;;		 -> lcd2$DATA_PINS(8), lcd2(10), lcd1$DATA_PINS(4), lcd1(6), 
  2593 ;;		 -> RELAY_INITIALIZE@pin(1), LED_INITIALIZE@PIN_OBJ(1), 
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;  Retval          1    6[COMRAM] enum E3654
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  1    wreg      enum E3654
  2598 ;; Registers used:
  2599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2605 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2609 ;;Total ram usage:        7 bytes
  2610 ;; Hardware stack levels used: 1
  2611 ;; This function calls:
  2612 ;;		Nothing
  2613 ;; This function is called by:
  2614 ;;		_GPIO_PIN_INITIALIZE
  2615 ;;		_BUTTON_INITIALIZE
  2616 ;;		_KEYPAD_INITIALIZE
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           	psect	text16
  2621   00117A                     __ptext16:
  2622                           	callstack 0
  2623   00117A                     _GPIO_PIN_DIRECTION_INITIALIZE:
  2624                           	callstack 26
  2625   00117A                     
  2626                           ;MCAL/GPIO/HAL_GPIO.c: 31:     if(((void*)0) == _PIN_CONFIG || _PIN_CONFIG->PIN >= 8){
  2627   00117A  502F               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
  2628   00117C  B4D8               	btfsc	status,2,c
  2629   00117E  EFC3  F008         	goto	u1191
  2630   001182  EFC5  F008         	goto	u1190
  2631   001186                     u1191:
  2632   001186  EFD5  F008         	goto	l2269
  2633   00118A                     u1190:
  2634   00118A  502F               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
  2635   00118C  6ED9               	movwf	fsr2l,c
  2636   00118E  6ADA               	clrf	fsr2h,c
  2637   001190  30DF               	rrcf	223,w,c
  2638   001192  32E8               	rrcf	wreg,f,c
  2639   001194  32E8               	rrcf	wreg,f,c
  2640   001196  0B07               	andlw	7
  2641   001198  6E30               	movwf	??_GPIO_PIN_DIRECTION_INITIALIZE^0,c
  2642   00119A  0E07               	movlw	7
  2643   00119C  6430               	cpfsgt	??_GPIO_PIN_DIRECTION_INITIALIZE^0,c
  2644   00119E  EFD3  F008         	goto	u1201
  2645   0011A2  EFD5  F008         	goto	u1200
  2646   0011A6                     u1201:
  2647   0011A6  EF2E  F009         	goto	l2283
  2648   0011AA                     u1200:
  2649   0011AA                     l2269:
  2650                           
  2651                           ;MCAL/GPIO/HAL_GPIO.c: 32:         Retval = E_NOT_OK;
  2652   0011AA  0E00               	movlw	0
  2653   0011AC  6E35               	movwf	GPIO_PIN_DIRECTION_INITIALIZE@Retval^0,c
  2654                           
  2655                           ;MCAL/GPIO/HAL_GPIO.c: 33:     }
  2656   0011AE  EF44  F009         	goto	l2285
  2657   0011B2                     l2271:
  2658                           
  2659                           ;MCAL/GPIO/HAL_GPIO.c: 37:                 (*TRIS_REG[_PIN_CONFIG->PORT] &= ~(((uint8)0x
      +                          01) << _PIN_CONFIG->PIN));
  2660   0011B2  502F               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
  2661   0011B4  6ED9               	movwf	fsr2l,c
  2662   0011B6  6ADA               	clrf	fsr2h,c
  2663   0011B8  30DF               	rrcf	223,w,c
  2664   0011BA  32E8               	rrcf	wreg,f,c
  2665   0011BC  32E8               	rrcf	wreg,f,c
  2666   0011BE  0B07               	andlw	7
  2667   0011C0  6E30               	movwf	??_GPIO_PIN_DIRECTION_INITIALIZE^0,c
  2668   0011C2  0E01               	movlw	1
  2669   0011C4  6E31               	movwf	(??_GPIO_PIN_DIRECTION_INITIALIZE+1)^0,c
  2670   0011C6  2A30               	incf	??_GPIO_PIN_DIRECTION_INITIALIZE^0,f,c
  2671   0011C8  EFE8  F008         	goto	u1214
  2672   0011CC                     u1215:
  2673   0011CC  90D8               	bcf	status,0,c
  2674   0011CE  3631               	rlcf	(??_GPIO_PIN_DIRECTION_INITIALIZE+1)^0,f,c
  2675   0011D0                     u1214:
  2676   0011D0  2E30               	decfsz	??_GPIO_PIN_DIRECTION_INITIALIZE^0,f,c
  2677   0011D2  EFE6  F008         	goto	u1215
  2678   0011D6  5031               	movf	(??_GPIO_PIN_DIRECTION_INITIALIZE+1)^0,w,c
  2679   0011D8  0AFF               	xorlw	255
  2680   0011DA  6E32               	movwf	(??_GPIO_PIN_DIRECTION_INITIALIZE+2)^0,c
  2681   0011DC  502F               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
  2682   0011DE  6ED9               	movwf	fsr2l,c
  2683   0011E0  6ADA               	clrf	fsr2h,c
  2684   0011E2  50DF               	movf	223,w,c
  2685   0011E4  0B07               	andlw	7
  2686   0011E6  0D02               	mullw	2
  2687   0011E8  50F3               	movf	243,w,c
  2688   0011EA  0F15               	addlw	low _TRIS_REG
  2689   0011EC  6ED9               	movwf	fsr2l,c
  2690   0011EE  6ADA               	clrf	fsr2h,c
  2691   0011F0  CFDE F033          	movff	postinc2,??_GPIO_PIN_DIRECTION_INITIALIZE+3
  2692   0011F4  CFDD F034          	movff	postdec2,??_GPIO_PIN_DIRECTION_INITIALIZE+4
  2693   0011F8  C033  FFD9         	movff	??_GPIO_PIN_DIRECTION_INITIALIZE+3,fsr2l
  2694   0011FC  C034  FFDA         	movff	??_GPIO_PIN_DIRECTION_INITIALIZE+4,fsr2h
  2695   001200  5032               	movf	(??_GPIO_PIN_DIRECTION_INITIALIZE+2)^0,w,c
  2696   001202  16DF               	andwf	indf2,f,c
  2697   001204                     l2273:
  2698                           
  2699                           ;MCAL/GPIO/HAL_GPIO.c: 38:                 Retval = E_OK;
  2700   001204  0E01               	movlw	1
  2701   001206  6E35               	movwf	GPIO_PIN_DIRECTION_INITIALIZE@Retval^0,c
  2702                           
  2703                           ;MCAL/GPIO/HAL_GPIO.c: 39:                 break;
  2704   001208  EF44  F009         	goto	l2285
  2705   00120C                     l2275:
  2706                           
  2707                           ;MCAL/GPIO/HAL_GPIO.c: 41:                 (*TRIS_REG[_PIN_CONFIG->PORT] |= (((uint8)0x0
      +                          1) << _PIN_CONFIG->PIN));
  2708   00120C  502F               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
  2709   00120E  6ED9               	movwf	fsr2l,c
  2710   001210  6ADA               	clrf	fsr2h,c
  2711   001212  30DF               	rrcf	223,w,c
  2712   001214  32E8               	rrcf	wreg,f,c
  2713   001216  32E8               	rrcf	wreg,f,c
  2714   001218  0B07               	andlw	7
  2715   00121A  6E30               	movwf	??_GPIO_PIN_DIRECTION_INITIALIZE^0,c
  2716   00121C  0E01               	movlw	1
  2717   00121E  6E31               	movwf	(??_GPIO_PIN_DIRECTION_INITIALIZE+1)^0,c
  2718   001220  2A30               	incf	??_GPIO_PIN_DIRECTION_INITIALIZE^0,f,c
  2719   001222  EF15  F009         	goto	u1224
  2720   001226                     u1225:
  2721   001226  90D8               	bcf	status,0,c
  2722   001228  3631               	rlcf	(??_GPIO_PIN_DIRECTION_INITIALIZE+1)^0,f,c
  2723   00122A                     u1224:
  2724   00122A  2E30               	decfsz	??_GPIO_PIN_DIRECTION_INITIALIZE^0,f,c
  2725   00122C  EF13  F009         	goto	u1225
  2726   001230  502F               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
  2727   001232  6ED9               	movwf	fsr2l,c
  2728   001234  6ADA               	clrf	fsr2h,c
  2729   001236  50DF               	movf	223,w,c
  2730   001238  0B07               	andlw	7
  2731   00123A  0D02               	mullw	2
  2732   00123C  50F3               	movf	243,w,c
  2733   00123E  0F15               	addlw	low _TRIS_REG
  2734   001240  6ED9               	movwf	fsr2l,c
  2735   001242  6ADA               	clrf	fsr2h,c
  2736   001244  CFDE F032          	movff	postinc2,??_GPIO_PIN_DIRECTION_INITIALIZE+2
  2737   001248  CFDD F033          	movff	postdec2,??_GPIO_PIN_DIRECTION_INITIALIZE+3
  2738   00124C  C032  FFD9         	movff	??_GPIO_PIN_DIRECTION_INITIALIZE+2,fsr2l
  2739   001250  C033  FFDA         	movff	??_GPIO_PIN_DIRECTION_INITIALIZE+3,fsr2h
  2740   001254  5031               	movf	(??_GPIO_PIN_DIRECTION_INITIALIZE+1)^0,w,c
  2741   001256  12DF               	iorwf	indf2,f,c
  2742   001258  EF02  F009         	goto	l2273
  2743   00125C                     l2283:
  2744   00125C  502F               	movf	GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG^0,w,c
  2745   00125E  6ED9               	movwf	fsr2l,c
  2746   001260  6ADA               	clrf	fsr2h,c
  2747   001262  BCDF               	btfsc	indf2,6,c
  2748   001264  EF36  F009         	goto	u1231
  2749   001268  EF39  F009         	goto	u1230
  2750   00126C                     u1231:
  2751   00126C  0E01               	movlw	1
  2752   00126E  EF3A  F009         	goto	u1236
  2753   001272                     u1230:
  2754   001272  0E00               	movlw	0
  2755   001274                     u1236:
  2756                           
  2757                           ; Switch size 1, requested type "simple"
  2758                           ; Number of cases is 2, Range of values is 0 to 1
  2759                           ; switch strategies available:
  2760                           ; Name         Instructions Cycles
  2761                           ; simple_byte            7     4 (average)
  2762                           ;	Chosen strategy is simple_byte
  2763   001274  0A00               	xorlw	0	; case 0
  2764   001276  B4D8               	btfsc	status,2,c
  2765   001278  EFD9  F008         	goto	l2271
  2766   00127C  0A01               	xorlw	1	; case 1
  2767   00127E  B4D8               	btfsc	status,2,c
  2768   001280  EF06  F009         	goto	l2275
  2769   001284  EFD5  F008         	goto	l2269
  2770   001288                     l2285:
  2771                           
  2772                           ;MCAL/GPIO/HAL_GPIO.c: 49:     return Retval;
  2773   001288  5035               	movf	GPIO_PIN_DIRECTION_INITIALIZE@Retval^0,w,c
  2774   00128A  0012               	return		;funcret
  2775   00128C                     __end_of_GPIO_PIN_DIRECTION_INITIALIZE:
  2776                           	callstack 0
  2777                           
  2778                           	psect	rparam
  2779   000000                     
  2780                           	psect	config
  2781                           
  2782                           ; Padding undefined space
  2783   300000                     	org	3145728
  2784   300000  FF                 	db	255
  2785                           
  2786                           ;Config register CONFIG1H @ 0x300001
  2787                           ;	Oscillator Selection bits
  2788                           ;	FOSC = HS, HS oscillator
  2789                           ;	Fail-Safe Clock Monitor Enable bit
  2790                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2791                           ;	Internal/External Oscillator Switchover bit
  2792                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2793   300001                     	org	3145729
  2794   300001  02                 	db	2
  2795                           
  2796                           ;Config register CONFIG2L @ 0x300002
  2797                           ;	Power-up Timer Enable bit
  2798                           ;	PWRTEN = OFF, PWRT disabled
  2799                           ;	Brown-out Reset Enable bits
  2800                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2801                           ;	Brown Out Reset Voltage bits
  2802                           ;	BORV = 18, VBOR set to 1.8 V nominal
  2803   300002                     	org	3145730
  2804   300002  19                 	db	25
  2805                           
  2806                           ;Config register CONFIG2H @ 0x300003
  2807                           ;	Watchdog Timer Enable bit
  2808                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  2809                           ;	Watchdog Timer Postscale Select bits
  2810                           ;	WDTPS = 32768, 1:32768
  2811   300003                     	org	3145731
  2812   300003  1E                 	db	30
  2813                           
  2814                           ; Padding undefined space
  2815   300004                     	org	3145732
  2816   300004  FF                 	db	255
  2817                           
  2818                           ;Config register CONFIG3H @ 0x300005
  2819                           ;	CCP2 MUX bit
  2820                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2821                           ;	PORTB A/D Enable bit
  2822                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2823                           ;	Low-Power Timer1 Oscillator Enable bit
  2824                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2825                           ;	HFINTOSC Fast Start-up
  2826                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  2827                           ;	MCLR Pin Enable bit
  2828                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2829   300005                     	org	3145733
  2830   300005  89                 	db	137
  2831                           
  2832                           ;Config register CONFIG4L @ 0x300006
  2833                           ;	Stack Full/Underflow Reset Enable bit
  2834                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2835                           ;	Single-Supply ICSP Enable bit
  2836                           ;	LVP = OFF, Single-Supply ICSP disabled
  2837                           ;	Extended Instruction Set Enable bit
  2838                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2839                           ;	Background Debugger Enable bit
  2840                           ;	DEBUG = 0x1, unprogrammed default
  2841   300006                     	org	3145734
  2842   300006  81                 	db	129
  2843                           
  2844                           ; Padding undefined space
  2845   300007                     	org	3145735
  2846   300007  FF                 	db	255
  2847                           
  2848                           ;Config register CONFIG5L @ 0x300008
  2849                           ;	Code Protection Block 0
  2850                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2851                           ;	Code Protection Block 1
  2852                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2853                           ;	Code Protection Block 2
  2854                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2855                           ;	Code Protection Block 3
  2856                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2857   300008                     	org	3145736
  2858   300008  0F                 	db	15
  2859                           
  2860                           ;Config register CONFIG5H @ 0x300009
  2861                           ;	Boot Block Code Protection bit
  2862                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2863                           ;	Data EEPROM Code Protection bit
  2864                           ;	CPD = OFF, Data EEPROM not code-protected
  2865   300009                     	org	3145737
  2866   300009  C0                 	db	192
  2867                           
  2868                           ;Config register CONFIG6L @ 0x30000A
  2869                           ;	Write Protection Block 0
  2870                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2871                           ;	Write Protection Block 1
  2872                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2873                           ;	Write Protection Block 2
  2874                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2875                           ;	Write Protection Block 3
  2876                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  2877   30000A                     	org	3145738
  2878   30000A  0F                 	db	15
  2879                           
  2880                           ;Config register CONFIG6H @ 0x30000B
  2881                           ;	Configuration Register Write Protection bit
  2882                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2883                           ;	Boot Block Write Protection bit
  2884                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2885                           ;	Data EEPROM Write Protection bit
  2886                           ;	WRTD = OFF, Data EEPROM not write-protected
  2887   30000B                     	org	3145739
  2888   30000B  E0                 	db	224
  2889                           
  2890                           ;Config register CONFIG7L @ 0x30000C
  2891                           ;	Table Read Protection Block 0
  2892                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2893                           ;	Table Read Protection Block 1
  2894                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2895                           ;	Table Read Protection Block 2
  2896                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2897                           ;	Table Read Protection Block 3
  2898                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2899   30000C                     	org	3145740
  2900   30000C  0F                 	db	15
  2901                           
  2902                           ;Config register CONFIG7H @ 0x30000D
  2903                           ;	Boot Block Table Read Protection bit
  2904                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2905   30000D                     	org	3145741
  2906   30000D  40                 	db	64
  2907                           tosu	equ	0xFFF
  2908                           tosh	equ	0xFFE
  2909                           tosl	equ	0xFFD
  2910                           stkptr	equ	0xFFC
  2911                           pclatu	equ	0xFFB
  2912                           pclath	equ	0xFFA
  2913                           pcl	equ	0xFF9
  2914                           tblptru	equ	0xFF8
  2915                           tblptrh	equ	0xFF7
  2916                           tblptrl	equ	0xFF6
  2917                           tablat	equ	0xFF5
  2918                           prodh	equ	0xFF4
  2919                           prodl	equ	0xFF3
  2920                           indf0	equ	0xFEF
  2921                           postinc0	equ	0xFEE
  2922                           postdec0	equ	0xFED
  2923                           preinc0	equ	0xFEC
  2924                           plusw0	equ	0xFEB
  2925                           fsr0h	equ	0xFEA
  2926                           fsr0l	equ	0xFE9
  2927                           wreg	equ	0xFE8
  2928                           indf1	equ	0xFE7
  2929                           postinc1	equ	0xFE6
  2930                           postdec1	equ	0xFE5
  2931                           preinc1	equ	0xFE4
  2932                           plusw1	equ	0xFE3
  2933                           fsr1h	equ	0xFE2
  2934                           fsr1l	equ	0xFE1
  2935                           bsr	equ	0xFE0
  2936                           indf2	equ	0xFDF
  2937                           postinc2	equ	0xFDE
  2938                           postdec2	equ	0xFDD
  2939                           preinc2	equ	0xFDC
  2940                           plusw2	equ	0xFDB
  2941                           fsr2h	equ	0xFDA
  2942                           fsr2l	equ	0xFD9
  2943                           status	equ	0xFD8

Data Sizes:
    Strings     59
    Constant    16
    Data        118
    BSS         7
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     35      89
    BANK0           160      0      72
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[6]), lcd1$DATA_PINS(COMRAM[4]), lcd2(COMRAM[10]), lcd2$DATA_PINS(COMRAM[8]), 
		 -> LED_INITIALIZE@PIN_OBJ(COMRAM[1]), RELAY_INITIALIZE@pin(COMRAM[1]), 

    GPIO_PIN_INITIALIZE@_PIN_CONFIG	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[6]), lcd1$DATA_PINS(COMRAM[4]), lcd2(COMRAM[10]), lcd2$DATA_PINS(COMRAM[8]), 
		 -> LED_INITIALIZE@PIN_OBJ(COMRAM[1]), RELAY_INITIALIZE@pin(COMRAM[1]), 

    GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG	PTR const struct . size(1) Largest target is 10
		 -> lcd1(COMRAM[6]), lcd1$DATA_PINS(COMRAM[4]), lcd2(COMRAM[10]), lcd2$DATA_PINS(COMRAM[8]), 
		 -> LED_INITIALIZE@PIN_OBJ(COMRAM[1]), LED_Turn_OFF@PIN_OBJ(COMRAM[1]), LED_Turn_ON@PIN_OBJ(COMRAM[1]), RELAY_INITIALIZE@pin(COMRAM[1]), 
		 -> RELAY_TURN_OFF@pin(COMRAM[1]), RELAY_TURN_ON@pin(COMRAM[1]), 

    LAT_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlhl[1]), LATB(BITBIGSFRlhh[1]), LATC(BITBIGSFRlhh[1]), LATD(BITBIGSFRlhh[1]), 
		 -> LATE(BITBIGSFRlhh[1]), 

    LCD_4BIT_INITIALIZE@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    LCD_4BIT_SEND_COMMAND@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    LCD_8BIT_INITIALIZE@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    LCD_8BIT_SEND_CHARACTER_DATA@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    LCD_8BIT_SEND_CHARACTER_DATA_POS@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    LCD_8BIT_SEND_COMMAND@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    LCD_8BIT_SEND_CUSTOM_CHARACTER@chr	PTR unsigned char  size(1) Largest target is 8
		 -> low_battery_00(BANK0[8]), low_battery_100(BANK0[8]), low_battery_20(BANK0[8]), low_battery_40(BANK0[8]), 
		 -> low_battery_60(BANK0[8]), low_battery_80(BANK0[8]), 

    LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    PORT_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRlhl[1]), PORTC(BITBIGSFRlhl[1]), PORTD(BITBIGSFRlhl[1]), 
		 -> PORTE(BITBIGSFRlhl[1]), 

    S1375$buffer	PTR unsigned char  size(2) Largest target is 0

    S1375$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    TRIS_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_10(CODE[3]), STR_8(CODE[3]), STR_9(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_LCD_8BIT_SEND_CUSTOM_CHARACTER
    _LCD_8BIT_SEND_CUSTOM_CHARACTER->_LCD_8BIT_SEND_CHARACTER_DATA_POS
    _LCD_8BIT_SEND_CHARACTER_DATA_POS->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_LCD_8BIT_SEND_COMMAND
    _LCD_8BIT_SEND_CHARACTER_DATA->_lcd_8bit_send_enable_signal
    _ECU_LAYER_INITIALIZE->_LCD_4BIT_INITIALIZE
    _LCD_8BIT_INITIALIZE->_LCD_8BIT_SEND_COMMAND
    _LCD_8BIT_SEND_COMMAND->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_GPIO_PIN_WRITE_LOGIC
    _LCD_4BIT_INITIALIZE->_LCD_4BIT_SEND_COMMAND
    _LCD_4BIT_SEND_COMMAND->_lcd_send_4bits
    _lcd_send_4bits->_GPIO_PIN_WRITE_LOGIC
    _lcd_4bit_send_enable_signal->_GPIO_PIN_WRITE_LOGIC
    _GPIO_PIN_INITIALIZE->_GPIO_PIN_WRITE_LOGIC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   96992
                                             33 COMRAM     2     2      0
              _Application_intialize
     _LCD_8BIT_SEND_CUSTOM_CHARACTER
 ---------------------------------------------------------------------------------
 (1) _LCD_8BIT_SEND_CUSTOM_CHARACTER                       7     2      5   51357
                                             26 COMRAM     7     2      5
       _LCD_8BIT_SEND_CHARACTER_DATA
   _LCD_8BIT_SEND_CHARACTER_DATA_POS
              _LCD_8BIT_SEND_COMMAND
 ---------------------------------------------------------------------------------
 (2) _LCD_8BIT_SEND_CHARACTER_DATA_POS                     5     1      4   27358
                                             21 COMRAM     5     1      4
       _LCD_8BIT_SEND_CHARACTER_DATA
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_set_cursor                                  4     1      3   16639
                                             17 COMRAM     4     1      3
               _GPIO_PIN_WRITE_LOGIC
              _LCD_8BIT_SEND_COMMAND
 ---------------------------------------------------------------------------------
 (3) _LCD_8BIT_SEND_CHARACTER_DATA                         7     5      2    9953
                                             10 COMRAM     7     5      2
               _GPIO_PIN_WRITE_LOGIC
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _Application_intialize                                0     0      0   45635
               _ECU_LAYER_INITIALIZE
 ---------------------------------------------------------------------------------
 (2) _ECU_LAYER_INITIALIZE                                 1     1      0   45635
                _LCD_4BIT_INITIALIZE
                _LCD_8BIT_INITIALIZE
 ---------------------------------------------------------------------------------
 (3) _LCD_8BIT_INITIALIZE                                  5     4      1   22292
                                             17 COMRAM     5     4      1
                _GPIO_PIN_INITIALIZE
               _GPIO_PIN_WRITE_LOGIC
              _LCD_8BIT_SEND_COMMAND
 ---------------------------------------------------------------------------------
 (2) _LCD_8BIT_SEND_COMMAND                                7     5      2   11473
                                             10 COMRAM     7     5      2
               _GPIO_PIN_WRITE_LOGIC
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_enable_signal                          2     1      1    4681
                                              8 COMRAM     2     1      1
               _GPIO_PIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (3) _LCD_4BIT_INITIALIZE                                  5     4      1   23340
                                             18 COMRAM     5     4      1
                _GPIO_PIN_INITIALIZE
              _LCD_4BIT_SEND_COMMAND
 ---------------------------------------------------------------------------------
 (4) _LCD_4BIT_SEND_COMMAND                                3     1      2   16981
                                             15 COMRAM     3     1      2
               _GPIO_PIN_WRITE_LOGIC
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (5) _lcd_send_4bits                                       7     5      2    5226
                                              8 COMRAM     7     5      2
               _GPIO_PIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (5) _lcd_4bit_send_enable_signal                          2     1      1    4833
                                              8 COMRAM     2     1      1
               _GPIO_PIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (4) _GPIO_PIN_INITIALIZE                                  3     2      1    5893
                                              8 COMRAM     3     2      1
      _GPIO_PIN_DIRECTION_INITIALIZE
               _GPIO_PIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (4) _GPIO_PIN_WRITE_LOGIC                                 8     6      2    4437
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (5) _GPIO_PIN_DIRECTION_INITIALIZE                        7     6      1     409
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Application_intialize
     _ECU_LAYER_INITIALIZE
       _LCD_4BIT_INITIALIZE
         _GPIO_PIN_INITIALIZE
           _GPIO_PIN_DIRECTION_INITIALIZE
           _GPIO_PIN_WRITE_LOGIC
         _LCD_4BIT_SEND_COMMAND
           _GPIO_PIN_WRITE_LOGIC
           _lcd_4bit_send_enable_signal
             _GPIO_PIN_WRITE_LOGIC
           _lcd_send_4bits
             _GPIO_PIN_WRITE_LOGIC
       _LCD_8BIT_INITIALIZE
         _GPIO_PIN_INITIALIZE
         _GPIO_PIN_WRITE_LOGIC
         _LCD_8BIT_SEND_COMMAND
           _GPIO_PIN_WRITE_LOGIC
           _lcd_8bit_send_enable_signal
             _GPIO_PIN_WRITE_LOGIC
   _LCD_8BIT_SEND_CUSTOM_CHARACTER
     _LCD_8BIT_SEND_CHARACTER_DATA
       _GPIO_PIN_WRITE_LOGIC
       _lcd_8bit_send_enable_signal
     _LCD_8BIT_SEND_CHARACTER_DATA_POS
       _LCD_8BIT_SEND_CHARACTER_DATA
       _lcd_8bit_set_cursor
         _GPIO_PIN_WRITE_LOGIC
         _LCD_8BIT_SEND_COMMAND
     _LCD_8BIT_SEND_COMMAND

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      48       5       45.0%
BITBIGSFRh          69      0       0      36        0.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     23      59       1       93.7%
BITBIGSFRll         20      0       0      39        0.0%
BITBIGSFRlhh         4      0       0      37        0.0%
BITBIGSFRlhl         4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A1      40        0.0%
DATA                 0      0      A1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Oct 08 00:04:54 2024

                         ?_lcd_send_4bits 0037                    ??_GPIO_PIN_WRITE_LOGIC 0031  
               LCD_8BIT_INITIALIZE@Retval 0044                                       l220 128A  
                                     l260 1882                                       l172 1A74  
                                     l422 159A                                       l342 1A7A  
                                     l239 139A                                       l415 163E  
                                     l336 1052                                       l427 18DE  
                                     l381 17B6                                       l517 1824  
                                     l391 19BA                                       l471 14A6  
                                     l386 19F8                                       l490 1A34  
                                     l485 16C2                                       l478 1746  
                                     _Ret 0059       __end_of_lcd_4bit_send_enable_signal 19FA  
             _lcd_4bit_send_enable_signal 19BC                                       wreg 0FE8  
             __end_of_lcd_8bit_set_cursor 1640               lcd_send_4bits@_data_command 0038  
       lcd_8bit_send_enable_signal@Retval 0038                                      l2301 1794  
                                    l2311 19CC                                      l2303 1798  
                                    l2241 12BC                                      l2313 19D4  
                                    l2305 17B4                                      l2401 14EC  
                                    l2243 12C4                                      l2315 19E0  
                                    l2411 1542                                      l2403 1508  
                                    l2331 19AA                                      l2323 197E  
                                    l2245 1316                                      l2237 128C  
                                    l2341 1856                                      l2317 19E8  
                                    l2309 19BC                                      l2421 157E  
                                    l2413 154E                                      l2405 1516  
                                    l2333 19B8                                      l2325 198E  
                                    l2501 1696                                      l2271 11B2  
                                    l2247 131E                                      l2255 136E  
                                    l2239 129C                                      l2343 185E  
                                    l2319 19F6                                      l2351 1884  
                                    l2423 158A                                      l2415 155A  
                                    l2407 1522                                      l2327 1996  
                                    l2431 13AC                                      l2511 1A64  
                                    l2503 169A                                      l2273 1204  
                                    l2265 117A                                      l2257 1398  
                                    l2345 187C                                      l2337 1826  
                                    l2353 1894                                      l2417 1566  
                                    l2409 153C                                      l2425 1598  
                                    l2329 19A2                                      l2361 16C4  
                                    l2441 13D0                                      l2433 13B4  
                                    l2513 1A64                                      l2505 16B6  
                                    l2521 1A12                                      l2275 120C  
                                    l2283 125C                                      l2267 118A  
                                    l3067 1382                                      l2347 1880  
                                    l2339 1836                                      l2291 1758  
                                    l2355 189C                                      l2419 1572  
                                    l2363 16D4                                      l2451 1416  
                                    l2443 13DC                                      l2435 13C8  
                                    l2515 1A6C                                      l2507 16C0  
                                    l2523 1A32                                      l2285 1288  
                                    l2269 11AA                                      l2293 1760  
                                    l2357 18DC                                      l2373 16F0  
                                    l2381 1744                                      l2365 16DC  
                                    l2453 1430                                      l2445 13E0  
                                    l2429 139C                                      l2461 159C  
                                    l2517 19FA                                      l2391 14D4  
                                    l2375 171A                                      l2367 16E8  
                                    l2455 143C                                      l2447 13FC  
                                    l2471 15DA                                      l2463 15AC  
                                    l2519 1A0A                                      l2289 1748  
                                    l2385 14A8                                      l2377 171E  
                                    l2449 140A                                      l2457 14A4  
                                    l2473 15EE                                      l2481 1616  
                                    l2465 15B4                                      l2299 1768  
                                    l2387 14B8                                      l2379 173A  
                                    l2563 1A76                                      l2491 1658  
                                    l2475 1602                                      l2467 15C0  
                                    l2483 163C                                      l2571 17E2  
                                    l2397 14DC                                      l2389 14C0  
                                    l2493 1664                                      l2469 15C6  
                                    l2581 17FC                                      l2565 17B8  
                                    l2901 115C                                      l2399 14E8  
                                    l2487 1640                                      l2583 180C  
                                    l2567 17C8                                      l2489 1650  
                                    l2577 17E6                                      l2585 1822  
                                    l2569 17D0                                      l2499 166C  
                                    l2579 17FA                                      l2891 10B2  
                                    l2893 10CC                                      l2885 104E  
                                    l2895 10FC                                      l2887 106C  
                                    l2897 1112                                      l2889 1082  
                                    l2899 1142                                      STR_1 1037  
                                    STR_2 1011                                      STR_5 1026  
                                    STR_6 1041                                      STR_8 1049  
                                    u1200 11AA                                      u1201 11A6  
                                    u1300 1856                                      u1301 1852  
                                    u1230 1272                                      u1214 11D0  
                                    u1150 129C                                      u1310 1894  
                                    u1231 126C                                      u1215 11CC  
                                    u1151 1298                                      u1311 1890  
                                    u2007 1076                                      u1224 122A  
                                    u1160 12BC                                      u1240 1758  
                                    u1320 16D4                                      u1400 1650  
                                    u1225 1226                                      u1161 12B8  
                                    u1241 1754                                      u1321 16D0  
                                    u1401 164C                                      u2017 10A6  
                                    u2107 150E                                      u2027 10D6  
                                    u1236 1274                                      u1260 17B4  
                                    u1340 173A                                      u1420 16B6  
                                    u1261 17B0                                      u2117 1528  
                                    u1341 1736                                      u1421 16B2  
                                    u2037 1106                                      _LATA 0F89  
                                    u1190 118A                                      u1174 12E2  
                                    u1270 19CC                                      u1254 1782  
                                    u1350 14B8                                      u1334 170A  
                                    u1414 1686                                      u1430 1A0A  
                                    _LATB 0F8A                                      u1191 1186  
                                    u1175 12DE                                      u1271 19C8  
                                    u1255 177E                                      u2127 153E  
                                    u1351 14B4                                      u1335 1706  
                                    u1415 1682                                      u1431 1A06  
                                    u2047 1136                                      _LATC 0F8B  
                                    u1184 133C                                      u1360 1508  
                                    u1280 198E                                      _LATD 0F8C  
                                    u1185 1338                                      u2137 19E2  
                                    u1361 1504                                      u1281 198A  
                                    u2057 1166                                      _LATE 0F8D  
                                    u1290 1836                                      u1370 13AC  
                                    u1291 1832                                      u2067 1402  
                                    u1371 13A8                                      u1380 13FC  
                                    u1460 17C8                                      u2077 1428  
                                    u1381 13F8                                      u1461 17C4  
                                    u1390 15AC                                      u1470 180C  
                                    u2087 143E                                      u1391 15A8  
                                    u1471 1808                                      u2097 19A4  
                     LED_INITIALIZE@F3739 0058             ??_lcd_4bit_send_enable_signal 0038  
                                    _lcd1 0029                                      _lcd2 001F  
                                    _main 104E                                      fsr2h 0FDA  
                                    indf2 0FDF                                      fsr1l 0FE1  
                                    fsr2l 0FD9                                      prodl 0FF3  
                                    start 0004                             _KEYPAD_VALUES 1001  
                            ___param_bank 0000         LCD_8BIT_SEND_CUSTOM_CHARACTER@chr 004C  
       LCD_8BIT_SEND_CUSTOM_CHARACTER@lcd 0049         LCD_8BIT_SEND_CUSTOM_CHARACTER@row 004A  
                  ?_LCD_4BIT_SEND_COMMAND 003E                           _completed_heart 0060  
    LCD_8BIT_SEND_CUSTOM_CHARACTER@Retval 004E                                     ?_main 002F  
                                   _PORTA 0F80                                     _PORTB 0F81  
                                   _PORTC 0F82                                     _PORTD 0F83  
                                   _PORTE 0F84                                     _TRISA 0F92  
                                   _TRISB 0F93                                     _TRISC 0F94  
                                   _TRISD 0F95                                     _TRISE 0F96  
    LCD_8BIT_SEND_CUSTOM_CHARACTER@column 004B               __end_of_LCD_4BIT_INITIALIZE 159C  
                  ?_Application_intialize 002F                                     tablat 0FF5  
                                   status 0FD8                           __initialization 18E0  
                            __end_of_main 117A              LCD_4BIT_SEND_COMMAND@command 003F  
            __end_of_ECU_LAYER_INITIALIZE 1A76                    lcd_8bit_set_cursor@lcd 0040  
                  lcd_8bit_set_cursor@row 0041                                    ??_main 0050  
                           __activetblptr 0002               __end_of_LCD_8BIT_INITIALIZE 14A8  
                                  clear_0 1926                                    isa$std 0001  
                  LCD_4BIT_INITIALIZE@lcd 0041                          LED_Turn_ON@F3744 0057  
                          _low_battery_00 00A0                            _low_battery_20 0098  
                          _low_battery_40 0090                            _low_battery_60 0088  
                          _low_battery_80 0080                              __pdataCOMRAM 0001  
                            __mediumconst 0000                                    tblptrh 0FF7  
                                  tblptrl 0FF6                                    tblptru 0FF8  
                LCD_4BIT_SEND_COMMAND@lcd 003E                                __accesstop 0060  
                 __end_of__initialization 192C                             ___rparam_used 0001  
                        ??_lcd_send_4bits 0039               LCD_4BIT_SEND_COMMAND@Retval 0040  
                          __pcstackCOMRAM 002F                              __pidataBANK0 1936  
                     _GPIO_PIN_INITIALIZE 1826                     _LCD_8BIT_SEND_COMMAND 16C4  
          ?_GPIO_PIN_DIRECTION_INITIALIZE 002F                      ?_GPIO_PIN_INITIALIZE 0037  
                    LCD_4BIT_INITIALIZE@i 0043                      _ECU_LAYER_INITIALIZE 1A64  
                              __pnvCOMRAM 0059                   ??_LCD_4BIT_SEND_COMMAND 0040  
        ??_LCD_8BIT_SEND_CUSTOM_CHARACTER 004E           ?_LCD_8BIT_SEND_CUSTOM_CHARACTER 0049  
       lcd_4bit_send_enable_signal@Retval 0038                 LCD_4BIT_INITIALIZE@Retval 0045  
                                 _LAT_REG 0001                   ??_Application_intialize 0046  
                   ??_GPIO_PIN_INITIALIZE 0038       __end_of_lcd_8bit_send_enable_signal 19BC  
             _lcd_8bit_send_enable_signal 197E                     ?_ECU_LAYER_INITIALIZE 002F  
                     RELAY_TURN_OFF@F3749 0052            lcd_8bit_send_enable_signal@lcd 0037  
           ??_lcd_8bit_send_enable_signal 0038                    LCD_8BIT_SEND_COMMAND@i 003E  
                                 __Hparam 0000                                   __Lparam 0000  
                  ?_LCD_8BIT_SEND_COMMAND 0039                              __psmallconst 1000  
                                 __pcinit 18E0                                   __ramtop 1000  
         LCD_8BIT_SEND_CHARACTER_DATA@lcd 0039                                   __ptext0 104E  
                                 __ptext1 17B8                                   __ptext2 19FA  
                                 __ptext3 159C                                   __ptext4 1640  
                                 __ptext5 1A76                                   __ptext6 1A64  
                                 __ptext7 139C                                   __ptext8 16C4  
                                 __ptext9 197E  __end_of_LCD_8BIT_SEND_CHARACTER_DATA_POS 1A36  
      ??_LCD_8BIT_SEND_CHARACTER_DATA_POS 0048         ?_LCD_8BIT_SEND_CHARACTER_DATA_POS 0044  
        _LCD_8BIT_SEND_CHARACTER_DATA_POS 19FA                         LED_Turn_OFF@F3749 0056  
                    end_of_initialization 192C                         lcd_send_4bits@lcd 0037  
                         _low_battery_100 0078                             __Lmediumconst 0000  
                              _right_half 0068                                   postdec1 0FE5  
                                 postdec2 0FDD                                   postinc0 0FEE  
                                 postinc2 0FDE       LCD_8BIT_SEND_CHARACTER_DATA_POS@lcd 0044  
     LCD_8BIT_SEND_CHARACTER_DATA_POS@row 0045              LCD_8BIT_SEND_COMMAND@command 003A  
                  ??_ECU_LAYER_INITIALIZE 0046            GPIO_PIN_INITIALIZE@_PIN_CONFIG 0037  
         LCD_8BIT_SEND_CUSTOM_CHARACTER@i 004F                      lcd_send_4bits@Retval 003B  
                           __pidataCOMRAM 1A36                    LCD_8BIT_INITIALIZE@lcd 0040  
                     start_initialization 18E0              ?_lcd_4bit_send_enable_signal 0037  
                LCD_8BIT_SEND_COMMAND@lcd 0039           ??_GPIO_PIN_DIRECTION_INITIALIZE 0030  
              GPIO_PIN_WRITE_LOGIC@Retval 0036                     __end_of_KEYPAD_VALUES 1011  
           __end_of_LCD_4BIT_SEND_COMMAND 18E0                           lcd_send_4bits@i 003C  
                             __pdataBANK0 0060                       _lcd_8bit_set_cursor 159C  
                             __pbssCOMRAM 0052    __end_of_LCD_8BIT_SEND_CUSTOM_CHARACTER 1826  
          _LCD_8BIT_SEND_CUSTOM_CHARACTER 17B8                      LCD_8BIT_INITIALIZE@i 0042  
           __end_of_Application_intialize 1A7C                      ?_lcd_8bit_set_cursor 0040  
            __end_of_GPIO_PIN_WRITE_LOGIC 139C                   ??_LCD_8BIT_SEND_COMMAND 003B  
    __end_of_LCD_8BIT_SEND_CHARACTER_DATA 16C4              _LCD_8BIT_SEND_CHARACTER_DATA 1640  
GPIO_PIN_DIRECTION_INITIALIZE@_PIN_CONFIG 002F                       _LCD_4BIT_INITIALIZE 14A8  
             __end_of_GPIO_PIN_INITIALIZE 1884                               __smallconst 1000  
                      RELAY_TURN_ON@F3743 0053                                 _left_half 0070  
           LCD_8BIT_SEND_CHARACTER_DATA@i 003E                     ??_lcd_8bit_set_cursor 0043  
                    ?_LCD_4BIT_INITIALIZE 0041           GPIO_PIN_WRITE_LOGIC@_PIN_CONFIG 002F  
   __end_of_GPIO_PIN_DIRECTION_INITIALIZE 128C             _GPIO_PIN_DIRECTION_INITIALIZE 117A  
           ?_LCD_8BIT_SEND_CHARACTER_DATA 0039                                  _PORT_REG 000B  
               GPIO_PIN_INITIALIZE@Retval 0039                                  _TRIS_REG 0015  
               lcd_8bit_set_cursor@Retval 0043                 lcd_8bit_set_cursor@column 0042  
                     _LCD_8BIT_INITIALIZE 139C                                 copy_data0 18F4  
                               copy_data1 1914                 GPIO_PIN_WRITE_LOGIC@LOGIC 0030  
                   ??_LCD_4BIT_INITIALIZE 0042     LCD_8BIT_SEND_CUSTOM_CHARACTER@mem_pos 004D  
                                __Hrparam 0000                      ?_LCD_8BIT_INITIALIZE 0040  
                                __Lrparam 0000                      _GPIO_PIN_WRITE_LOGIC 128C  
        LCD_8BIT_SEND_CHARACTER_DATA@data 003A                                  __ptext10 14A8  
                                __ptext11 1884                                  __ptext12 1748  
                                __ptext13 19BC                                  __ptext14 1826  
                                __ptext15 128C                                  __ptext16 117A  
     GPIO_PIN_DIRECTION_INITIALIZE@Retval 0035                     ??_LCD_8BIT_INITIALIZE 0041  
                                isa$xinst 0000                           LED_TOGGLE@F3754 0055  
                          _lcd_send_4bits 1748            ??_LCD_8BIT_SEND_CHARACTER_DATA 003B  
                   ?_GPIO_PIN_WRITE_LOGIC 002F              ?_lcd_8bit_send_enable_signal 0037  
          lcd_4bit_send_enable_signal@lcd 0037        LCD_8BIT_SEND_CHARACTER_DATA@Retval 003D  
           __end_of_LCD_8BIT_SEND_COMMAND 1748                    __end_of_lcd_send_4bits 17B8  
                   _LCD_4BIT_SEND_COMMAND 1884               LCD_8BIT_SEND_COMMAND@Retval 003D  
    LCD_8BIT_SEND_CHARACTER_DATA_POS@data 0047                     _Application_intialize 1A76  
  LCD_8BIT_SEND_CHARACTER_DATA_POS@Retval 0048    LCD_8BIT_SEND_CHARACTER_DATA_POS@column 0046  
                   RELAY_INITIALIZE@F3737 0054  
